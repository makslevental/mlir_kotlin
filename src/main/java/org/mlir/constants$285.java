// Generated by jextract

package org.mlir;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
class constants$285 {

    static final FunctionDescriptor thinlto_codegen_set_cache_size_megabytes$FUNC = FunctionDescriptor.ofVoid(
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_INT$LAYOUT
    );
    static final MethodHandle thinlto_codegen_set_cache_size_megabytes$MH = RuntimeHelper.downcallHandle(
        "thinlto_codegen_set_cache_size_megabytes",
        constants$285.thinlto_codegen_set_cache_size_megabytes$FUNC
    );
    static final FunctionDescriptor thinlto_codegen_set_cache_size_files$FUNC = FunctionDescriptor.ofVoid(
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_INT$LAYOUT
    );
    static final MethodHandle thinlto_codegen_set_cache_size_files$MH = RuntimeHelper.downcallHandle(
        "thinlto_codegen_set_cache_size_files",
        constants$285.thinlto_codegen_set_cache_size_files$FUNC
    );
    static final FunctionDescriptor LLVMInitializeTransformUtils$FUNC = FunctionDescriptor.ofVoid(
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle LLVMInitializeTransformUtils$MH = RuntimeHelper.downcallHandle(
        "LLVMInitializeTransformUtils",
        constants$285.LLVMInitializeTransformUtils$FUNC
    );
    static final FunctionDescriptor LLVMInitializeScalarOpts$FUNC = FunctionDescriptor.ofVoid(
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle LLVMInitializeScalarOpts$MH = RuntimeHelper.downcallHandle(
        "LLVMInitializeScalarOpts",
        constants$285.LLVMInitializeScalarOpts$FUNC
    );
    static final FunctionDescriptor LLVMInitializeVectorization$FUNC = FunctionDescriptor.ofVoid(
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle LLVMInitializeVectorization$MH = RuntimeHelper.downcallHandle(
        "LLVMInitializeVectorization",
        constants$285.LLVMInitializeVectorization$FUNC
    );
    static final FunctionDescriptor LLVMInitializeInstCombine$FUNC = FunctionDescriptor.ofVoid(
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle LLVMInitializeInstCombine$MH = RuntimeHelper.downcallHandle(
        "LLVMInitializeInstCombine",
        constants$285.LLVMInitializeInstCombine$FUNC
    );
}


