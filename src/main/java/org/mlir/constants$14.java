// Generated by jextract

package org.mlir;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
class constants$14 {

    static final FunctionDescriptor mlirOperationGetParentOperation$FUNC = FunctionDescriptor.of(MemoryLayout.structLayout(
        Constants$root.C_POINTER$LAYOUT.withName("ptr")
    ).withName("MlirOperation"),
        MemoryLayout.structLayout(
            Constants$root.C_POINTER$LAYOUT.withName("ptr")
        ).withName("MlirOperation")
    );
    static final MethodHandle mlirOperationGetParentOperation$MH = RuntimeHelper.downcallHandle(
        "mlirOperationGetParentOperation",
        constants$14.mlirOperationGetParentOperation$FUNC
    );
    static final FunctionDescriptor mlirOperationGetNumRegions$FUNC = FunctionDescriptor.of(Constants$root.C_LONG_LONG$LAYOUT,
        MemoryLayout.structLayout(
            Constants$root.C_POINTER$LAYOUT.withName("ptr")
        ).withName("MlirOperation")
    );
    static final MethodHandle mlirOperationGetNumRegions$MH = RuntimeHelper.downcallHandle(
        "mlirOperationGetNumRegions",
        constants$14.mlirOperationGetNumRegions$FUNC
    );
    static final FunctionDescriptor mlirOperationGetRegion$FUNC = FunctionDescriptor.of(MemoryLayout.structLayout(
        Constants$root.C_POINTER$LAYOUT.withName("ptr")
    ).withName("MlirRegion"),
        MemoryLayout.structLayout(
            Constants$root.C_POINTER$LAYOUT.withName("ptr")
        ).withName("MlirOperation"),
        Constants$root.C_LONG_LONG$LAYOUT
    );
    static final MethodHandle mlirOperationGetRegion$MH = RuntimeHelper.downcallHandle(
        "mlirOperationGetRegion",
        constants$14.mlirOperationGetRegion$FUNC
    );
    static final FunctionDescriptor mlirOperationGetNextInBlock$FUNC = FunctionDescriptor.of(MemoryLayout.structLayout(
        Constants$root.C_POINTER$LAYOUT.withName("ptr")
    ).withName("MlirOperation"),
        MemoryLayout.structLayout(
            Constants$root.C_POINTER$LAYOUT.withName("ptr")
        ).withName("MlirOperation")
    );
    static final MethodHandle mlirOperationGetNextInBlock$MH = RuntimeHelper.downcallHandle(
        "mlirOperationGetNextInBlock",
        constants$14.mlirOperationGetNextInBlock$FUNC
    );
    static final FunctionDescriptor mlirOperationGetNumOperands$FUNC = FunctionDescriptor.of(Constants$root.C_LONG_LONG$LAYOUT,
        MemoryLayout.structLayout(
            Constants$root.C_POINTER$LAYOUT.withName("ptr")
        ).withName("MlirOperation")
    );
    static final MethodHandle mlirOperationGetNumOperands$MH = RuntimeHelper.downcallHandle(
        "mlirOperationGetNumOperands",
        constants$14.mlirOperationGetNumOperands$FUNC
    );
    static final FunctionDescriptor mlirOperationGetOperand$FUNC = FunctionDescriptor.of(MemoryLayout.structLayout(
        Constants$root.C_POINTER$LAYOUT.withName("ptr")
    ).withName("MlirValue"),
        MemoryLayout.structLayout(
            Constants$root.C_POINTER$LAYOUT.withName("ptr")
        ).withName("MlirOperation"),
        Constants$root.C_LONG_LONG$LAYOUT
    );
    static final MethodHandle mlirOperationGetOperand$MH = RuntimeHelper.downcallHandle(
        "mlirOperationGetOperand",
        constants$14.mlirOperationGetOperand$FUNC
    );
}


