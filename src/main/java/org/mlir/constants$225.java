// Generated by jextract

package org.mlir;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
class constants$225 {

    static final FunctionDescriptor mlirPassManagerCreate$FUNC = FunctionDescriptor.of(MemoryLayout.structLayout(
        Constants$root.C_POINTER$LAYOUT.withName("ptr")
    ).withName("MlirPassManager"),
        MemoryLayout.structLayout(
            Constants$root.C_POINTER$LAYOUT.withName("ptr")
        ).withName("MlirContext")
    );
    static final MethodHandle mlirPassManagerCreate$MH = RuntimeHelper.downcallHandle(
        "mlirPassManagerCreate",
        constants$225.mlirPassManagerCreate$FUNC
    );
    static final FunctionDescriptor mlirPassManagerCreateOnOperation$FUNC = FunctionDescriptor.of(MemoryLayout.structLayout(
        Constants$root.C_POINTER$LAYOUT.withName("ptr")
    ).withName("MlirPassManager"),
        MemoryLayout.structLayout(
            Constants$root.C_POINTER$LAYOUT.withName("ptr")
        ).withName("MlirContext"),
        MemoryLayout.structLayout(
            Constants$root.C_POINTER$LAYOUT.withName("data"),
            Constants$root.C_LONG_LONG$LAYOUT.withName("length")
        ).withName("MlirStringRef")
    );
    static final MethodHandle mlirPassManagerCreateOnOperation$MH = RuntimeHelper.downcallHandle(
        "mlirPassManagerCreateOnOperation",
        constants$225.mlirPassManagerCreateOnOperation$FUNC
    );
    static final FunctionDescriptor mlirPassManagerDestroy$FUNC = FunctionDescriptor.ofVoid(
        MemoryLayout.structLayout(
            Constants$root.C_POINTER$LAYOUT.withName("ptr")
        ).withName("MlirPassManager")
    );
    static final MethodHandle mlirPassManagerDestroy$MH = RuntimeHelper.downcallHandle(
        "mlirPassManagerDestroy",
        constants$225.mlirPassManagerDestroy$FUNC
    );
    static final FunctionDescriptor mlirPassManagerIsNull$FUNC = FunctionDescriptor.of(Constants$root.C_BOOL$LAYOUT,
        MemoryLayout.structLayout(
            Constants$root.C_POINTER$LAYOUT.withName("ptr")
        ).withName("MlirPassManager")
    );
    static final MethodHandle mlirPassManagerIsNull$MH = RuntimeHelper.downcallHandle(
        "mlirPassManagerIsNull",
        constants$225.mlirPassManagerIsNull$FUNC
    );
    static final FunctionDescriptor mlirPassManagerGetAsOpPassManager$FUNC = FunctionDescriptor.of(MemoryLayout.structLayout(
        Constants$root.C_POINTER$LAYOUT.withName("ptr")
    ).withName("MlirOpPassManager"),
        MemoryLayout.structLayout(
            Constants$root.C_POINTER$LAYOUT.withName("ptr")
        ).withName("MlirPassManager")
    );
    static final MethodHandle mlirPassManagerGetAsOpPassManager$MH = RuntimeHelper.downcallHandle(
        "mlirPassManagerGetAsOpPassManager",
        constants$225.mlirPassManagerGetAsOpPassManager$FUNC
    );
    static final FunctionDescriptor mlirPassManagerRun$FUNC = FunctionDescriptor.of(MemoryLayout.structLayout(
        Constants$root.C_CHAR$LAYOUT.withName("value")
    ).withName("MlirLogicalResult"),
        MemoryLayout.structLayout(
            Constants$root.C_POINTER$LAYOUT.withName("ptr")
        ).withName("MlirPassManager"),
        MemoryLayout.structLayout(
            Constants$root.C_POINTER$LAYOUT.withName("ptr")
        ).withName("MlirModule")
    );
    static final MethodHandle mlirPassManagerRun$MH = RuntimeHelper.downcallHandle(
        "mlirPassManagerRun",
        constants$225.mlirPassManagerRun$FUNC
    );
}


