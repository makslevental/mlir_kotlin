// Generated by jextract

package org.mlir;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
class constants$130 {

    static final FunctionDescriptor LLVMAlignOf$FUNC = FunctionDescriptor.of(Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle LLVMAlignOf$MH = RuntimeHelper.downcallHandle(
        "LLVMAlignOf",
        constants$130.LLVMAlignOf$FUNC
    );
    static final FunctionDescriptor LLVMSizeOf$FUNC = FunctionDescriptor.of(Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle LLVMSizeOf$MH = RuntimeHelper.downcallHandle(
        "LLVMSizeOf",
        constants$130.LLVMSizeOf$FUNC
    );
    static final FunctionDescriptor LLVMConstNeg$FUNC = FunctionDescriptor.of(Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle LLVMConstNeg$MH = RuntimeHelper.downcallHandle(
        "LLVMConstNeg",
        constants$130.LLVMConstNeg$FUNC
    );
    static final FunctionDescriptor LLVMConstNSWNeg$FUNC = FunctionDescriptor.of(Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle LLVMConstNSWNeg$MH = RuntimeHelper.downcallHandle(
        "LLVMConstNSWNeg",
        constants$130.LLVMConstNSWNeg$FUNC
    );
    static final FunctionDescriptor LLVMConstNUWNeg$FUNC = FunctionDescriptor.of(Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle LLVMConstNUWNeg$MH = RuntimeHelper.downcallHandle(
        "LLVMConstNUWNeg",
        constants$130.LLVMConstNUWNeg$FUNC
    );
    static final FunctionDescriptor LLVMConstNot$FUNC = FunctionDescriptor.of(Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle LLVMConstNot$MH = RuntimeHelper.downcallHandle(
        "LLVMConstNot",
        constants$130.LLVMConstNot$FUNC
    );
}


