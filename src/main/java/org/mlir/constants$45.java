// Generated by jextract

package org.mlir;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
class constants$45 {

    static final FunctionDescriptor mlirAffineModExprGet$FUNC = FunctionDescriptor.of(MemoryLayout.structLayout(
        Constants$root.C_POINTER$LAYOUT.withName("ptr")
    ).withName("MlirAffineExpr"),
        MemoryLayout.structLayout(
            Constants$root.C_POINTER$LAYOUT.withName("ptr")
        ).withName("MlirAffineExpr"),
        MemoryLayout.structLayout(
            Constants$root.C_POINTER$LAYOUT.withName("ptr")
        ).withName("MlirAffineExpr")
    );
    static final MethodHandle mlirAffineModExprGet$MH = RuntimeHelper.downcallHandle(
        "mlirAffineModExprGet",
        constants$45.mlirAffineModExprGet$FUNC
    );
    static final FunctionDescriptor mlirAffineExprIsAFloorDiv$FUNC = FunctionDescriptor.of(Constants$root.C_BOOL$LAYOUT,
        MemoryLayout.structLayout(
            Constants$root.C_POINTER$LAYOUT.withName("ptr")
        ).withName("MlirAffineExpr")
    );
    static final MethodHandle mlirAffineExprIsAFloorDiv$MH = RuntimeHelper.downcallHandle(
        "mlirAffineExprIsAFloorDiv",
        constants$45.mlirAffineExprIsAFloorDiv$FUNC
    );
    static final FunctionDescriptor mlirAffineFloorDivExprGet$FUNC = FunctionDescriptor.of(MemoryLayout.structLayout(
        Constants$root.C_POINTER$LAYOUT.withName("ptr")
    ).withName("MlirAffineExpr"),
        MemoryLayout.structLayout(
            Constants$root.C_POINTER$LAYOUT.withName("ptr")
        ).withName("MlirAffineExpr"),
        MemoryLayout.structLayout(
            Constants$root.C_POINTER$LAYOUT.withName("ptr")
        ).withName("MlirAffineExpr")
    );
    static final MethodHandle mlirAffineFloorDivExprGet$MH = RuntimeHelper.downcallHandle(
        "mlirAffineFloorDivExprGet",
        constants$45.mlirAffineFloorDivExprGet$FUNC
    );
    static final FunctionDescriptor mlirAffineExprIsACeilDiv$FUNC = FunctionDescriptor.of(Constants$root.C_BOOL$LAYOUT,
        MemoryLayout.structLayout(
            Constants$root.C_POINTER$LAYOUT.withName("ptr")
        ).withName("MlirAffineExpr")
    );
    static final MethodHandle mlirAffineExprIsACeilDiv$MH = RuntimeHelper.downcallHandle(
        "mlirAffineExprIsACeilDiv",
        constants$45.mlirAffineExprIsACeilDiv$FUNC
    );
    static final FunctionDescriptor mlirAffineCeilDivExprGet$FUNC = FunctionDescriptor.of(MemoryLayout.structLayout(
        Constants$root.C_POINTER$LAYOUT.withName("ptr")
    ).withName("MlirAffineExpr"),
        MemoryLayout.structLayout(
            Constants$root.C_POINTER$LAYOUT.withName("ptr")
        ).withName("MlirAffineExpr"),
        MemoryLayout.structLayout(
            Constants$root.C_POINTER$LAYOUT.withName("ptr")
        ).withName("MlirAffineExpr")
    );
    static final MethodHandle mlirAffineCeilDivExprGet$MH = RuntimeHelper.downcallHandle(
        "mlirAffineCeilDivExprGet",
        constants$45.mlirAffineCeilDivExprGet$FUNC
    );
    static final FunctionDescriptor mlirAffineExprIsABinary$FUNC = FunctionDescriptor.of(Constants$root.C_BOOL$LAYOUT,
        MemoryLayout.structLayout(
            Constants$root.C_POINTER$LAYOUT.withName("ptr")
        ).withName("MlirAffineExpr")
    );
    static final MethodHandle mlirAffineExprIsABinary$MH = RuntimeHelper.downcallHandle(
        "mlirAffineExprIsABinary",
        constants$45.mlirAffineExprIsABinary$FUNC
    );
}


