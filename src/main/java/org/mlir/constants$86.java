// Generated by jextract

package org.mlir;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
class constants$86 {

    static final FunctionDescriptor LLVMModuleCreateWithNameInContext$FUNC = FunctionDescriptor.of(Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle LLVMModuleCreateWithNameInContext$MH = RuntimeHelper.downcallHandle(
        "LLVMModuleCreateWithNameInContext",
        constants$86.LLVMModuleCreateWithNameInContext$FUNC
    );
    static final FunctionDescriptor LLVMCloneModule$FUNC = FunctionDescriptor.of(Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle LLVMCloneModule$MH = RuntimeHelper.downcallHandle(
        "LLVMCloneModule",
        constants$86.LLVMCloneModule$FUNC
    );
    static final FunctionDescriptor LLVMDisposeModule$FUNC = FunctionDescriptor.ofVoid(
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle LLVMDisposeModule$MH = RuntimeHelper.downcallHandle(
        "LLVMDisposeModule",
        constants$86.LLVMDisposeModule$FUNC
    );
    static final FunctionDescriptor LLVMGetModuleIdentifier$FUNC = FunctionDescriptor.of(Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle LLVMGetModuleIdentifier$MH = RuntimeHelper.downcallHandle(
        "LLVMGetModuleIdentifier",
        constants$86.LLVMGetModuleIdentifier$FUNC
    );
    static final FunctionDescriptor LLVMSetModuleIdentifier$FUNC = FunctionDescriptor.ofVoid(
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_LONG_LONG$LAYOUT
    );
    static final MethodHandle LLVMSetModuleIdentifier$MH = RuntimeHelper.downcallHandle(
        "LLVMSetModuleIdentifier",
        constants$86.LLVMSetModuleIdentifier$FUNC
    );
    static final FunctionDescriptor LLVMGetSourceFileName$FUNC = FunctionDescriptor.of(Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle LLVMGetSourceFileName$MH = RuntimeHelper.downcallHandle(
        "LLVMGetSourceFileName",
        constants$86.LLVMGetSourceFileName$FUNC
    );
}


