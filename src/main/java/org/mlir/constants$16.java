// Generated by jextract

package org.mlir;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
class constants$16 {

    static final FunctionDescriptor mlirOperationGetAttribute$FUNC = FunctionDescriptor.of(MemoryLayout.structLayout(
        MemoryLayout.structLayout(
            Constants$root.C_POINTER$LAYOUT.withName("ptr")
        ).withName("name"),
        MemoryLayout.structLayout(
            Constants$root.C_POINTER$LAYOUT.withName("ptr")
        ).withName("attribute")
    ).withName("MlirNamedAttribute"),
        MemoryLayout.structLayout(
            Constants$root.C_POINTER$LAYOUT.withName("ptr")
        ).withName("MlirOperation"),
        Constants$root.C_LONG_LONG$LAYOUT
    );
    static final MethodHandle mlirOperationGetAttribute$MH = RuntimeHelper.downcallHandle(
        "mlirOperationGetAttribute",
        constants$16.mlirOperationGetAttribute$FUNC
    );
    static final FunctionDescriptor mlirOperationGetAttributeByName$FUNC = FunctionDescriptor.of(MemoryLayout.structLayout(
        Constants$root.C_POINTER$LAYOUT.withName("ptr")
    ).withName("MlirAttribute"),
        MemoryLayout.structLayout(
            Constants$root.C_POINTER$LAYOUT.withName("ptr")
        ).withName("MlirOperation"),
        MemoryLayout.structLayout(
            Constants$root.C_POINTER$LAYOUT.withName("data"),
            Constants$root.C_LONG_LONG$LAYOUT.withName("length")
        ).withName("MlirStringRef")
    );
    static final MethodHandle mlirOperationGetAttributeByName$MH = RuntimeHelper.downcallHandle(
        "mlirOperationGetAttributeByName",
        constants$16.mlirOperationGetAttributeByName$FUNC
    );
    static final FunctionDescriptor mlirOperationSetAttributeByName$FUNC = FunctionDescriptor.ofVoid(
        MemoryLayout.structLayout(
            Constants$root.C_POINTER$LAYOUT.withName("ptr")
        ).withName("MlirOperation"),
        MemoryLayout.structLayout(
            Constants$root.C_POINTER$LAYOUT.withName("data"),
            Constants$root.C_LONG_LONG$LAYOUT.withName("length")
        ).withName("MlirStringRef"),
        MemoryLayout.structLayout(
            Constants$root.C_POINTER$LAYOUT.withName("ptr")
        ).withName("MlirAttribute")
    );
    static final MethodHandle mlirOperationSetAttributeByName$MH = RuntimeHelper.downcallHandle(
        "mlirOperationSetAttributeByName",
        constants$16.mlirOperationSetAttributeByName$FUNC
    );
    static final FunctionDescriptor mlirOperationRemoveAttributeByName$FUNC = FunctionDescriptor.of(Constants$root.C_BOOL$LAYOUT,
        MemoryLayout.structLayout(
            Constants$root.C_POINTER$LAYOUT.withName("ptr")
        ).withName("MlirOperation"),
        MemoryLayout.structLayout(
            Constants$root.C_POINTER$LAYOUT.withName("data"),
            Constants$root.C_LONG_LONG$LAYOUT.withName("length")
        ).withName("MlirStringRef")
    );
    static final MethodHandle mlirOperationRemoveAttributeByName$MH = RuntimeHelper.downcallHandle(
        "mlirOperationRemoveAttributeByName",
        constants$16.mlirOperationRemoveAttributeByName$FUNC
    );
    static final FunctionDescriptor mlirOperationPrint$FUNC = FunctionDescriptor.ofVoid(
        MemoryLayout.structLayout(
            Constants$root.C_POINTER$LAYOUT.withName("ptr")
        ).withName("MlirOperation"),
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle mlirOperationPrint$MH = RuntimeHelper.downcallHandle(
        "mlirOperationPrint",
        constants$16.mlirOperationPrint$FUNC
    );
    static final FunctionDescriptor mlirOperationPrintWithFlags$FUNC = FunctionDescriptor.ofVoid(
        MemoryLayout.structLayout(
            Constants$root.C_POINTER$LAYOUT.withName("ptr")
        ).withName("MlirOperation"),
        MemoryLayout.structLayout(
            Constants$root.C_POINTER$LAYOUT.withName("ptr")
        ).withName("MlirOpPrintingFlags"),
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle mlirOperationPrintWithFlags$MH = RuntimeHelper.downcallHandle(
        "mlirOperationPrintWithFlags",
        constants$16.mlirOperationPrintWithFlags$FUNC
    );
}


