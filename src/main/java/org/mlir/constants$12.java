// Generated by jextract

package org.mlir;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
class constants$12 {

    static final FunctionDescriptor mlirOpPrintingFlagsAssumeVerified$FUNC = FunctionDescriptor.ofVoid(
        MemoryLayout.structLayout(
            Constants$root.C_POINTER$LAYOUT.withName("ptr")
        ).withName("MlirOpPrintingFlags")
    );
    static final MethodHandle mlirOpPrintingFlagsAssumeVerified$MH = RuntimeHelper.downcallHandle(
        "mlirOpPrintingFlagsAssumeVerified",
        constants$12.mlirOpPrintingFlagsAssumeVerified$FUNC
    );
    static final FunctionDescriptor mlirOperationCreate$FUNC = FunctionDescriptor.of(MemoryLayout.structLayout(
        Constants$root.C_POINTER$LAYOUT.withName("ptr")
    ).withName("MlirOperation"),
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle mlirOperationCreate$MH = RuntimeHelper.downcallHandle(
        "mlirOperationCreate",
        constants$12.mlirOperationCreate$FUNC
    );
    static final FunctionDescriptor mlirOperationClone$FUNC = FunctionDescriptor.of(MemoryLayout.structLayout(
        Constants$root.C_POINTER$LAYOUT.withName("ptr")
    ).withName("MlirOperation"),
        MemoryLayout.structLayout(
            Constants$root.C_POINTER$LAYOUT.withName("ptr")
        ).withName("MlirOperation")
    );
    static final MethodHandle mlirOperationClone$MH = RuntimeHelper.downcallHandle(
        "mlirOperationClone",
        constants$12.mlirOperationClone$FUNC
    );
    static final FunctionDescriptor mlirOperationDestroy$FUNC = FunctionDescriptor.ofVoid(
        MemoryLayout.structLayout(
            Constants$root.C_POINTER$LAYOUT.withName("ptr")
        ).withName("MlirOperation")
    );
    static final MethodHandle mlirOperationDestroy$MH = RuntimeHelper.downcallHandle(
        "mlirOperationDestroy",
        constants$12.mlirOperationDestroy$FUNC
    );
    static final FunctionDescriptor mlirOperationRemoveFromParent$FUNC = FunctionDescriptor.ofVoid(
        MemoryLayout.structLayout(
            Constants$root.C_POINTER$LAYOUT.withName("ptr")
        ).withName("MlirOperation")
    );
    static final MethodHandle mlirOperationRemoveFromParent$MH = RuntimeHelper.downcallHandle(
        "mlirOperationRemoveFromParent",
        constants$12.mlirOperationRemoveFromParent$FUNC
    );
    static final FunctionDescriptor mlirOperationIsNull$FUNC = FunctionDescriptor.of(Constants$root.C_BOOL$LAYOUT,
        MemoryLayout.structLayout(
            Constants$root.C_POINTER$LAYOUT.withName("ptr")
        ).withName("MlirOperation")
    );
    static final MethodHandle mlirOperationIsNull$MH = RuntimeHelper.downcallHandle(
        "mlirOperationIsNull",
        constants$12.mlirOperationIsNull$FUNC
    );
}


