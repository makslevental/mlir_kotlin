// Generated by jextract

package org.mlir;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
class constants$260 {

    static final FunctionDescriptor LLVMMemoryManagerAllocateDataSectionCallback$FUNC = FunctionDescriptor.of(Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_LONG_LONG$LAYOUT,
        Constants$root.C_INT$LAYOUT,
        Constants$root.C_INT$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_INT$LAYOUT
    );
    static final MethodHandle LLVMMemoryManagerAllocateDataSectionCallback$MH = RuntimeHelper.downcallHandle(
        constants$260.LLVMMemoryManagerAllocateDataSectionCallback$FUNC
    );
    static final FunctionDescriptor LLVMMemoryManagerFinalizeMemoryCallback$FUNC = FunctionDescriptor.of(Constants$root.C_INT$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle LLVMMemoryManagerFinalizeMemoryCallback$MH = RuntimeHelper.downcallHandle(
        constants$260.LLVMMemoryManagerFinalizeMemoryCallback$FUNC
    );
    static final FunctionDescriptor LLVMMemoryManagerDestroyCallback$FUNC = FunctionDescriptor.ofVoid(
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle LLVMMemoryManagerDestroyCallback$MH = RuntimeHelper.downcallHandle(
        constants$260.LLVMMemoryManagerDestroyCallback$FUNC
    );
}


