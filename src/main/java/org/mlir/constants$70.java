// Generated by jextract

package org.mlir;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
class constants$70 {

    static final FunctionDescriptor LLVMInitializeAllAsmPrinters$FUNC = FunctionDescriptor.ofVoid();
    static final MethodHandle LLVMInitializeAllAsmPrinters$MH = RuntimeHelper.downcallHandle(
        "LLVMInitializeAllAsmPrinters",
        constants$70.LLVMInitializeAllAsmPrinters$FUNC
    );
    static final FunctionDescriptor LLVMInitializeAllAsmParsers$FUNC = FunctionDescriptor.ofVoid();
    static final MethodHandle LLVMInitializeAllAsmParsers$MH = RuntimeHelper.downcallHandle(
        "LLVMInitializeAllAsmParsers",
        constants$70.LLVMInitializeAllAsmParsers$FUNC
    );
    static final FunctionDescriptor LLVMInitializeAllDisassemblers$FUNC = FunctionDescriptor.ofVoid();
    static final MethodHandle LLVMInitializeAllDisassemblers$MH = RuntimeHelper.downcallHandle(
        "LLVMInitializeAllDisassemblers",
        constants$70.LLVMInitializeAllDisassemblers$FUNC
    );
    static final FunctionDescriptor LLVMInitializeNativeTarget$FUNC = FunctionDescriptor.of(Constants$root.C_INT$LAYOUT);
    static final MethodHandle LLVMInitializeNativeTarget$MH = RuntimeHelper.downcallHandle(
        "LLVMInitializeNativeTarget",
        constants$70.LLVMInitializeNativeTarget$FUNC
    );
    static final FunctionDescriptor LLVMInitializeNativeAsmParser$FUNC = FunctionDescriptor.of(Constants$root.C_INT$LAYOUT);
    static final MethodHandle LLVMInitializeNativeAsmParser$MH = RuntimeHelper.downcallHandle(
        "LLVMInitializeNativeAsmParser",
        constants$70.LLVMInitializeNativeAsmParser$FUNC
    );
    static final FunctionDescriptor LLVMInitializeNativeAsmPrinter$FUNC = FunctionDescriptor.of(Constants$root.C_INT$LAYOUT);
    static final MethodHandle LLVMInitializeNativeAsmPrinter$MH = RuntimeHelper.downcallHandle(
        "LLVMInitializeNativeAsmPrinter",
        constants$70.LLVMInitializeNativeAsmPrinter$FUNC
    );
}


