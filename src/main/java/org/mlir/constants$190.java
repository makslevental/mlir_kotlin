// Generated by jextract

package org.mlir;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
class constants$190 {

    static final FunctionDescriptor LLVMBuildCall2$FUNC = FunctionDescriptor.of(Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_INT$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle LLVMBuildCall2$MH = RuntimeHelper.downcallHandle(
        "LLVMBuildCall2",
        constants$190.LLVMBuildCall2$FUNC
    );
    static final FunctionDescriptor LLVMBuildSelect$FUNC = FunctionDescriptor.of(Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle LLVMBuildSelect$MH = RuntimeHelper.downcallHandle(
        "LLVMBuildSelect",
        constants$190.LLVMBuildSelect$FUNC
    );
    static final FunctionDescriptor LLVMBuildVAArg$FUNC = FunctionDescriptor.of(Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle LLVMBuildVAArg$MH = RuntimeHelper.downcallHandle(
        "LLVMBuildVAArg",
        constants$190.LLVMBuildVAArg$FUNC
    );
    static final FunctionDescriptor LLVMBuildExtractElement$FUNC = FunctionDescriptor.of(Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle LLVMBuildExtractElement$MH = RuntimeHelper.downcallHandle(
        "LLVMBuildExtractElement",
        constants$190.LLVMBuildExtractElement$FUNC
    );
    static final FunctionDescriptor LLVMBuildInsertElement$FUNC = FunctionDescriptor.of(Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle LLVMBuildInsertElement$MH = RuntimeHelper.downcallHandle(
        "LLVMBuildInsertElement",
        constants$190.LLVMBuildInsertElement$FUNC
    );
    static final FunctionDescriptor LLVMBuildShuffleVector$FUNC = FunctionDescriptor.of(Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle LLVMBuildShuffleVector$MH = RuntimeHelper.downcallHandle(
        "LLVMBuildShuffleVector",
        constants$190.LLVMBuildShuffleVector$FUNC
    );
}


