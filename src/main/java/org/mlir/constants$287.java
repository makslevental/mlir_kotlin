// Generated by jextract

package org.mlir;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
class constants$287 {

    static final FunctionDescriptor LLVMCreatePassBuilderOptions$FUNC = FunctionDescriptor.of(Constants$root.C_POINTER$LAYOUT);
    static final MethodHandle LLVMCreatePassBuilderOptions$MH = RuntimeHelper.downcallHandle(
        "LLVMCreatePassBuilderOptions",
        constants$287.LLVMCreatePassBuilderOptions$FUNC
    );
    static final FunctionDescriptor LLVMPassBuilderOptionsSetVerifyEach$FUNC = FunctionDescriptor.ofVoid(
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_INT$LAYOUT
    );
    static final MethodHandle LLVMPassBuilderOptionsSetVerifyEach$MH = RuntimeHelper.downcallHandle(
        "LLVMPassBuilderOptionsSetVerifyEach",
        constants$287.LLVMPassBuilderOptionsSetVerifyEach$FUNC
    );
    static final FunctionDescriptor LLVMPassBuilderOptionsSetDebugLogging$FUNC = FunctionDescriptor.ofVoid(
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_INT$LAYOUT
    );
    static final MethodHandle LLVMPassBuilderOptionsSetDebugLogging$MH = RuntimeHelper.downcallHandle(
        "LLVMPassBuilderOptionsSetDebugLogging",
        constants$287.LLVMPassBuilderOptionsSetDebugLogging$FUNC
    );
    static final FunctionDescriptor LLVMPassBuilderOptionsSetLoopInterleaving$FUNC = FunctionDescriptor.ofVoid(
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_INT$LAYOUT
    );
    static final MethodHandle LLVMPassBuilderOptionsSetLoopInterleaving$MH = RuntimeHelper.downcallHandle(
        "LLVMPassBuilderOptionsSetLoopInterleaving",
        constants$287.LLVMPassBuilderOptionsSetLoopInterleaving$FUNC
    );
    static final FunctionDescriptor LLVMPassBuilderOptionsSetLoopVectorization$FUNC = FunctionDescriptor.ofVoid(
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_INT$LAYOUT
    );
    static final MethodHandle LLVMPassBuilderOptionsSetLoopVectorization$MH = RuntimeHelper.downcallHandle(
        "LLVMPassBuilderOptionsSetLoopVectorization",
        constants$287.LLVMPassBuilderOptionsSetLoopVectorization$FUNC
    );
    static final FunctionDescriptor LLVMPassBuilderOptionsSetSLPVectorization$FUNC = FunctionDescriptor.ofVoid(
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_INT$LAYOUT
    );
    static final MethodHandle LLVMPassBuilderOptionsSetSLPVectorization$MH = RuntimeHelper.downcallHandle(
        "LLVMPassBuilderOptionsSetSLPVectorization",
        constants$287.LLVMPassBuilderOptionsSetSLPVectorization$FUNC
    );
}


