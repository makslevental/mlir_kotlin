// Generated by jextract

package org.mlir;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
class constants$349 {

    static final FunctionDescriptor mlirDenseElementsAttrFloatGet$FUNC = FunctionDescriptor.of(MemoryLayout.structLayout(
        Constants$root.C_POINTER$LAYOUT.withName("ptr")
    ).withName("MlirAttribute"),
        MemoryLayout.structLayout(
            Constants$root.C_POINTER$LAYOUT.withName("ptr")
        ).withName("MlirType"),
        Constants$root.C_LONG_LONG$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle mlirDenseElementsAttrFloatGet$MH = RuntimeHelper.downcallHandle(
        "mlirDenseElementsAttrFloatGet",
        constants$349.mlirDenseElementsAttrFloatGet$FUNC
    );
    static final FunctionDescriptor mlirDenseElementsAttrDoubleGet$FUNC = FunctionDescriptor.of(MemoryLayout.structLayout(
        Constants$root.C_POINTER$LAYOUT.withName("ptr")
    ).withName("MlirAttribute"),
        MemoryLayout.structLayout(
            Constants$root.C_POINTER$LAYOUT.withName("ptr")
        ).withName("MlirType"),
        Constants$root.C_LONG_LONG$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle mlirDenseElementsAttrDoubleGet$MH = RuntimeHelper.downcallHandle(
        "mlirDenseElementsAttrDoubleGet",
        constants$349.mlirDenseElementsAttrDoubleGet$FUNC
    );
    static final FunctionDescriptor mlirDenseElementsAttrBFloat16Get$FUNC = FunctionDescriptor.of(MemoryLayout.structLayout(
        Constants$root.C_POINTER$LAYOUT.withName("ptr")
    ).withName("MlirAttribute"),
        MemoryLayout.structLayout(
            Constants$root.C_POINTER$LAYOUT.withName("ptr")
        ).withName("MlirType"),
        Constants$root.C_LONG_LONG$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle mlirDenseElementsAttrBFloat16Get$MH = RuntimeHelper.downcallHandle(
        "mlirDenseElementsAttrBFloat16Get",
        constants$349.mlirDenseElementsAttrBFloat16Get$FUNC
    );
    static final FunctionDescriptor mlirDenseElementsAttrFloat16Get$FUNC = FunctionDescriptor.of(MemoryLayout.structLayout(
        Constants$root.C_POINTER$LAYOUT.withName("ptr")
    ).withName("MlirAttribute"),
        MemoryLayout.structLayout(
            Constants$root.C_POINTER$LAYOUT.withName("ptr")
        ).withName("MlirType"),
        Constants$root.C_LONG_LONG$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle mlirDenseElementsAttrFloat16Get$MH = RuntimeHelper.downcallHandle(
        "mlirDenseElementsAttrFloat16Get",
        constants$349.mlirDenseElementsAttrFloat16Get$FUNC
    );
    static final FunctionDescriptor mlirDenseElementsAttrStringGet$FUNC = FunctionDescriptor.of(MemoryLayout.structLayout(
        Constants$root.C_POINTER$LAYOUT.withName("ptr")
    ).withName("MlirAttribute"),
        MemoryLayout.structLayout(
            Constants$root.C_POINTER$LAYOUT.withName("ptr")
        ).withName("MlirType"),
        Constants$root.C_LONG_LONG$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle mlirDenseElementsAttrStringGet$MH = RuntimeHelper.downcallHandle(
        "mlirDenseElementsAttrStringGet",
        constants$349.mlirDenseElementsAttrStringGet$FUNC
    );
    static final FunctionDescriptor mlirDenseElementsAttrReshapeGet$FUNC = FunctionDescriptor.of(MemoryLayout.structLayout(
        Constants$root.C_POINTER$LAYOUT.withName("ptr")
    ).withName("MlirAttribute"),
        MemoryLayout.structLayout(
            Constants$root.C_POINTER$LAYOUT.withName("ptr")
        ).withName("MlirAttribute"),
        MemoryLayout.structLayout(
            Constants$root.C_POINTER$LAYOUT.withName("ptr")
        ).withName("MlirType")
    );
    static final MethodHandle mlirDenseElementsAttrReshapeGet$MH = RuntimeHelper.downcallHandle(
        "mlirDenseElementsAttrReshapeGet",
        constants$349.mlirDenseElementsAttrReshapeGet$FUNC
    );
}


