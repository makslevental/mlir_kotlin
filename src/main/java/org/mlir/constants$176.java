// Generated by jextract

package org.mlir;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
class constants$176 {

    static final FunctionDescriptor LLVMGetArgOperand$FUNC = FunctionDescriptor.of(Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_INT$LAYOUT
    );
    static final MethodHandle LLVMGetArgOperand$MH = RuntimeHelper.downcallHandle(
        "LLVMGetArgOperand",
        constants$176.LLVMGetArgOperand$FUNC
    );
    static final FunctionDescriptor LLVMSetArgOperand$FUNC = FunctionDescriptor.ofVoid(
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_INT$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle LLVMSetArgOperand$MH = RuntimeHelper.downcallHandle(
        "LLVMSetArgOperand",
        constants$176.LLVMSetArgOperand$FUNC
    );
    static final FunctionDescriptor LLVMGetParentCatchSwitch$FUNC = FunctionDescriptor.of(Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle LLVMGetParentCatchSwitch$MH = RuntimeHelper.downcallHandle(
        "LLVMGetParentCatchSwitch",
        constants$176.LLVMGetParentCatchSwitch$FUNC
    );
    static final FunctionDescriptor LLVMSetParentCatchSwitch$FUNC = FunctionDescriptor.ofVoid(
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle LLVMSetParentCatchSwitch$MH = RuntimeHelper.downcallHandle(
        "LLVMSetParentCatchSwitch",
        constants$176.LLVMSetParentCatchSwitch$FUNC
    );
    static final FunctionDescriptor LLVMBuildAdd$FUNC = FunctionDescriptor.of(Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle LLVMBuildAdd$MH = RuntimeHelper.downcallHandle(
        "LLVMBuildAdd",
        constants$176.LLVMBuildAdd$FUNC
    );
    static final FunctionDescriptor LLVMBuildNSWAdd$FUNC = FunctionDescriptor.of(Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle LLVMBuildNSWAdd$MH = RuntimeHelper.downcallHandle(
        "LLVMBuildNSWAdd",
        constants$176.LLVMBuildNSWAdd$FUNC
    );
}


