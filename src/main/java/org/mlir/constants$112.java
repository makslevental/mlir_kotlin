// Generated by jextract

package org.mlir;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
class constants$112 {

    static final FunctionDescriptor LLVMIsAGlobalVariable$FUNC = FunctionDescriptor.of(Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle LLVMIsAGlobalVariable$MH = RuntimeHelper.downcallHandle(
        "LLVMIsAGlobalVariable",
        constants$112.LLVMIsAGlobalVariable$FUNC
    );
    static final FunctionDescriptor LLVMIsAGlobalIFunc$FUNC = FunctionDescriptor.of(Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle LLVMIsAGlobalIFunc$MH = RuntimeHelper.downcallHandle(
        "LLVMIsAGlobalIFunc",
        constants$112.LLVMIsAGlobalIFunc$FUNC
    );
    static final FunctionDescriptor LLVMIsAUndefValue$FUNC = FunctionDescriptor.of(Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle LLVMIsAUndefValue$MH = RuntimeHelper.downcallHandle(
        "LLVMIsAUndefValue",
        constants$112.LLVMIsAUndefValue$FUNC
    );
    static final FunctionDescriptor LLVMIsAPoisonValue$FUNC = FunctionDescriptor.of(Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle LLVMIsAPoisonValue$MH = RuntimeHelper.downcallHandle(
        "LLVMIsAPoisonValue",
        constants$112.LLVMIsAPoisonValue$FUNC
    );
    static final FunctionDescriptor LLVMIsAInstruction$FUNC = FunctionDescriptor.of(Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle LLVMIsAInstruction$MH = RuntimeHelper.downcallHandle(
        "LLVMIsAInstruction",
        constants$112.LLVMIsAInstruction$FUNC
    );
    static final FunctionDescriptor LLVMIsAUnaryOperator$FUNC = FunctionDescriptor.of(Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle LLVMIsAUnaryOperator$MH = RuntimeHelper.downcallHandle(
        "LLVMIsAUnaryOperator",
        constants$112.LLVMIsAUnaryOperator$FUNC
    );
}


