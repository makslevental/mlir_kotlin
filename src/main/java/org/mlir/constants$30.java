// Generated by jextract

package org.mlir;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
class constants$30 {

    static final FunctionDescriptor mlirSymbolTableErase$FUNC = FunctionDescriptor.ofVoid(
        MemoryLayout.structLayout(
            Constants$root.C_POINTER$LAYOUT.withName("ptr")
        ).withName("MlirSymbolTable"),
        MemoryLayout.structLayout(
            Constants$root.C_POINTER$LAYOUT.withName("ptr")
        ).withName("MlirOperation")
    );
    static final MethodHandle mlirSymbolTableErase$MH = RuntimeHelper.downcallHandle(
        "mlirSymbolTableErase",
        constants$30.mlirSymbolTableErase$FUNC
    );
    static final FunctionDescriptor mlirSymbolTableReplaceAllSymbolUses$FUNC = FunctionDescriptor.of(MemoryLayout.structLayout(
        Constants$root.C_CHAR$LAYOUT.withName("value")
    ).withName("MlirLogicalResult"),
        MemoryLayout.structLayout(
            Constants$root.C_POINTER$LAYOUT.withName("data"),
            Constants$root.C_LONG_LONG$LAYOUT.withName("length")
        ).withName("MlirStringRef"),
        MemoryLayout.structLayout(
            Constants$root.C_POINTER$LAYOUT.withName("data"),
            Constants$root.C_LONG_LONG$LAYOUT.withName("length")
        ).withName("MlirStringRef"),
        MemoryLayout.structLayout(
            Constants$root.C_POINTER$LAYOUT.withName("ptr")
        ).withName("MlirOperation")
    );
    static final MethodHandle mlirSymbolTableReplaceAllSymbolUses$MH = RuntimeHelper.downcallHandle(
        "mlirSymbolTableReplaceAllSymbolUses",
        constants$30.mlirSymbolTableReplaceAllSymbolUses$FUNC
    );
    static final FunctionDescriptor mlirSymbolTableWalkSymbolTables$callback$FUNC = FunctionDescriptor.ofVoid(
        MemoryLayout.structLayout(
            Constants$root.C_POINTER$LAYOUT.withName("ptr")
        ).withName("MlirOperation"),
        Constants$root.C_BOOL$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle mlirSymbolTableWalkSymbolTables$callback$MH = RuntimeHelper.downcallHandle(
        constants$30.mlirSymbolTableWalkSymbolTables$callback$FUNC
    );
    static final FunctionDescriptor mlirSymbolTableWalkSymbolTables$FUNC = FunctionDescriptor.ofVoid(
        MemoryLayout.structLayout(
            Constants$root.C_POINTER$LAYOUT.withName("ptr")
        ).withName("MlirOperation"),
        Constants$root.C_BOOL$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle mlirSymbolTableWalkSymbolTables$MH = RuntimeHelper.downcallHandle(
        "mlirSymbolTableWalkSymbolTables",
        constants$30.mlirSymbolTableWalkSymbolTables$FUNC
    );
    static final FunctionDescriptor mlirOperationImplementsInterface$FUNC = FunctionDescriptor.of(Constants$root.C_BOOL$LAYOUT,
        MemoryLayout.structLayout(
            Constants$root.C_POINTER$LAYOUT.withName("ptr")
        ).withName("MlirOperation"),
        MemoryLayout.structLayout(
            Constants$root.C_POINTER$LAYOUT.withName("ptr")
        ).withName("MlirTypeID")
    );
    static final MethodHandle mlirOperationImplementsInterface$MH = RuntimeHelper.downcallHandle(
        "mlirOperationImplementsInterface",
        constants$30.mlirOperationImplementsInterface$FUNC
    );
}


