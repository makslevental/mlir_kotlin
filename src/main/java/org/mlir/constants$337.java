// Generated by jextract

package org.mlir;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
class constants$337 {

    static final FunctionDescriptor mlirAttributeIsAOpaque$FUNC = FunctionDescriptor.of(Constants$root.C_BOOL$LAYOUT,
        MemoryLayout.structLayout(
            Constants$root.C_POINTER$LAYOUT.withName("ptr")
        ).withName("MlirAttribute")
    );
    static final MethodHandle mlirAttributeIsAOpaque$MH = RuntimeHelper.downcallHandle(
        "mlirAttributeIsAOpaque",
        constants$337.mlirAttributeIsAOpaque$FUNC
    );
    static final FunctionDescriptor mlirOpaqueAttrGet$FUNC = FunctionDescriptor.of(MemoryLayout.structLayout(
        Constants$root.C_POINTER$LAYOUT.withName("ptr")
    ).withName("MlirAttribute"),
        MemoryLayout.structLayout(
            Constants$root.C_POINTER$LAYOUT.withName("ptr")
        ).withName("MlirContext"),
        MemoryLayout.structLayout(
            Constants$root.C_POINTER$LAYOUT.withName("data"),
            Constants$root.C_LONG_LONG$LAYOUT.withName("length")
        ).withName("MlirStringRef"),
        Constants$root.C_LONG_LONG$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        MemoryLayout.structLayout(
            Constants$root.C_POINTER$LAYOUT.withName("ptr")
        ).withName("MlirType")
    );
    static final MethodHandle mlirOpaqueAttrGet$MH = RuntimeHelper.downcallHandle(
        "mlirOpaqueAttrGet",
        constants$337.mlirOpaqueAttrGet$FUNC
    );
    static final FunctionDescriptor mlirOpaqueAttrGetDialectNamespace$FUNC = FunctionDescriptor.of(MemoryLayout.structLayout(
        Constants$root.C_POINTER$LAYOUT.withName("data"),
        Constants$root.C_LONG_LONG$LAYOUT.withName("length")
    ).withName("MlirStringRef"),
        MemoryLayout.structLayout(
            Constants$root.C_POINTER$LAYOUT.withName("ptr")
        ).withName("MlirAttribute")
    );
    static final MethodHandle mlirOpaqueAttrGetDialectNamespace$MH = RuntimeHelper.downcallHandle(
        "mlirOpaqueAttrGetDialectNamespace",
        constants$337.mlirOpaqueAttrGetDialectNamespace$FUNC
    );
    static final FunctionDescriptor mlirOpaqueAttrGetData$FUNC = FunctionDescriptor.of(MemoryLayout.structLayout(
        Constants$root.C_POINTER$LAYOUT.withName("data"),
        Constants$root.C_LONG_LONG$LAYOUT.withName("length")
    ).withName("MlirStringRef"),
        MemoryLayout.structLayout(
            Constants$root.C_POINTER$LAYOUT.withName("ptr")
        ).withName("MlirAttribute")
    );
    static final MethodHandle mlirOpaqueAttrGetData$MH = RuntimeHelper.downcallHandle(
        "mlirOpaqueAttrGetData",
        constants$337.mlirOpaqueAttrGetData$FUNC
    );
    static final FunctionDescriptor mlirAttributeIsAString$FUNC = FunctionDescriptor.of(Constants$root.C_BOOL$LAYOUT,
        MemoryLayout.structLayout(
            Constants$root.C_POINTER$LAYOUT.withName("ptr")
        ).withName("MlirAttribute")
    );
    static final MethodHandle mlirAttributeIsAString$MH = RuntimeHelper.downcallHandle(
        "mlirAttributeIsAString",
        constants$337.mlirAttributeIsAString$FUNC
    );
    static final FunctionDescriptor mlirStringAttrGet$FUNC = FunctionDescriptor.of(MemoryLayout.structLayout(
        Constants$root.C_POINTER$LAYOUT.withName("ptr")
    ).withName("MlirAttribute"),
        MemoryLayout.structLayout(
            Constants$root.C_POINTER$LAYOUT.withName("ptr")
        ).withName("MlirContext"),
        MemoryLayout.structLayout(
            Constants$root.C_POINTER$LAYOUT.withName("data"),
            Constants$root.C_LONG_LONG$LAYOUT.withName("length")
        ).withName("MlirStringRef")
    );
    static final MethodHandle mlirStringAttrGet$MH = RuntimeHelper.downcallHandle(
        "mlirStringAttrGet",
        constants$337.mlirStringAttrGet$FUNC
    );
}


