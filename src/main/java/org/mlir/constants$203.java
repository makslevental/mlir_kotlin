// Generated by jextract

package org.mlir;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
class constants$203 {

    static final FunctionDescriptor LLVMTargetMachineEmitToFile$FUNC = FunctionDescriptor.of(Constants$root.C_INT$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_INT$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle LLVMTargetMachineEmitToFile$MH = RuntimeHelper.downcallHandle(
        "LLVMTargetMachineEmitToFile",
        constants$203.LLVMTargetMachineEmitToFile$FUNC
    );
    static final FunctionDescriptor LLVMTargetMachineEmitToMemoryBuffer$FUNC = FunctionDescriptor.of(Constants$root.C_INT$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_INT$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle LLVMTargetMachineEmitToMemoryBuffer$MH = RuntimeHelper.downcallHandle(
        "LLVMTargetMachineEmitToMemoryBuffer",
        constants$203.LLVMTargetMachineEmitToMemoryBuffer$FUNC
    );
    static final FunctionDescriptor LLVMGetDefaultTargetTriple$FUNC = FunctionDescriptor.of(Constants$root.C_POINTER$LAYOUT);
    static final MethodHandle LLVMGetDefaultTargetTriple$MH = RuntimeHelper.downcallHandle(
        "LLVMGetDefaultTargetTriple",
        constants$203.LLVMGetDefaultTargetTriple$FUNC
    );
    static final FunctionDescriptor LLVMNormalizeTargetTriple$FUNC = FunctionDescriptor.of(Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle LLVMNormalizeTargetTriple$MH = RuntimeHelper.downcallHandle(
        "LLVMNormalizeTargetTriple",
        constants$203.LLVMNormalizeTargetTriple$FUNC
    );
    static final FunctionDescriptor LLVMGetHostCPUName$FUNC = FunctionDescriptor.of(Constants$root.C_POINTER$LAYOUT);
    static final MethodHandle LLVMGetHostCPUName$MH = RuntimeHelper.downcallHandle(
        "LLVMGetHostCPUName",
        constants$203.LLVMGetHostCPUName$FUNC
    );
    static final FunctionDescriptor LLVMGetHostCPUFeatures$FUNC = FunctionDescriptor.of(Constants$root.C_POINTER$LAYOUT);
    static final MethodHandle LLVMGetHostCPUFeatures$MH = RuntimeHelper.downcallHandle(
        "LLVMGetHostCPUFeatures",
        constants$203.LLVMGetHostCPUFeatures$FUNC
    );
}


