// Generated by jextract

package org.mlir;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
class constants$116 {

    static final FunctionDescriptor LLVMIsALandingPadInst$FUNC = FunctionDescriptor.of(Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle LLVMIsALandingPadInst$MH = RuntimeHelper.downcallHandle(
        "LLVMIsALandingPadInst",
        constants$116.LLVMIsALandingPadInst$FUNC
    );
    static final FunctionDescriptor LLVMIsAPHINode$FUNC = FunctionDescriptor.of(Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle LLVMIsAPHINode$MH = RuntimeHelper.downcallHandle(
        "LLVMIsAPHINode",
        constants$116.LLVMIsAPHINode$FUNC
    );
    static final FunctionDescriptor LLVMIsASelectInst$FUNC = FunctionDescriptor.of(Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle LLVMIsASelectInst$MH = RuntimeHelper.downcallHandle(
        "LLVMIsASelectInst",
        constants$116.LLVMIsASelectInst$FUNC
    );
    static final FunctionDescriptor LLVMIsAShuffleVectorInst$FUNC = FunctionDescriptor.of(Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle LLVMIsAShuffleVectorInst$MH = RuntimeHelper.downcallHandle(
        "LLVMIsAShuffleVectorInst",
        constants$116.LLVMIsAShuffleVectorInst$FUNC
    );
    static final FunctionDescriptor LLVMIsAStoreInst$FUNC = FunctionDescriptor.of(Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle LLVMIsAStoreInst$MH = RuntimeHelper.downcallHandle(
        "LLVMIsAStoreInst",
        constants$116.LLVMIsAStoreInst$FUNC
    );
    static final FunctionDescriptor LLVMIsABranchInst$FUNC = FunctionDescriptor.of(Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle LLVMIsABranchInst$MH = RuntimeHelper.downcallHandle(
        "LLVMIsABranchInst",
        constants$116.LLVMIsABranchInst$FUNC
    );
}


