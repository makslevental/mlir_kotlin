// Generated by jextract

package org.mlir;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
class constants$39 {

    static final FunctionDescriptor LLVMGetRelocationOffset$FUNC = FunctionDescriptor.of(Constants$root.C_LONG_LONG$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle LLVMGetRelocationOffset$MH = RuntimeHelper.downcallHandle(
        "LLVMGetRelocationOffset",
        constants$39.LLVMGetRelocationOffset$FUNC
    );
    static final FunctionDescriptor LLVMGetRelocationSymbol$FUNC = FunctionDescriptor.of(Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle LLVMGetRelocationSymbol$MH = RuntimeHelper.downcallHandle(
        "LLVMGetRelocationSymbol",
        constants$39.LLVMGetRelocationSymbol$FUNC
    );
    static final FunctionDescriptor LLVMGetRelocationType$FUNC = FunctionDescriptor.of(Constants$root.C_LONG_LONG$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle LLVMGetRelocationType$MH = RuntimeHelper.downcallHandle(
        "LLVMGetRelocationType",
        constants$39.LLVMGetRelocationType$FUNC
    );
    static final FunctionDescriptor LLVMGetRelocationTypeName$FUNC = FunctionDescriptor.of(Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle LLVMGetRelocationTypeName$MH = RuntimeHelper.downcallHandle(
        "LLVMGetRelocationTypeName",
        constants$39.LLVMGetRelocationTypeName$FUNC
    );
    static final FunctionDescriptor LLVMGetRelocationValueString$FUNC = FunctionDescriptor.of(Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle LLVMGetRelocationValueString$MH = RuntimeHelper.downcallHandle(
        "LLVMGetRelocationValueString",
        constants$39.LLVMGetRelocationValueString$FUNC
    );
    static final FunctionDescriptor LLVMCreateObjectFile$FUNC = FunctionDescriptor.of(Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle LLVMCreateObjectFile$MH = RuntimeHelper.downcallHandle(
        "LLVMCreateObjectFile",
        constants$39.LLVMCreateObjectFile$FUNC
    );
}


