// Generated by jextract

package org.mlir;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
class constants$335 {

    static final FunctionDescriptor mlirFloatAttrDoubleGet$FUNC = FunctionDescriptor.of(MemoryLayout.structLayout(
        Constants$root.C_POINTER$LAYOUT.withName("ptr")
    ).withName("MlirAttribute"),
        MemoryLayout.structLayout(
            Constants$root.C_POINTER$LAYOUT.withName("ptr")
        ).withName("MlirContext"),
        MemoryLayout.structLayout(
            Constants$root.C_POINTER$LAYOUT.withName("ptr")
        ).withName("MlirType"),
        Constants$root.C_DOUBLE$LAYOUT
    );
    static final MethodHandle mlirFloatAttrDoubleGet$MH = RuntimeHelper.downcallHandle(
        "mlirFloatAttrDoubleGet",
        constants$335.mlirFloatAttrDoubleGet$FUNC
    );
    static final FunctionDescriptor mlirFloatAttrDoubleGetChecked$FUNC = FunctionDescriptor.of(MemoryLayout.structLayout(
        Constants$root.C_POINTER$LAYOUT.withName("ptr")
    ).withName("MlirAttribute"),
        MemoryLayout.structLayout(
            Constants$root.C_POINTER$LAYOUT.withName("ptr")
        ).withName("MlirLocation"),
        MemoryLayout.structLayout(
            Constants$root.C_POINTER$LAYOUT.withName("ptr")
        ).withName("MlirType"),
        Constants$root.C_DOUBLE$LAYOUT
    );
    static final MethodHandle mlirFloatAttrDoubleGetChecked$MH = RuntimeHelper.downcallHandle(
        "mlirFloatAttrDoubleGetChecked",
        constants$335.mlirFloatAttrDoubleGetChecked$FUNC
    );
    static final FunctionDescriptor mlirFloatAttrGetValueDouble$FUNC = FunctionDescriptor.of(Constants$root.C_DOUBLE$LAYOUT,
        MemoryLayout.structLayout(
            Constants$root.C_POINTER$LAYOUT.withName("ptr")
        ).withName("MlirAttribute")
    );
    static final MethodHandle mlirFloatAttrGetValueDouble$MH = RuntimeHelper.downcallHandle(
        "mlirFloatAttrGetValueDouble",
        constants$335.mlirFloatAttrGetValueDouble$FUNC
    );
    static final FunctionDescriptor mlirAttributeIsAInteger$FUNC = FunctionDescriptor.of(Constants$root.C_BOOL$LAYOUT,
        MemoryLayout.structLayout(
            Constants$root.C_POINTER$LAYOUT.withName("ptr")
        ).withName("MlirAttribute")
    );
    static final MethodHandle mlirAttributeIsAInteger$MH = RuntimeHelper.downcallHandle(
        "mlirAttributeIsAInteger",
        constants$335.mlirAttributeIsAInteger$FUNC
    );
    static final FunctionDescriptor mlirIntegerAttrGet$FUNC = FunctionDescriptor.of(MemoryLayout.structLayout(
        Constants$root.C_POINTER$LAYOUT.withName("ptr")
    ).withName("MlirAttribute"),
        MemoryLayout.structLayout(
            Constants$root.C_POINTER$LAYOUT.withName("ptr")
        ).withName("MlirType"),
        Constants$root.C_LONG_LONG$LAYOUT
    );
    static final MethodHandle mlirIntegerAttrGet$MH = RuntimeHelper.downcallHandle(
        "mlirIntegerAttrGet",
        constants$335.mlirIntegerAttrGet$FUNC
    );
    static final FunctionDescriptor mlirIntegerAttrGetValueInt$FUNC = FunctionDescriptor.of(Constants$root.C_LONG_LONG$LAYOUT,
        MemoryLayout.structLayout(
            Constants$root.C_POINTER$LAYOUT.withName("ptr")
        ).withName("MlirAttribute")
    );
    static final MethodHandle mlirIntegerAttrGetValueInt$MH = RuntimeHelper.downcallHandle(
        "mlirIntegerAttrGetValueInt",
        constants$335.mlirIntegerAttrGetValueInt$FUNC
    );
}


