// Generated by jextract

package org.mlir;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
class constants$117 {

    static final FunctionDescriptor LLVMIsAIndirectBrInst$FUNC = FunctionDescriptor.of(Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle LLVMIsAIndirectBrInst$MH = RuntimeHelper.downcallHandle(
        "LLVMIsAIndirectBrInst",
        constants$117.LLVMIsAIndirectBrInst$FUNC
    );
    static final FunctionDescriptor LLVMIsAInvokeInst$FUNC = FunctionDescriptor.of(Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle LLVMIsAInvokeInst$MH = RuntimeHelper.downcallHandle(
        "LLVMIsAInvokeInst",
        constants$117.LLVMIsAInvokeInst$FUNC
    );
    static final FunctionDescriptor LLVMIsAReturnInst$FUNC = FunctionDescriptor.of(Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle LLVMIsAReturnInst$MH = RuntimeHelper.downcallHandle(
        "LLVMIsAReturnInst",
        constants$117.LLVMIsAReturnInst$FUNC
    );
    static final FunctionDescriptor LLVMIsASwitchInst$FUNC = FunctionDescriptor.of(Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle LLVMIsASwitchInst$MH = RuntimeHelper.downcallHandle(
        "LLVMIsASwitchInst",
        constants$117.LLVMIsASwitchInst$FUNC
    );
    static final FunctionDescriptor LLVMIsAUnreachableInst$FUNC = FunctionDescriptor.of(Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle LLVMIsAUnreachableInst$MH = RuntimeHelper.downcallHandle(
        "LLVMIsAUnreachableInst",
        constants$117.LLVMIsAUnreachableInst$FUNC
    );
    static final FunctionDescriptor LLVMIsAResumeInst$FUNC = FunctionDescriptor.of(Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle LLVMIsAResumeInst$MH = RuntimeHelper.downcallHandle(
        "LLVMIsAResumeInst",
        constants$117.LLVMIsAResumeInst$FUNC
    );
}


