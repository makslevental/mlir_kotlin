// Generated by jextract

package org.mlir;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
class constants$98 {

    static final FunctionDescriptor LLVMDoubleTypeInContext$FUNC = FunctionDescriptor.of(Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle LLVMDoubleTypeInContext$MH = RuntimeHelper.downcallHandle(
        "LLVMDoubleTypeInContext",
        constants$98.LLVMDoubleTypeInContext$FUNC
    );
    static final FunctionDescriptor LLVMX86FP80TypeInContext$FUNC = FunctionDescriptor.of(Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle LLVMX86FP80TypeInContext$MH = RuntimeHelper.downcallHandle(
        "LLVMX86FP80TypeInContext",
        constants$98.LLVMX86FP80TypeInContext$FUNC
    );
    static final FunctionDescriptor LLVMFP128TypeInContext$FUNC = FunctionDescriptor.of(Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle LLVMFP128TypeInContext$MH = RuntimeHelper.downcallHandle(
        "LLVMFP128TypeInContext",
        constants$98.LLVMFP128TypeInContext$FUNC
    );
    static final FunctionDescriptor LLVMPPCFP128TypeInContext$FUNC = FunctionDescriptor.of(Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle LLVMPPCFP128TypeInContext$MH = RuntimeHelper.downcallHandle(
        "LLVMPPCFP128TypeInContext",
        constants$98.LLVMPPCFP128TypeInContext$FUNC
    );
    static final FunctionDescriptor LLVMHalfType$FUNC = FunctionDescriptor.of(Constants$root.C_POINTER$LAYOUT);
    static final MethodHandle LLVMHalfType$MH = RuntimeHelper.downcallHandle(
        "LLVMHalfType",
        constants$98.LLVMHalfType$FUNC
    );
    static final FunctionDescriptor LLVMBFloatType$FUNC = FunctionDescriptor.of(Constants$root.C_POINTER$LAYOUT);
    static final MethodHandle LLVMBFloatType$MH = RuntimeHelper.downcallHandle(
        "LLVMBFloatType",
        constants$98.LLVMBFloatType$FUNC
    );
}


