// Generated by jextract

package org.mlir;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
class constants$140 {

    static final FunctionDescriptor LLVMGetUnnamedAddress$FUNC = FunctionDescriptor.of(Constants$root.C_INT$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle LLVMGetUnnamedAddress$MH = RuntimeHelper.downcallHandle(
        "LLVMGetUnnamedAddress",
        constants$140.LLVMGetUnnamedAddress$FUNC
    );
    static final FunctionDescriptor LLVMSetUnnamedAddress$FUNC = FunctionDescriptor.ofVoid(
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_INT$LAYOUT
    );
    static final MethodHandle LLVMSetUnnamedAddress$MH = RuntimeHelper.downcallHandle(
        "LLVMSetUnnamedAddress",
        constants$140.LLVMSetUnnamedAddress$FUNC
    );
    static final FunctionDescriptor LLVMGlobalGetValueType$FUNC = FunctionDescriptor.of(Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle LLVMGlobalGetValueType$MH = RuntimeHelper.downcallHandle(
        "LLVMGlobalGetValueType",
        constants$140.LLVMGlobalGetValueType$FUNC
    );
    static final FunctionDescriptor LLVMHasUnnamedAddr$FUNC = FunctionDescriptor.of(Constants$root.C_INT$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle LLVMHasUnnamedAddr$MH = RuntimeHelper.downcallHandle(
        "LLVMHasUnnamedAddr",
        constants$140.LLVMHasUnnamedAddr$FUNC
    );
    static final FunctionDescriptor LLVMSetUnnamedAddr$FUNC = FunctionDescriptor.ofVoid(
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_INT$LAYOUT
    );
    static final MethodHandle LLVMSetUnnamedAddr$MH = RuntimeHelper.downcallHandle(
        "LLVMSetUnnamedAddr",
        constants$140.LLVMSetUnnamedAddr$FUNC
    );
    static final FunctionDescriptor LLVMGetAlignment$FUNC = FunctionDescriptor.of(Constants$root.C_INT$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle LLVMGetAlignment$MH = RuntimeHelper.downcallHandle(
        "LLVMGetAlignment",
        constants$140.LLVMGetAlignment$FUNC
    );
}


