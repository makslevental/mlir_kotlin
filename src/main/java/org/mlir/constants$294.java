// Generated by jextract

package org.mlir;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
class constants$294 {

    static final FunctionDescriptor mlirExecutionEngineLookup$FUNC = FunctionDescriptor.of(Constants$root.C_POINTER$LAYOUT,
        MemoryLayout.structLayout(
            Constants$root.C_POINTER$LAYOUT.withName("ptr")
        ).withName("MlirExecutionEngine"),
        MemoryLayout.structLayout(
            Constants$root.C_POINTER$LAYOUT.withName("data"),
            Constants$root.C_LONG_LONG$LAYOUT.withName("length")
        ).withName("MlirStringRef")
    );
    static final MethodHandle mlirExecutionEngineLookup$MH = RuntimeHelper.downcallHandle(
        "mlirExecutionEngineLookup",
        constants$294.mlirExecutionEngineLookup$FUNC
    );
    static final FunctionDescriptor mlirExecutionEngineRegisterSymbol$FUNC = FunctionDescriptor.ofVoid(
        MemoryLayout.structLayout(
            Constants$root.C_POINTER$LAYOUT.withName("ptr")
        ).withName("MlirExecutionEngine"),
        MemoryLayout.structLayout(
            Constants$root.C_POINTER$LAYOUT.withName("data"),
            Constants$root.C_LONG_LONG$LAYOUT.withName("length")
        ).withName("MlirStringRef"),
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle mlirExecutionEngineRegisterSymbol$MH = RuntimeHelper.downcallHandle(
        "mlirExecutionEngineRegisterSymbol",
        constants$294.mlirExecutionEngineRegisterSymbol$FUNC
    );
    static final FunctionDescriptor mlirExecutionEngineDumpToObjectFile$FUNC = FunctionDescriptor.ofVoid(
        MemoryLayout.structLayout(
            Constants$root.C_POINTER$LAYOUT.withName("ptr")
        ).withName("MlirExecutionEngine"),
        MemoryLayout.structLayout(
            Constants$root.C_POINTER$LAYOUT.withName("data"),
            Constants$root.C_LONG_LONG$LAYOUT.withName("length")
        ).withName("MlirStringRef")
    );
    static final MethodHandle mlirExecutionEngineDumpToObjectFile$MH = RuntimeHelper.downcallHandle(
        "mlirExecutionEngineDumpToObjectFile",
        constants$294.mlirExecutionEngineDumpToObjectFile$FUNC
    );
    static final FunctionDescriptor LLVMParseBitcode$FUNC = FunctionDescriptor.of(Constants$root.C_INT$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle LLVMParseBitcode$MH = RuntimeHelper.downcallHandle(
        "LLVMParseBitcode",
        constants$294.LLVMParseBitcode$FUNC
    );
    static final FunctionDescriptor LLVMParseBitcode2$FUNC = FunctionDescriptor.of(Constants$root.C_INT$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle LLVMParseBitcode2$MH = RuntimeHelper.downcallHandle(
        "LLVMParseBitcode2",
        constants$294.LLVMParseBitcode2$FUNC
    );
    static final FunctionDescriptor LLVMParseBitcodeInContext$FUNC = FunctionDescriptor.of(Constants$root.C_INT$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle LLVMParseBitcodeInContext$MH = RuntimeHelper.downcallHandle(
        "LLVMParseBitcodeInContext",
        constants$294.LLVMParseBitcodeInContext$FUNC
    );
}


