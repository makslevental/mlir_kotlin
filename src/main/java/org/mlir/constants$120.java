// Generated by jextract

package org.mlir;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
class constants$120 {

    static final FunctionDescriptor LLVMIsAFPExtInst$FUNC = FunctionDescriptor.of(Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle LLVMIsAFPExtInst$MH = RuntimeHelper.downcallHandle(
        "LLVMIsAFPExtInst",
        constants$120.LLVMIsAFPExtInst$FUNC
    );
    static final FunctionDescriptor LLVMIsAFPToSIInst$FUNC = FunctionDescriptor.of(Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle LLVMIsAFPToSIInst$MH = RuntimeHelper.downcallHandle(
        "LLVMIsAFPToSIInst",
        constants$120.LLVMIsAFPToSIInst$FUNC
    );
    static final FunctionDescriptor LLVMIsAFPToUIInst$FUNC = FunctionDescriptor.of(Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle LLVMIsAFPToUIInst$MH = RuntimeHelper.downcallHandle(
        "LLVMIsAFPToUIInst",
        constants$120.LLVMIsAFPToUIInst$FUNC
    );
    static final FunctionDescriptor LLVMIsAFPTruncInst$FUNC = FunctionDescriptor.of(Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle LLVMIsAFPTruncInst$MH = RuntimeHelper.downcallHandle(
        "LLVMIsAFPTruncInst",
        constants$120.LLVMIsAFPTruncInst$FUNC
    );
    static final FunctionDescriptor LLVMIsAIntToPtrInst$FUNC = FunctionDescriptor.of(Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle LLVMIsAIntToPtrInst$MH = RuntimeHelper.downcallHandle(
        "LLVMIsAIntToPtrInst",
        constants$120.LLVMIsAIntToPtrInst$FUNC
    );
    static final FunctionDescriptor LLVMIsAPtrToIntInst$FUNC = FunctionDescriptor.of(Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle LLVMIsAPtrToIntInst$MH = RuntimeHelper.downcallHandle(
        "LLVMIsAPtrToIntInst",
        constants$120.LLVMIsAPtrToIntInst$FUNC
    );
}


