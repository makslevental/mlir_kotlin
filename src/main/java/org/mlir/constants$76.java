// Generated by jextract

package org.mlir;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
class constants$76 {

    static final FunctionDescriptor LLVMRemarkDebugLocGetSourceFilePath$FUNC = FunctionDescriptor.of(Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle LLVMRemarkDebugLocGetSourceFilePath$MH = RuntimeHelper.downcallHandle(
        "LLVMRemarkDebugLocGetSourceFilePath",
        constants$76.LLVMRemarkDebugLocGetSourceFilePath$FUNC
    );
    static final FunctionDescriptor LLVMRemarkDebugLocGetSourceLine$FUNC = FunctionDescriptor.of(Constants$root.C_INT$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle LLVMRemarkDebugLocGetSourceLine$MH = RuntimeHelper.downcallHandle(
        "LLVMRemarkDebugLocGetSourceLine",
        constants$76.LLVMRemarkDebugLocGetSourceLine$FUNC
    );
    static final FunctionDescriptor LLVMRemarkDebugLocGetSourceColumn$FUNC = FunctionDescriptor.of(Constants$root.C_INT$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle LLVMRemarkDebugLocGetSourceColumn$MH = RuntimeHelper.downcallHandle(
        "LLVMRemarkDebugLocGetSourceColumn",
        constants$76.LLVMRemarkDebugLocGetSourceColumn$FUNC
    );
    static final FunctionDescriptor LLVMRemarkArgGetKey$FUNC = FunctionDescriptor.of(Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle LLVMRemarkArgGetKey$MH = RuntimeHelper.downcallHandle(
        "LLVMRemarkArgGetKey",
        constants$76.LLVMRemarkArgGetKey$FUNC
    );
    static final FunctionDescriptor LLVMRemarkArgGetValue$FUNC = FunctionDescriptor.of(Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle LLVMRemarkArgGetValue$MH = RuntimeHelper.downcallHandle(
        "LLVMRemarkArgGetValue",
        constants$76.LLVMRemarkArgGetValue$FUNC
    );
    static final FunctionDescriptor LLVMRemarkArgGetDebugLoc$FUNC = FunctionDescriptor.of(Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle LLVMRemarkArgGetDebugLoc$MH = RuntimeHelper.downcallHandle(
        "LLVMRemarkArgGetDebugLoc",
        constants$76.LLVMRemarkArgGetDebugLoc$FUNC
    );
}


