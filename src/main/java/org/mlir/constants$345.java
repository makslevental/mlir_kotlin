// Generated by jextract

package org.mlir;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
class constants$345 {

    static final FunctionDescriptor mlirAttributeIsADenseElements$FUNC = FunctionDescriptor.of(Constants$root.C_BOOL$LAYOUT,
        MemoryLayout.structLayout(
            Constants$root.C_POINTER$LAYOUT.withName("ptr")
        ).withName("MlirAttribute")
    );
    static final MethodHandle mlirAttributeIsADenseElements$MH = RuntimeHelper.downcallHandle(
        "mlirAttributeIsADenseElements",
        constants$345.mlirAttributeIsADenseElements$FUNC
    );
    static final FunctionDescriptor mlirAttributeIsADenseIntElements$FUNC = FunctionDescriptor.of(Constants$root.C_BOOL$LAYOUT,
        MemoryLayout.structLayout(
            Constants$root.C_POINTER$LAYOUT.withName("ptr")
        ).withName("MlirAttribute")
    );
    static final MethodHandle mlirAttributeIsADenseIntElements$MH = RuntimeHelper.downcallHandle(
        "mlirAttributeIsADenseIntElements",
        constants$345.mlirAttributeIsADenseIntElements$FUNC
    );
    static final FunctionDescriptor mlirAttributeIsADenseFPElements$FUNC = FunctionDescriptor.of(Constants$root.C_BOOL$LAYOUT,
        MemoryLayout.structLayout(
            Constants$root.C_POINTER$LAYOUT.withName("ptr")
        ).withName("MlirAttribute")
    );
    static final MethodHandle mlirAttributeIsADenseFPElements$MH = RuntimeHelper.downcallHandle(
        "mlirAttributeIsADenseFPElements",
        constants$345.mlirAttributeIsADenseFPElements$FUNC
    );
    static final FunctionDescriptor mlirDenseElementsAttrGet$FUNC = FunctionDescriptor.of(MemoryLayout.structLayout(
        Constants$root.C_POINTER$LAYOUT.withName("ptr")
    ).withName("MlirAttribute"),
        MemoryLayout.structLayout(
            Constants$root.C_POINTER$LAYOUT.withName("ptr")
        ).withName("MlirType"),
        Constants$root.C_LONG_LONG$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle mlirDenseElementsAttrGet$MH = RuntimeHelper.downcallHandle(
        "mlirDenseElementsAttrGet",
        constants$345.mlirDenseElementsAttrGet$FUNC
    );
    static final FunctionDescriptor mlirDenseElementsAttrRawBufferGet$FUNC = FunctionDescriptor.of(MemoryLayout.structLayout(
        Constants$root.C_POINTER$LAYOUT.withName("ptr")
    ).withName("MlirAttribute"),
        MemoryLayout.structLayout(
            Constants$root.C_POINTER$LAYOUT.withName("ptr")
        ).withName("MlirType"),
        Constants$root.C_LONG_LONG$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle mlirDenseElementsAttrRawBufferGet$MH = RuntimeHelper.downcallHandle(
        "mlirDenseElementsAttrRawBufferGet",
        constants$345.mlirDenseElementsAttrRawBufferGet$FUNC
    );
    static final FunctionDescriptor mlirDenseElementsAttrSplatGet$FUNC = FunctionDescriptor.of(MemoryLayout.structLayout(
        Constants$root.C_POINTER$LAYOUT.withName("ptr")
    ).withName("MlirAttribute"),
        MemoryLayout.structLayout(
            Constants$root.C_POINTER$LAYOUT.withName("ptr")
        ).withName("MlirType"),
        MemoryLayout.structLayout(
            Constants$root.C_POINTER$LAYOUT.withName("ptr")
        ).withName("MlirAttribute")
    );
    static final MethodHandle mlirDenseElementsAttrSplatGet$MH = RuntimeHelper.downcallHandle(
        "mlirDenseElementsAttrSplatGet",
        constants$345.mlirDenseElementsAttrSplatGet$FUNC
    );
}


