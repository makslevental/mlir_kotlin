// Generated by jextract

package org.mlir;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
class constants$233 {

    static final FunctionDescriptor mlirRegisterLinalgLinalgLowerToAffineLoops$FUNC = FunctionDescriptor.ofVoid();
    static final MethodHandle mlirRegisterLinalgLinalgLowerToAffineLoops$MH = RuntimeHelper.downcallHandle(
        "mlirRegisterLinalgLinalgLowerToAffineLoops",
        constants$233.mlirRegisterLinalgLinalgLowerToAffineLoops$FUNC
    );
    static final FunctionDescriptor mlirCreateLinalgLinalgLowerToLoops$FUNC = FunctionDescriptor.of(MemoryLayout.structLayout(
        Constants$root.C_POINTER$LAYOUT.withName("ptr")
    ).withName("MlirPass"));
    static final MethodHandle mlirCreateLinalgLinalgLowerToLoops$MH = RuntimeHelper.downcallHandle(
        "mlirCreateLinalgLinalgLowerToLoops",
        constants$233.mlirCreateLinalgLinalgLowerToLoops$FUNC
    );
    static final FunctionDescriptor mlirRegisterLinalgLinalgLowerToLoops$FUNC = FunctionDescriptor.ofVoid();
    static final MethodHandle mlirRegisterLinalgLinalgLowerToLoops$MH = RuntimeHelper.downcallHandle(
        "mlirRegisterLinalgLinalgLowerToLoops",
        constants$233.mlirRegisterLinalgLinalgLowerToLoops$FUNC
    );
    static final FunctionDescriptor mlirCreateLinalgLinalgLowerToParallelLoops$FUNC = FunctionDescriptor.of(MemoryLayout.structLayout(
        Constants$root.C_POINTER$LAYOUT.withName("ptr")
    ).withName("MlirPass"));
    static final MethodHandle mlirCreateLinalgLinalgLowerToParallelLoops$MH = RuntimeHelper.downcallHandle(
        "mlirCreateLinalgLinalgLowerToParallelLoops",
        constants$233.mlirCreateLinalgLinalgLowerToParallelLoops$FUNC
    );
    static final FunctionDescriptor mlirRegisterLinalgLinalgLowerToParallelLoops$FUNC = FunctionDescriptor.ofVoid();
    static final MethodHandle mlirRegisterLinalgLinalgLowerToParallelLoops$MH = RuntimeHelper.downcallHandle(
        "mlirRegisterLinalgLinalgLowerToParallelLoops",
        constants$233.mlirRegisterLinalgLinalgLowerToParallelLoops$FUNC
    );
    static final FunctionDescriptor mlirCreateLinalgLinalgNamedOpConversion$FUNC = FunctionDescriptor.of(MemoryLayout.structLayout(
        Constants$root.C_POINTER$LAYOUT.withName("ptr")
    ).withName("MlirPass"));
    static final MethodHandle mlirCreateLinalgLinalgNamedOpConversion$MH = RuntimeHelper.downcallHandle(
        "mlirCreateLinalgLinalgNamedOpConversion",
        constants$233.mlirCreateLinalgLinalgNamedOpConversion$FUNC
    );
}


