// Generated by jextract

package org.mlir;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
class constants$71 {

    static final FunctionDescriptor LLVMInitializeNativeDisassembler$FUNC = FunctionDescriptor.of(Constants$root.C_INT$LAYOUT);
    static final MethodHandle LLVMInitializeNativeDisassembler$MH = RuntimeHelper.downcallHandle(
        "LLVMInitializeNativeDisassembler",
        constants$71.LLVMInitializeNativeDisassembler$FUNC
    );
    static final FunctionDescriptor LLVMGetModuleDataLayout$FUNC = FunctionDescriptor.of(Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle LLVMGetModuleDataLayout$MH = RuntimeHelper.downcallHandle(
        "LLVMGetModuleDataLayout",
        constants$71.LLVMGetModuleDataLayout$FUNC
    );
    static final FunctionDescriptor LLVMSetModuleDataLayout$FUNC = FunctionDescriptor.ofVoid(
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle LLVMSetModuleDataLayout$MH = RuntimeHelper.downcallHandle(
        "LLVMSetModuleDataLayout",
        constants$71.LLVMSetModuleDataLayout$FUNC
    );
    static final FunctionDescriptor LLVMCreateTargetData$FUNC = FunctionDescriptor.of(Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle LLVMCreateTargetData$MH = RuntimeHelper.downcallHandle(
        "LLVMCreateTargetData",
        constants$71.LLVMCreateTargetData$FUNC
    );
    static final FunctionDescriptor LLVMDisposeTargetData$FUNC = FunctionDescriptor.ofVoid(
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle LLVMDisposeTargetData$MH = RuntimeHelper.downcallHandle(
        "LLVMDisposeTargetData",
        constants$71.LLVMDisposeTargetData$FUNC
    );
    static final FunctionDescriptor LLVMAddTargetLibraryInfo$FUNC = FunctionDescriptor.ofVoid(
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle LLVMAddTargetLibraryInfo$MH = RuntimeHelper.downcallHandle(
        "LLVMAddTargetLibraryInfo",
        constants$71.LLVMAddTargetLibraryInfo$FUNC
    );
}


