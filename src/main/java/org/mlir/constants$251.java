// Generated by jextract

package org.mlir;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
class constants$251 {

    static final FunctionDescriptor mlirRegisterConversionLowerHostCodeToLLVMPass$FUNC = FunctionDescriptor.ofVoid();
    static final MethodHandle mlirRegisterConversionLowerHostCodeToLLVMPass$MH = RuntimeHelper.downcallHandle(
        "mlirRegisterConversionLowerHostCodeToLLVMPass",
        constants$251.mlirRegisterConversionLowerHostCodeToLLVMPass$FUNC
    );
    static final FunctionDescriptor mlirCreateConversionMapMemRefStorageClass$FUNC = FunctionDescriptor.of(MemoryLayout.structLayout(
        Constants$root.C_POINTER$LAYOUT.withName("ptr")
    ).withName("MlirPass"));
    static final MethodHandle mlirCreateConversionMapMemRefStorageClass$MH = RuntimeHelper.downcallHandle(
        "mlirCreateConversionMapMemRefStorageClass",
        constants$251.mlirCreateConversionMapMemRefStorageClass$FUNC
    );
    static final FunctionDescriptor mlirRegisterConversionMapMemRefStorageClass$FUNC = FunctionDescriptor.ofVoid();
    static final MethodHandle mlirRegisterConversionMapMemRefStorageClass$MH = RuntimeHelper.downcallHandle(
        "mlirRegisterConversionMapMemRefStorageClass",
        constants$251.mlirRegisterConversionMapMemRefStorageClass$FUNC
    );
    static final FunctionDescriptor mlirCreateConversionReconcileUnrealizedCasts$FUNC = FunctionDescriptor.of(MemoryLayout.structLayout(
        Constants$root.C_POINTER$LAYOUT.withName("ptr")
    ).withName("MlirPass"));
    static final MethodHandle mlirCreateConversionReconcileUnrealizedCasts$MH = RuntimeHelper.downcallHandle(
        "mlirCreateConversionReconcileUnrealizedCasts",
        constants$251.mlirCreateConversionReconcileUnrealizedCasts$FUNC
    );
    static final FunctionDescriptor mlirRegisterConversionReconcileUnrealizedCasts$FUNC = FunctionDescriptor.ofVoid();
    static final MethodHandle mlirRegisterConversionReconcileUnrealizedCasts$MH = RuntimeHelper.downcallHandle(
        "mlirRegisterConversionReconcileUnrealizedCasts",
        constants$251.mlirRegisterConversionReconcileUnrealizedCasts$FUNC
    );
    static final FunctionDescriptor mlirCreateConversionSCFToControlFlow$FUNC = FunctionDescriptor.of(MemoryLayout.structLayout(
        Constants$root.C_POINTER$LAYOUT.withName("ptr")
    ).withName("MlirPass"));
    static final MethodHandle mlirCreateConversionSCFToControlFlow$MH = RuntimeHelper.downcallHandle(
        "mlirCreateConversionSCFToControlFlow",
        constants$251.mlirCreateConversionSCFToControlFlow$FUNC
    );
}


