// Generated by jextract

package org.mlir;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
class constants$59 {

    static final FunctionDescriptor mlirTypeIsAComplex$FUNC = FunctionDescriptor.of(Constants$root.C_BOOL$LAYOUT,
        MemoryLayout.structLayout(
            Constants$root.C_POINTER$LAYOUT.withName("ptr")
        ).withName("MlirType")
    );
    static final MethodHandle mlirTypeIsAComplex$MH = RuntimeHelper.downcallHandle(
        "mlirTypeIsAComplex",
        constants$59.mlirTypeIsAComplex$FUNC
    );
    static final FunctionDescriptor mlirComplexTypeGet$FUNC = FunctionDescriptor.of(MemoryLayout.structLayout(
        Constants$root.C_POINTER$LAYOUT.withName("ptr")
    ).withName("MlirType"),
        MemoryLayout.structLayout(
            Constants$root.C_POINTER$LAYOUT.withName("ptr")
        ).withName("MlirType")
    );
    static final MethodHandle mlirComplexTypeGet$MH = RuntimeHelper.downcallHandle(
        "mlirComplexTypeGet",
        constants$59.mlirComplexTypeGet$FUNC
    );
    static final FunctionDescriptor mlirComplexTypeGetElementType$FUNC = FunctionDescriptor.of(MemoryLayout.structLayout(
        Constants$root.C_POINTER$LAYOUT.withName("ptr")
    ).withName("MlirType"),
        MemoryLayout.structLayout(
            Constants$root.C_POINTER$LAYOUT.withName("ptr")
        ).withName("MlirType")
    );
    static final MethodHandle mlirComplexTypeGetElementType$MH = RuntimeHelper.downcallHandle(
        "mlirComplexTypeGetElementType",
        constants$59.mlirComplexTypeGetElementType$FUNC
    );
    static final FunctionDescriptor mlirTypeIsAShaped$FUNC = FunctionDescriptor.of(Constants$root.C_BOOL$LAYOUT,
        MemoryLayout.structLayout(
            Constants$root.C_POINTER$LAYOUT.withName("ptr")
        ).withName("MlirType")
    );
    static final MethodHandle mlirTypeIsAShaped$MH = RuntimeHelper.downcallHandle(
        "mlirTypeIsAShaped",
        constants$59.mlirTypeIsAShaped$FUNC
    );
    static final FunctionDescriptor mlirShapedTypeGetElementType$FUNC = FunctionDescriptor.of(MemoryLayout.structLayout(
        Constants$root.C_POINTER$LAYOUT.withName("ptr")
    ).withName("MlirType"),
        MemoryLayout.structLayout(
            Constants$root.C_POINTER$LAYOUT.withName("ptr")
        ).withName("MlirType")
    );
    static final MethodHandle mlirShapedTypeGetElementType$MH = RuntimeHelper.downcallHandle(
        "mlirShapedTypeGetElementType",
        constants$59.mlirShapedTypeGetElementType$FUNC
    );
    static final FunctionDescriptor mlirShapedTypeHasRank$FUNC = FunctionDescriptor.of(Constants$root.C_BOOL$LAYOUT,
        MemoryLayout.structLayout(
            Constants$root.C_POINTER$LAYOUT.withName("ptr")
        ).withName("MlirType")
    );
    static final MethodHandle mlirShapedTypeHasRank$MH = RuntimeHelper.downcallHandle(
        "mlirShapedTypeHasRank",
        constants$59.mlirShapedTypeHasRank$FUNC
    );
}


