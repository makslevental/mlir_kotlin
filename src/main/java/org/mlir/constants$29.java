// Generated by jextract

package org.mlir;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
class constants$29 {

    static final FunctionDescriptor mlirSymbolTableGetVisibilityAttributeName$FUNC = FunctionDescriptor.of(MemoryLayout.structLayout(
        Constants$root.C_POINTER$LAYOUT.withName("data"),
        Constants$root.C_LONG_LONG$LAYOUT.withName("length")
    ).withName("MlirStringRef"));
    static final MethodHandle mlirSymbolTableGetVisibilityAttributeName$MH = RuntimeHelper.downcallHandle(
        "mlirSymbolTableGetVisibilityAttributeName",
        constants$29.mlirSymbolTableGetVisibilityAttributeName$FUNC
    );
    static final FunctionDescriptor mlirSymbolTableCreate$FUNC = FunctionDescriptor.of(MemoryLayout.structLayout(
        Constants$root.C_POINTER$LAYOUT.withName("ptr")
    ).withName("MlirSymbolTable"),
        MemoryLayout.structLayout(
            Constants$root.C_POINTER$LAYOUT.withName("ptr")
        ).withName("MlirOperation")
    );
    static final MethodHandle mlirSymbolTableCreate$MH = RuntimeHelper.downcallHandle(
        "mlirSymbolTableCreate",
        constants$29.mlirSymbolTableCreate$FUNC
    );
    static final FunctionDescriptor mlirSymbolTableIsNull$FUNC = FunctionDescriptor.of(Constants$root.C_BOOL$LAYOUT,
        MemoryLayout.structLayout(
            Constants$root.C_POINTER$LAYOUT.withName("ptr")
        ).withName("MlirSymbolTable")
    );
    static final MethodHandle mlirSymbolTableIsNull$MH = RuntimeHelper.downcallHandle(
        "mlirSymbolTableIsNull",
        constants$29.mlirSymbolTableIsNull$FUNC
    );
    static final FunctionDescriptor mlirSymbolTableDestroy$FUNC = FunctionDescriptor.ofVoid(
        MemoryLayout.structLayout(
            Constants$root.C_POINTER$LAYOUT.withName("ptr")
        ).withName("MlirSymbolTable")
    );
    static final MethodHandle mlirSymbolTableDestroy$MH = RuntimeHelper.downcallHandle(
        "mlirSymbolTableDestroy",
        constants$29.mlirSymbolTableDestroy$FUNC
    );
    static final FunctionDescriptor mlirSymbolTableLookup$FUNC = FunctionDescriptor.of(MemoryLayout.structLayout(
        Constants$root.C_POINTER$LAYOUT.withName("ptr")
    ).withName("MlirOperation"),
        MemoryLayout.structLayout(
            Constants$root.C_POINTER$LAYOUT.withName("ptr")
        ).withName("MlirSymbolTable"),
        MemoryLayout.structLayout(
            Constants$root.C_POINTER$LAYOUT.withName("data"),
            Constants$root.C_LONG_LONG$LAYOUT.withName("length")
        ).withName("MlirStringRef")
    );
    static final MethodHandle mlirSymbolTableLookup$MH = RuntimeHelper.downcallHandle(
        "mlirSymbolTableLookup",
        constants$29.mlirSymbolTableLookup$FUNC
    );
    static final FunctionDescriptor mlirSymbolTableInsert$FUNC = FunctionDescriptor.of(MemoryLayout.structLayout(
        Constants$root.C_POINTER$LAYOUT.withName("ptr")
    ).withName("MlirAttribute"),
        MemoryLayout.structLayout(
            Constants$root.C_POINTER$LAYOUT.withName("ptr")
        ).withName("MlirSymbolTable"),
        MemoryLayout.structLayout(
            Constants$root.C_POINTER$LAYOUT.withName("ptr")
        ).withName("MlirOperation")
    );
    static final MethodHandle mlirSymbolTableInsert$MH = RuntimeHelper.downcallHandle(
        "mlirSymbolTableInsert",
        constants$29.mlirSymbolTableInsert$FUNC
    );
}


