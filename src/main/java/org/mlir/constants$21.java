// Generated by jextract

package org.mlir;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
class constants$21 {

    static final FunctionDescriptor mlirBlockGetFirstOperation$FUNC = FunctionDescriptor.of(MemoryLayout.structLayout(
        Constants$root.C_POINTER$LAYOUT.withName("ptr")
    ).withName("MlirOperation"),
        MemoryLayout.structLayout(
            Constants$root.C_POINTER$LAYOUT.withName("ptr")
        ).withName("MlirBlock")
    );
    static final MethodHandle mlirBlockGetFirstOperation$MH = RuntimeHelper.downcallHandle(
        "mlirBlockGetFirstOperation",
        constants$21.mlirBlockGetFirstOperation$FUNC
    );
    static final FunctionDescriptor mlirBlockGetTerminator$FUNC = FunctionDescriptor.of(MemoryLayout.structLayout(
        Constants$root.C_POINTER$LAYOUT.withName("ptr")
    ).withName("MlirOperation"),
        MemoryLayout.structLayout(
            Constants$root.C_POINTER$LAYOUT.withName("ptr")
        ).withName("MlirBlock")
    );
    static final MethodHandle mlirBlockGetTerminator$MH = RuntimeHelper.downcallHandle(
        "mlirBlockGetTerminator",
        constants$21.mlirBlockGetTerminator$FUNC
    );
    static final FunctionDescriptor mlirBlockAppendOwnedOperation$FUNC = FunctionDescriptor.ofVoid(
        MemoryLayout.structLayout(
            Constants$root.C_POINTER$LAYOUT.withName("ptr")
        ).withName("MlirBlock"),
        MemoryLayout.structLayout(
            Constants$root.C_POINTER$LAYOUT.withName("ptr")
        ).withName("MlirOperation")
    );
    static final MethodHandle mlirBlockAppendOwnedOperation$MH = RuntimeHelper.downcallHandle(
        "mlirBlockAppendOwnedOperation",
        constants$21.mlirBlockAppendOwnedOperation$FUNC
    );
    static final FunctionDescriptor mlirBlockInsertOwnedOperation$FUNC = FunctionDescriptor.ofVoid(
        MemoryLayout.structLayout(
            Constants$root.C_POINTER$LAYOUT.withName("ptr")
        ).withName("MlirBlock"),
        Constants$root.C_LONG_LONG$LAYOUT,
        MemoryLayout.structLayout(
            Constants$root.C_POINTER$LAYOUT.withName("ptr")
        ).withName("MlirOperation")
    );
    static final MethodHandle mlirBlockInsertOwnedOperation$MH = RuntimeHelper.downcallHandle(
        "mlirBlockInsertOwnedOperation",
        constants$21.mlirBlockInsertOwnedOperation$FUNC
    );
    static final FunctionDescriptor mlirBlockInsertOwnedOperationAfter$FUNC = FunctionDescriptor.ofVoid(
        MemoryLayout.structLayout(
            Constants$root.C_POINTER$LAYOUT.withName("ptr")
        ).withName("MlirBlock"),
        MemoryLayout.structLayout(
            Constants$root.C_POINTER$LAYOUT.withName("ptr")
        ).withName("MlirOperation"),
        MemoryLayout.structLayout(
            Constants$root.C_POINTER$LAYOUT.withName("ptr")
        ).withName("MlirOperation")
    );
    static final MethodHandle mlirBlockInsertOwnedOperationAfter$MH = RuntimeHelper.downcallHandle(
        "mlirBlockInsertOwnedOperationAfter",
        constants$21.mlirBlockInsertOwnedOperationAfter$FUNC
    );
    static final FunctionDescriptor mlirBlockInsertOwnedOperationBefore$FUNC = FunctionDescriptor.ofVoid(
        MemoryLayout.structLayout(
            Constants$root.C_POINTER$LAYOUT.withName("ptr")
        ).withName("MlirBlock"),
        MemoryLayout.structLayout(
            Constants$root.C_POINTER$LAYOUT.withName("ptr")
        ).withName("MlirOperation"),
        MemoryLayout.structLayout(
            Constants$root.C_POINTER$LAYOUT.withName("ptr")
        ).withName("MlirOperation")
    );
    static final MethodHandle mlirBlockInsertOwnedOperationBefore$MH = RuntimeHelper.downcallHandle(
        "mlirBlockInsertOwnedOperationBefore",
        constants$21.mlirBlockInsertOwnedOperationBefore$FUNC
    );
}


