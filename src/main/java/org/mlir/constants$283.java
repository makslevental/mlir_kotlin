// Generated by jextract

package org.mlir;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
class constants$283 {

    static final FunctionDescriptor thinlto_codegen_set_cpu$FUNC = FunctionDescriptor.ofVoid(
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle thinlto_codegen_set_cpu$MH = RuntimeHelper.downcallHandle(
        "thinlto_codegen_set_cpu",
        constants$283.thinlto_codegen_set_cpu$FUNC
    );
    static final FunctionDescriptor thinlto_codegen_disable_codegen$FUNC = FunctionDescriptor.ofVoid(
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_BOOL$LAYOUT
    );
    static final MethodHandle thinlto_codegen_disable_codegen$MH = RuntimeHelper.downcallHandle(
        "thinlto_codegen_disable_codegen",
        constants$283.thinlto_codegen_disable_codegen$FUNC
    );
    static final FunctionDescriptor thinlto_codegen_set_codegen_only$FUNC = FunctionDescriptor.ofVoid(
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_BOOL$LAYOUT
    );
    static final MethodHandle thinlto_codegen_set_codegen_only$MH = RuntimeHelper.downcallHandle(
        "thinlto_codegen_set_codegen_only",
        constants$283.thinlto_codegen_set_codegen_only$FUNC
    );
    static final FunctionDescriptor thinlto_debug_options$FUNC = FunctionDescriptor.ofVoid(
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_INT$LAYOUT
    );
    static final MethodHandle thinlto_debug_options$MH = RuntimeHelper.downcallHandle(
        "thinlto_debug_options",
        constants$283.thinlto_debug_options$FUNC
    );
    static final FunctionDescriptor lto_module_is_thinlto$FUNC = FunctionDescriptor.of(Constants$root.C_BOOL$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle lto_module_is_thinlto$MH = RuntimeHelper.downcallHandle(
        "lto_module_is_thinlto",
        constants$283.lto_module_is_thinlto$FUNC
    );
    static final FunctionDescriptor thinlto_codegen_add_must_preserve_symbol$FUNC = FunctionDescriptor.ofVoid(
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_INT$LAYOUT
    );
    static final MethodHandle thinlto_codegen_add_must_preserve_symbol$MH = RuntimeHelper.downcallHandle(
        "thinlto_codegen_add_must_preserve_symbol",
        constants$283.thinlto_codegen_add_must_preserve_symbol$FUNC
    );
}


