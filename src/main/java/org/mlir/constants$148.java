// Generated by jextract

package org.mlir;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
class constants$148 {

    static final FunctionDescriptor LLVMIntrinsicGetName$FUNC = FunctionDescriptor.of(Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_INT$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle LLVMIntrinsicGetName$MH = RuntimeHelper.downcallHandle(
        "LLVMIntrinsicGetName",
        constants$148.LLVMIntrinsicGetName$FUNC
    );
    static final FunctionDescriptor LLVMIntrinsicCopyOverloadedName$FUNC = FunctionDescriptor.of(Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_INT$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_LONG_LONG$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle LLVMIntrinsicCopyOverloadedName$MH = RuntimeHelper.downcallHandle(
        "LLVMIntrinsicCopyOverloadedName",
        constants$148.LLVMIntrinsicCopyOverloadedName$FUNC
    );
    static final FunctionDescriptor LLVMIntrinsicCopyOverloadedName2$FUNC = FunctionDescriptor.of(Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_INT$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_LONG_LONG$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle LLVMIntrinsicCopyOverloadedName2$MH = RuntimeHelper.downcallHandle(
        "LLVMIntrinsicCopyOverloadedName2",
        constants$148.LLVMIntrinsicCopyOverloadedName2$FUNC
    );
    static final FunctionDescriptor LLVMIntrinsicIsOverloaded$FUNC = FunctionDescriptor.of(Constants$root.C_INT$LAYOUT,
        Constants$root.C_INT$LAYOUT
    );
    static final MethodHandle LLVMIntrinsicIsOverloaded$MH = RuntimeHelper.downcallHandle(
        "LLVMIntrinsicIsOverloaded",
        constants$148.LLVMIntrinsicIsOverloaded$FUNC
    );
    static final FunctionDescriptor LLVMGetFunctionCallConv$FUNC = FunctionDescriptor.of(Constants$root.C_INT$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle LLVMGetFunctionCallConv$MH = RuntimeHelper.downcallHandle(
        "LLVMGetFunctionCallConv",
        constants$148.LLVMGetFunctionCallConv$FUNC
    );
    static final FunctionDescriptor LLVMSetFunctionCallConv$FUNC = FunctionDescriptor.ofVoid(
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_INT$LAYOUT
    );
    static final MethodHandle LLVMSetFunctionCallConv$MH = RuntimeHelper.downcallHandle(
        "LLVMSetFunctionCallConv",
        constants$148.LLVMSetFunctionCallConv$FUNC
    );
}


