// Generated by jextract

package org.mlir;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
public class LLVMOrcCJITDylibSearchOrderElement {

    static final  GroupLayout $struct$LAYOUT = MemoryLayout.structLayout(
        Constants$root.C_POINTER$LAYOUT.withName("JD"),
        Constants$root.C_INT$LAYOUT.withName("JDLookupFlags"),
        MemoryLayout.paddingLayout(32)
    );
    public static MemoryLayout $LAYOUT() {
        return LLVMOrcCJITDylibSearchOrderElement.$struct$LAYOUT;
    }
    static final VarHandle JD$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("JD"));
    public static VarHandle JD$VH() {
        return LLVMOrcCJITDylibSearchOrderElement.JD$VH;
    }
    public static MemoryAddress JD$get(MemorySegment seg) {
        return (java.lang.foreign.MemoryAddress)LLVMOrcCJITDylibSearchOrderElement.JD$VH.get(seg);
    }
    public static void JD$set( MemorySegment seg, MemoryAddress x) {
        LLVMOrcCJITDylibSearchOrderElement.JD$VH.set(seg, x);
    }
    public static MemoryAddress JD$get(MemorySegment seg, long index) {
        return (java.lang.foreign.MemoryAddress)LLVMOrcCJITDylibSearchOrderElement.JD$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void JD$set(MemorySegment seg, long index, MemoryAddress x) {
        LLVMOrcCJITDylibSearchOrderElement.JD$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle JDLookupFlags$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("JDLookupFlags"));
    public static VarHandle JDLookupFlags$VH() {
        return LLVMOrcCJITDylibSearchOrderElement.JDLookupFlags$VH;
    }
    public static int JDLookupFlags$get(MemorySegment seg) {
        return (int)LLVMOrcCJITDylibSearchOrderElement.JDLookupFlags$VH.get(seg);
    }
    public static void JDLookupFlags$set( MemorySegment seg, int x) {
        LLVMOrcCJITDylibSearchOrderElement.JDLookupFlags$VH.set(seg, x);
    }
    public static int JDLookupFlags$get(MemorySegment seg, long index) {
        return (int)LLVMOrcCJITDylibSearchOrderElement.JDLookupFlags$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void JDLookupFlags$set(MemorySegment seg, long index, int x) {
        LLVMOrcCJITDylibSearchOrderElement.JDLookupFlags$VH.set(seg.asSlice(index*sizeof()), x);
    }
    public static long sizeof() { return $LAYOUT().byteSize(); }
    public static MemorySegment allocate(SegmentAllocator allocator) { return allocator.allocate($LAYOUT()); }
    public static MemorySegment allocateArray(int len, SegmentAllocator allocator) {
        return allocator.allocate(MemoryLayout.sequenceLayout(len, $LAYOUT()));
    }
    public static MemorySegment ofAddress(MemoryAddress addr, MemorySession session) { return RuntimeHelper.asArray(addr, $LAYOUT(), 1, session); }
}


