// Generated by jextract

package org.mlir;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
class constants$231 {

    static final FunctionDescriptor mlirRegisterLinalgLinalgBufferize$FUNC = FunctionDescriptor.ofVoid();
    static final MethodHandle mlirRegisterLinalgLinalgBufferize$MH = RuntimeHelper.downcallHandle(
        "mlirRegisterLinalgLinalgBufferize",
        constants$231.mlirRegisterLinalgLinalgBufferize$FUNC
    );
    static final FunctionDescriptor mlirCreateLinalgLinalgDetensorize$FUNC = FunctionDescriptor.of(MemoryLayout.structLayout(
        Constants$root.C_POINTER$LAYOUT.withName("ptr")
    ).withName("MlirPass"));
    static final MethodHandle mlirCreateLinalgLinalgDetensorize$MH = RuntimeHelper.downcallHandle(
        "mlirCreateLinalgLinalgDetensorize",
        constants$231.mlirCreateLinalgLinalgDetensorize$FUNC
    );
    static final FunctionDescriptor mlirRegisterLinalgLinalgDetensorize$FUNC = FunctionDescriptor.ofVoid();
    static final MethodHandle mlirRegisterLinalgLinalgDetensorize$MH = RuntimeHelper.downcallHandle(
        "mlirRegisterLinalgLinalgDetensorize",
        constants$231.mlirRegisterLinalgLinalgDetensorize$FUNC
    );
    static final FunctionDescriptor mlirCreateLinalgLinalgElementwiseOpFusion$FUNC = FunctionDescriptor.of(MemoryLayout.structLayout(
        Constants$root.C_POINTER$LAYOUT.withName("ptr")
    ).withName("MlirPass"));
    static final MethodHandle mlirCreateLinalgLinalgElementwiseOpFusion$MH = RuntimeHelper.downcallHandle(
        "mlirCreateLinalgLinalgElementwiseOpFusion",
        constants$231.mlirCreateLinalgLinalgElementwiseOpFusion$FUNC
    );
    static final FunctionDescriptor mlirRegisterLinalgLinalgElementwiseOpFusion$FUNC = FunctionDescriptor.ofVoid();
    static final MethodHandle mlirRegisterLinalgLinalgElementwiseOpFusion$MH = RuntimeHelper.downcallHandle(
        "mlirRegisterLinalgLinalgElementwiseOpFusion",
        constants$231.mlirRegisterLinalgLinalgElementwiseOpFusion$FUNC
    );
    static final FunctionDescriptor mlirCreateLinalgLinalgFoldUnitExtentDims$FUNC = FunctionDescriptor.of(MemoryLayout.structLayout(
        Constants$root.C_POINTER$LAYOUT.withName("ptr")
    ).withName("MlirPass"));
    static final MethodHandle mlirCreateLinalgLinalgFoldUnitExtentDims$MH = RuntimeHelper.downcallHandle(
        "mlirCreateLinalgLinalgFoldUnitExtentDims",
        constants$231.mlirCreateLinalgLinalgFoldUnitExtentDims$FUNC
    );
}


