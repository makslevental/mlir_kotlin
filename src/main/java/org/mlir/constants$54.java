// Generated by jextract

package org.mlir;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
class constants$54 {

    static final FunctionDescriptor mlirAffineMapCompressUnusedSymbols$populateResult$FUNC = FunctionDescriptor.ofVoid(
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_LONG_LONG$LAYOUT,
        MemoryLayout.structLayout(
            Constants$root.C_POINTER$LAYOUT.withName("ptr")
        ).withName("MlirAffineMap")
    );
    static final MethodHandle mlirAffineMapCompressUnusedSymbols$populateResult$MH = RuntimeHelper.downcallHandle(
        constants$54.mlirAffineMapCompressUnusedSymbols$populateResult$FUNC
    );
    static final FunctionDescriptor mlirAffineMapCompressUnusedSymbols$FUNC = FunctionDescriptor.ofVoid(
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_LONG_LONG$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle mlirAffineMapCompressUnusedSymbols$MH = RuntimeHelper.downcallHandle(
        "mlirAffineMapCompressUnusedSymbols",
        constants$54.mlirAffineMapCompressUnusedSymbols$FUNC
    );
    static final FunctionDescriptor mlirTypeIsAInteger$FUNC = FunctionDescriptor.of(Constants$root.C_BOOL$LAYOUT,
        MemoryLayout.structLayout(
            Constants$root.C_POINTER$LAYOUT.withName("ptr")
        ).withName("MlirType")
    );
    static final MethodHandle mlirTypeIsAInteger$MH = RuntimeHelper.downcallHandle(
        "mlirTypeIsAInteger",
        constants$54.mlirTypeIsAInteger$FUNC
    );
    static final FunctionDescriptor mlirIntegerTypeGet$FUNC = FunctionDescriptor.of(MemoryLayout.structLayout(
        Constants$root.C_POINTER$LAYOUT.withName("ptr")
    ).withName("MlirType"),
        MemoryLayout.structLayout(
            Constants$root.C_POINTER$LAYOUT.withName("ptr")
        ).withName("MlirContext"),
        Constants$root.C_INT$LAYOUT
    );
    static final MethodHandle mlirIntegerTypeGet$MH = RuntimeHelper.downcallHandle(
        "mlirIntegerTypeGet",
        constants$54.mlirIntegerTypeGet$FUNC
    );
    static final FunctionDescriptor mlirIntegerTypeSignedGet$FUNC = FunctionDescriptor.of(MemoryLayout.structLayout(
        Constants$root.C_POINTER$LAYOUT.withName("ptr")
    ).withName("MlirType"),
        MemoryLayout.structLayout(
            Constants$root.C_POINTER$LAYOUT.withName("ptr")
        ).withName("MlirContext"),
        Constants$root.C_INT$LAYOUT
    );
    static final MethodHandle mlirIntegerTypeSignedGet$MH = RuntimeHelper.downcallHandle(
        "mlirIntegerTypeSignedGet",
        constants$54.mlirIntegerTypeSignedGet$FUNC
    );
    static final FunctionDescriptor mlirIntegerTypeUnsignedGet$FUNC = FunctionDescriptor.of(MemoryLayout.structLayout(
        Constants$root.C_POINTER$LAYOUT.withName("ptr")
    ).withName("MlirType"),
        MemoryLayout.structLayout(
            Constants$root.C_POINTER$LAYOUT.withName("ptr")
        ).withName("MlirContext"),
        Constants$root.C_INT$LAYOUT
    );
    static final MethodHandle mlirIntegerTypeUnsignedGet$MH = RuntimeHelper.downcallHandle(
        "mlirIntegerTypeUnsignedGet",
        constants$54.mlirIntegerTypeUnsignedGet$FUNC
    );
}


