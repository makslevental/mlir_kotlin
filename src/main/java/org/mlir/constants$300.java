// Generated by jextract

package org.mlir;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
class constants$300 {

    static final FunctionDescriptor mlirTypeIsAUniformQuantizedType$FUNC = FunctionDescriptor.of(Constants$root.C_BOOL$LAYOUT,
        MemoryLayout.structLayout(
            Constants$root.C_POINTER$LAYOUT.withName("ptr")
        ).withName("MlirType")
    );
    static final MethodHandle mlirTypeIsAUniformQuantizedType$MH = RuntimeHelper.downcallHandle(
        "mlirTypeIsAUniformQuantizedType",
        constants$300.mlirTypeIsAUniformQuantizedType$FUNC
    );
    static final FunctionDescriptor mlirUniformQuantizedTypeGet$FUNC = FunctionDescriptor.of(MemoryLayout.structLayout(
        Constants$root.C_POINTER$LAYOUT.withName("ptr")
    ).withName("MlirType"),
        Constants$root.C_INT$LAYOUT,
        MemoryLayout.structLayout(
            Constants$root.C_POINTER$LAYOUT.withName("ptr")
        ).withName("MlirType"),
        MemoryLayout.structLayout(
            Constants$root.C_POINTER$LAYOUT.withName("ptr")
        ).withName("MlirType"),
        Constants$root.C_DOUBLE$LAYOUT,
        Constants$root.C_LONG_LONG$LAYOUT,
        Constants$root.C_LONG_LONG$LAYOUT,
        Constants$root.C_LONG_LONG$LAYOUT
    );
    static final MethodHandle mlirUniformQuantizedTypeGet$MH = RuntimeHelper.downcallHandle(
        "mlirUniformQuantizedTypeGet",
        constants$300.mlirUniformQuantizedTypeGet$FUNC
    );
    static final FunctionDescriptor mlirUniformQuantizedTypeGetScale$FUNC = FunctionDescriptor.of(Constants$root.C_DOUBLE$LAYOUT,
        MemoryLayout.structLayout(
            Constants$root.C_POINTER$LAYOUT.withName("ptr")
        ).withName("MlirType")
    );
    static final MethodHandle mlirUniformQuantizedTypeGetScale$MH = RuntimeHelper.downcallHandle(
        "mlirUniformQuantizedTypeGetScale",
        constants$300.mlirUniformQuantizedTypeGetScale$FUNC
    );
    static final FunctionDescriptor mlirUniformQuantizedTypeGetZeroPoint$FUNC = FunctionDescriptor.of(Constants$root.C_LONG_LONG$LAYOUT,
        MemoryLayout.structLayout(
            Constants$root.C_POINTER$LAYOUT.withName("ptr")
        ).withName("MlirType")
    );
    static final MethodHandle mlirUniformQuantizedTypeGetZeroPoint$MH = RuntimeHelper.downcallHandle(
        "mlirUniformQuantizedTypeGetZeroPoint",
        constants$300.mlirUniformQuantizedTypeGetZeroPoint$FUNC
    );
    static final FunctionDescriptor mlirUniformQuantizedTypeIsFixedPoint$FUNC = FunctionDescriptor.of(Constants$root.C_BOOL$LAYOUT,
        MemoryLayout.structLayout(
            Constants$root.C_POINTER$LAYOUT.withName("ptr")
        ).withName("MlirType")
    );
    static final MethodHandle mlirUniformQuantizedTypeIsFixedPoint$MH = RuntimeHelper.downcallHandle(
        "mlirUniformQuantizedTypeIsFixedPoint",
        constants$300.mlirUniformQuantizedTypeIsFixedPoint$FUNC
    );
    static final FunctionDescriptor mlirTypeIsAUniformQuantizedPerAxisType$FUNC = FunctionDescriptor.of(Constants$root.C_BOOL$LAYOUT,
        MemoryLayout.structLayout(
            Constants$root.C_POINTER$LAYOUT.withName("ptr")
        ).withName("MlirType")
    );
    static final MethodHandle mlirTypeIsAUniformQuantizedPerAxisType$MH = RuntimeHelper.downcallHandle(
        "mlirTypeIsAUniformQuantizedPerAxisType",
        constants$300.mlirTypeIsAUniformQuantizedPerAxisType$FUNC
    );
}


