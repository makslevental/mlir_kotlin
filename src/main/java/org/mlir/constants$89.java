// Generated by jextract

package org.mlir;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
class constants$89 {

    static final FunctionDescriptor LLVMAddModuleFlag$FUNC = FunctionDescriptor.ofVoid(
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_INT$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_LONG_LONG$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle LLVMAddModuleFlag$MH = RuntimeHelper.downcallHandle(
        "LLVMAddModuleFlag",
        constants$89.LLVMAddModuleFlag$FUNC
    );
    static final FunctionDescriptor LLVMDumpModule$FUNC = FunctionDescriptor.ofVoid(
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle LLVMDumpModule$MH = RuntimeHelper.downcallHandle(
        "LLVMDumpModule",
        constants$89.LLVMDumpModule$FUNC
    );
    static final FunctionDescriptor LLVMPrintModuleToFile$FUNC = FunctionDescriptor.of(Constants$root.C_INT$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle LLVMPrintModuleToFile$MH = RuntimeHelper.downcallHandle(
        "LLVMPrintModuleToFile",
        constants$89.LLVMPrintModuleToFile$FUNC
    );
    static final FunctionDescriptor LLVMPrintModuleToString$FUNC = FunctionDescriptor.of(Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle LLVMPrintModuleToString$MH = RuntimeHelper.downcallHandle(
        "LLVMPrintModuleToString",
        constants$89.LLVMPrintModuleToString$FUNC
    );
    static final FunctionDescriptor LLVMGetModuleInlineAsm$FUNC = FunctionDescriptor.of(Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle LLVMGetModuleInlineAsm$MH = RuntimeHelper.downcallHandle(
        "LLVMGetModuleInlineAsm",
        constants$89.LLVMGetModuleInlineAsm$FUNC
    );
    static final FunctionDescriptor LLVMSetModuleInlineAsm2$FUNC = FunctionDescriptor.ofVoid(
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_LONG_LONG$LAYOUT
    );
    static final MethodHandle LLVMSetModuleInlineAsm2$MH = RuntimeHelper.downcallHandle(
        "LLVMSetModuleInlineAsm2",
        constants$89.LLVMSetModuleInlineAsm2$FUNC
    );
}


