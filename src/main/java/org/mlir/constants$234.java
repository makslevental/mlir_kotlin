// Generated by jextract

package org.mlir;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
class constants$234 {

    static final FunctionDescriptor mlirRegisterLinalgLinalgNamedOpConversion$FUNC = FunctionDescriptor.ofVoid();
    static final MethodHandle mlirRegisterLinalgLinalgNamedOpConversion$MH = RuntimeHelper.downcallHandle(
        "mlirRegisterLinalgLinalgNamedOpConversion",
        constants$234.mlirRegisterLinalgLinalgNamedOpConversion$FUNC
    );
    static final FunctionDescriptor LLVMAddLowerSwitchPass$FUNC = FunctionDescriptor.ofVoid(
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle LLVMAddLowerSwitchPass$MH = RuntimeHelper.downcallHandle(
        "LLVMAddLowerSwitchPass",
        constants$234.LLVMAddLowerSwitchPass$FUNC
    );
    static final FunctionDescriptor LLVMAddPromoteMemoryToRegisterPass$FUNC = FunctionDescriptor.ofVoid(
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle LLVMAddPromoteMemoryToRegisterPass$MH = RuntimeHelper.downcallHandle(
        "LLVMAddPromoteMemoryToRegisterPass",
        constants$234.LLVMAddPromoteMemoryToRegisterPass$FUNC
    );
    static final FunctionDescriptor LLVMAddAddDiscriminatorsPass$FUNC = FunctionDescriptor.ofVoid(
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle LLVMAddAddDiscriminatorsPass$MH = RuntimeHelper.downcallHandle(
        "LLVMAddAddDiscriminatorsPass",
        constants$234.LLVMAddAddDiscriminatorsPass$FUNC
    );
    static final FunctionDescriptor LLVMVerifyModule$FUNC = FunctionDescriptor.of(Constants$root.C_INT$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_INT$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle LLVMVerifyModule$MH = RuntimeHelper.downcallHandle(
        "LLVMVerifyModule",
        constants$234.LLVMVerifyModule$FUNC
    );
    static final FunctionDescriptor LLVMVerifyFunction$FUNC = FunctionDescriptor.of(Constants$root.C_INT$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_INT$LAYOUT
    );
    static final MethodHandle LLVMVerifyFunction$MH = RuntimeHelper.downcallHandle(
        "LLVMVerifyFunction",
        constants$234.LLVMVerifyFunction$FUNC
    );
}


