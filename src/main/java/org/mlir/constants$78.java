// Generated by jextract

package org.mlir;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
class constants$78 {

    static final FunctionDescriptor LLVMRemarkEntryGetHotness$FUNC = FunctionDescriptor.of(Constants$root.C_LONG_LONG$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle LLVMRemarkEntryGetHotness$MH = RuntimeHelper.downcallHandle(
        "LLVMRemarkEntryGetHotness",
        constants$78.LLVMRemarkEntryGetHotness$FUNC
    );
    static final FunctionDescriptor LLVMRemarkEntryGetNumArgs$FUNC = FunctionDescriptor.of(Constants$root.C_INT$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle LLVMRemarkEntryGetNumArgs$MH = RuntimeHelper.downcallHandle(
        "LLVMRemarkEntryGetNumArgs",
        constants$78.LLVMRemarkEntryGetNumArgs$FUNC
    );
    static final FunctionDescriptor LLVMRemarkEntryGetFirstArg$FUNC = FunctionDescriptor.of(Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle LLVMRemarkEntryGetFirstArg$MH = RuntimeHelper.downcallHandle(
        "LLVMRemarkEntryGetFirstArg",
        constants$78.LLVMRemarkEntryGetFirstArg$FUNC
    );
    static final FunctionDescriptor LLVMRemarkEntryGetNextArg$FUNC = FunctionDescriptor.of(Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle LLVMRemarkEntryGetNextArg$MH = RuntimeHelper.downcallHandle(
        "LLVMRemarkEntryGetNextArg",
        constants$78.LLVMRemarkEntryGetNextArg$FUNC
    );
    static final FunctionDescriptor LLVMRemarkParserCreateYAML$FUNC = FunctionDescriptor.of(Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_LONG_LONG$LAYOUT
    );
    static final MethodHandle LLVMRemarkParserCreateYAML$MH = RuntimeHelper.downcallHandle(
        "LLVMRemarkParserCreateYAML",
        constants$78.LLVMRemarkParserCreateYAML$FUNC
    );
    static final FunctionDescriptor LLVMRemarkParserCreateBitstream$FUNC = FunctionDescriptor.of(Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_LONG_LONG$LAYOUT
    );
    static final MethodHandle LLVMRemarkParserCreateBitstream$MH = RuntimeHelper.downcallHandle(
        "LLVMRemarkParserCreateBitstream",
        constants$78.LLVMRemarkParserCreateBitstream$FUNC
    );
}


