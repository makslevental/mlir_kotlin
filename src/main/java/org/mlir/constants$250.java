// Generated by jextract

package org.mlir;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
class constants$250 {

    static final FunctionDescriptor mlirRegisterConversionConvertVulkanLaunchFuncToVulkanCallsPass$FUNC = FunctionDescriptor.ofVoid();
    static final MethodHandle mlirRegisterConversionConvertVulkanLaunchFuncToVulkanCallsPass$MH = RuntimeHelper.downcallHandle(
        "mlirRegisterConversionConvertVulkanLaunchFuncToVulkanCallsPass",
        constants$250.mlirRegisterConversionConvertVulkanLaunchFuncToVulkanCallsPass$FUNC
    );
    static final FunctionDescriptor mlirCreateConversionFinalizeMemRefToLLVMConversionPass$FUNC = FunctionDescriptor.of(MemoryLayout.structLayout(
        Constants$root.C_POINTER$LAYOUT.withName("ptr")
    ).withName("MlirPass"));
    static final MethodHandle mlirCreateConversionFinalizeMemRefToLLVMConversionPass$MH = RuntimeHelper.downcallHandle(
        "mlirCreateConversionFinalizeMemRefToLLVMConversionPass",
        constants$250.mlirCreateConversionFinalizeMemRefToLLVMConversionPass$FUNC
    );
    static final FunctionDescriptor mlirRegisterConversionFinalizeMemRefToLLVMConversionPass$FUNC = FunctionDescriptor.ofVoid();
    static final MethodHandle mlirRegisterConversionFinalizeMemRefToLLVMConversionPass$MH = RuntimeHelper.downcallHandle(
        "mlirRegisterConversionFinalizeMemRefToLLVMConversionPass",
        constants$250.mlirRegisterConversionFinalizeMemRefToLLVMConversionPass$FUNC
    );
    static final FunctionDescriptor mlirCreateConversionGpuToLLVMConversionPass$FUNC = FunctionDescriptor.of(MemoryLayout.structLayout(
        Constants$root.C_POINTER$LAYOUT.withName("ptr")
    ).withName("MlirPass"));
    static final MethodHandle mlirCreateConversionGpuToLLVMConversionPass$MH = RuntimeHelper.downcallHandle(
        "mlirCreateConversionGpuToLLVMConversionPass",
        constants$250.mlirCreateConversionGpuToLLVMConversionPass$FUNC
    );
    static final FunctionDescriptor mlirRegisterConversionGpuToLLVMConversionPass$FUNC = FunctionDescriptor.ofVoid();
    static final MethodHandle mlirRegisterConversionGpuToLLVMConversionPass$MH = RuntimeHelper.downcallHandle(
        "mlirRegisterConversionGpuToLLVMConversionPass",
        constants$250.mlirRegisterConversionGpuToLLVMConversionPass$FUNC
    );
    static final FunctionDescriptor mlirCreateConversionLowerHostCodeToLLVMPass$FUNC = FunctionDescriptor.of(MemoryLayout.structLayout(
        Constants$root.C_POINTER$LAYOUT.withName("ptr")
    ).withName("MlirPass"));
    static final MethodHandle mlirCreateConversionLowerHostCodeToLLVMPass$MH = RuntimeHelper.downcallHandle(
        "mlirCreateConversionLowerHostCodeToLLVMPass",
        constants$250.mlirCreateConversionLowerHostCodeToLLVMPass$FUNC
    );
}


