// Generated by jextract

package org.mlir;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
class constants$69 {

    static final FunctionDescriptor LLVMInitializeAArch64AsmPrinter$FUNC = FunctionDescriptor.ofVoid();
    static final MethodHandle LLVMInitializeAArch64AsmPrinter$MH = RuntimeHelper.downcallHandle(
        "LLVMInitializeAArch64AsmPrinter",
        constants$69.LLVMInitializeAArch64AsmPrinter$FUNC
    );
    static final FunctionDescriptor LLVMInitializeAArch64AsmParser$FUNC = FunctionDescriptor.ofVoid();
    static final MethodHandle LLVMInitializeAArch64AsmParser$MH = RuntimeHelper.downcallHandle(
        "LLVMInitializeAArch64AsmParser",
        constants$69.LLVMInitializeAArch64AsmParser$FUNC
    );
    static final FunctionDescriptor LLVMInitializeAArch64Disassembler$FUNC = FunctionDescriptor.ofVoid();
    static final MethodHandle LLVMInitializeAArch64Disassembler$MH = RuntimeHelper.downcallHandle(
        "LLVMInitializeAArch64Disassembler",
        constants$69.LLVMInitializeAArch64Disassembler$FUNC
    );
    static final FunctionDescriptor LLVMInitializeAllTargetInfos$FUNC = FunctionDescriptor.ofVoid();
    static final MethodHandle LLVMInitializeAllTargetInfos$MH = RuntimeHelper.downcallHandle(
        "LLVMInitializeAllTargetInfos",
        constants$69.LLVMInitializeAllTargetInfos$FUNC
    );
    static final FunctionDescriptor LLVMInitializeAllTargets$FUNC = FunctionDescriptor.ofVoid();
    static final MethodHandle LLVMInitializeAllTargets$MH = RuntimeHelper.downcallHandle(
        "LLVMInitializeAllTargets",
        constants$69.LLVMInitializeAllTargets$FUNC
    );
    static final FunctionDescriptor LLVMInitializeAllTargetMCs$FUNC = FunctionDescriptor.ofVoid();
    static final MethodHandle LLVMInitializeAllTargetMCs$MH = RuntimeHelper.downcallHandle(
        "LLVMInitializeAllTargetMCs",
        constants$69.LLVMInitializeAllTargetMCs$FUNC
    );
}


