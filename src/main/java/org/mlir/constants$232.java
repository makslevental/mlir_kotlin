// Generated by jextract

package org.mlir;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
class constants$232 {

    static final FunctionDescriptor mlirRegisterLinalgLinalgFoldUnitExtentDims$FUNC = FunctionDescriptor.ofVoid();
    static final MethodHandle mlirRegisterLinalgLinalgFoldUnitExtentDims$MH = RuntimeHelper.downcallHandle(
        "mlirRegisterLinalgLinalgFoldUnitExtentDims",
        constants$232.mlirRegisterLinalgLinalgFoldUnitExtentDims$FUNC
    );
    static final FunctionDescriptor mlirCreateLinalgLinalgGeneralization$FUNC = FunctionDescriptor.of(MemoryLayout.structLayout(
        Constants$root.C_POINTER$LAYOUT.withName("ptr")
    ).withName("MlirPass"));
    static final MethodHandle mlirCreateLinalgLinalgGeneralization$MH = RuntimeHelper.downcallHandle(
        "mlirCreateLinalgLinalgGeneralization",
        constants$232.mlirCreateLinalgLinalgGeneralization$FUNC
    );
    static final FunctionDescriptor mlirRegisterLinalgLinalgGeneralization$FUNC = FunctionDescriptor.ofVoid();
    static final MethodHandle mlirRegisterLinalgLinalgGeneralization$MH = RuntimeHelper.downcallHandle(
        "mlirRegisterLinalgLinalgGeneralization",
        constants$232.mlirRegisterLinalgLinalgGeneralization$FUNC
    );
    static final FunctionDescriptor mlirCreateLinalgLinalgInlineScalarOperands$FUNC = FunctionDescriptor.of(MemoryLayout.structLayout(
        Constants$root.C_POINTER$LAYOUT.withName("ptr")
    ).withName("MlirPass"));
    static final MethodHandle mlirCreateLinalgLinalgInlineScalarOperands$MH = RuntimeHelper.downcallHandle(
        "mlirCreateLinalgLinalgInlineScalarOperands",
        constants$232.mlirCreateLinalgLinalgInlineScalarOperands$FUNC
    );
    static final FunctionDescriptor mlirRegisterLinalgLinalgInlineScalarOperands$FUNC = FunctionDescriptor.ofVoid();
    static final MethodHandle mlirRegisterLinalgLinalgInlineScalarOperands$MH = RuntimeHelper.downcallHandle(
        "mlirRegisterLinalgLinalgInlineScalarOperands",
        constants$232.mlirRegisterLinalgLinalgInlineScalarOperands$FUNC
    );
    static final FunctionDescriptor mlirCreateLinalgLinalgLowerToAffineLoops$FUNC = FunctionDescriptor.of(MemoryLayout.structLayout(
        Constants$root.C_POINTER$LAYOUT.withName("ptr")
    ).withName("MlirPass"));
    static final MethodHandle mlirCreateLinalgLinalgLowerToAffineLoops$MH = RuntimeHelper.downcallHandle(
        "mlirCreateLinalgLinalgLowerToAffineLoops",
        constants$232.mlirCreateLinalgLinalgLowerToAffineLoops$FUNC
    );
}


