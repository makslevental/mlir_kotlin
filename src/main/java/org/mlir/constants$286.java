// Generated by jextract

package org.mlir;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
class constants$286 {

    static final FunctionDescriptor LLVMInitializeIPO$FUNC = FunctionDescriptor.ofVoid(
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle LLVMInitializeIPO$MH = RuntimeHelper.downcallHandle(
        "LLVMInitializeIPO",
        constants$286.LLVMInitializeIPO$FUNC
    );
    static final FunctionDescriptor LLVMInitializeAnalysis$FUNC = FunctionDescriptor.ofVoid(
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle LLVMInitializeAnalysis$MH = RuntimeHelper.downcallHandle(
        "LLVMInitializeAnalysis",
        constants$286.LLVMInitializeAnalysis$FUNC
    );
    static final FunctionDescriptor LLVMInitializeIPA$FUNC = FunctionDescriptor.ofVoid(
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle LLVMInitializeIPA$MH = RuntimeHelper.downcallHandle(
        "LLVMInitializeIPA",
        constants$286.LLVMInitializeIPA$FUNC
    );
    static final FunctionDescriptor LLVMInitializeCodeGen$FUNC = FunctionDescriptor.ofVoid(
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle LLVMInitializeCodeGen$MH = RuntimeHelper.downcallHandle(
        "LLVMInitializeCodeGen",
        constants$286.LLVMInitializeCodeGen$FUNC
    );
    static final FunctionDescriptor LLVMInitializeTarget$FUNC = FunctionDescriptor.ofVoid(
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle LLVMInitializeTarget$MH = RuntimeHelper.downcallHandle(
        "LLVMInitializeTarget",
        constants$286.LLVMInitializeTarget$FUNC
    );
    static final FunctionDescriptor LLVMRunPasses$FUNC = FunctionDescriptor.of(Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle LLVMRunPasses$MH = RuntimeHelper.downcallHandle(
        "LLVMRunPasses",
        constants$286.LLVMRunPasses$FUNC
    );
}


