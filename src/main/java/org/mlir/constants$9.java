// Generated by jextract

package org.mlir;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
class constants$9 {

    static final FunctionDescriptor mlirModuleGetBody$FUNC = FunctionDescriptor.of(MemoryLayout.structLayout(
        Constants$root.C_POINTER$LAYOUT.withName("ptr")
    ).withName("MlirBlock"),
        MemoryLayout.structLayout(
            Constants$root.C_POINTER$LAYOUT.withName("ptr")
        ).withName("MlirModule")
    );
    static final MethodHandle mlirModuleGetBody$MH = RuntimeHelper.downcallHandle(
        "mlirModuleGetBody",
        constants$9.mlirModuleGetBody$FUNC
    );
    static final FunctionDescriptor mlirModuleIsNull$FUNC = FunctionDescriptor.of(Constants$root.C_BOOL$LAYOUT,
        MemoryLayout.structLayout(
            Constants$root.C_POINTER$LAYOUT.withName("ptr")
        ).withName("MlirModule")
    );
    static final MethodHandle mlirModuleIsNull$MH = RuntimeHelper.downcallHandle(
        "mlirModuleIsNull",
        constants$9.mlirModuleIsNull$FUNC
    );
    static final FunctionDescriptor mlirModuleDestroy$FUNC = FunctionDescriptor.ofVoid(
        MemoryLayout.structLayout(
            Constants$root.C_POINTER$LAYOUT.withName("ptr")
        ).withName("MlirModule")
    );
    static final MethodHandle mlirModuleDestroy$MH = RuntimeHelper.downcallHandle(
        "mlirModuleDestroy",
        constants$9.mlirModuleDestroy$FUNC
    );
    static final FunctionDescriptor mlirModuleGetOperation$FUNC = FunctionDescriptor.of(MemoryLayout.structLayout(
        Constants$root.C_POINTER$LAYOUT.withName("ptr")
    ).withName("MlirOperation"),
        MemoryLayout.structLayout(
            Constants$root.C_POINTER$LAYOUT.withName("ptr")
        ).withName("MlirModule")
    );
    static final MethodHandle mlirModuleGetOperation$MH = RuntimeHelper.downcallHandle(
        "mlirModuleGetOperation",
        constants$9.mlirModuleGetOperation$FUNC
    );
    static final FunctionDescriptor mlirModuleFromOperation$FUNC = FunctionDescriptor.of(MemoryLayout.structLayout(
        Constants$root.C_POINTER$LAYOUT.withName("ptr")
    ).withName("MlirModule"),
        MemoryLayout.structLayout(
            Constants$root.C_POINTER$LAYOUT.withName("ptr")
        ).withName("MlirOperation")
    );
    static final MethodHandle mlirModuleFromOperation$MH = RuntimeHelper.downcallHandle(
        "mlirModuleFromOperation",
        constants$9.mlirModuleFromOperation$FUNC
    );
    static final FunctionDescriptor mlirOperationStateGet$FUNC = FunctionDescriptor.of(MemoryLayout.structLayout(
        MemoryLayout.structLayout(
            Constants$root.C_POINTER$LAYOUT.withName("data"),
            Constants$root.C_LONG_LONG$LAYOUT.withName("length")
        ).withName("name"),
        MemoryLayout.structLayout(
            Constants$root.C_POINTER$LAYOUT.withName("ptr")
        ).withName("location"),
        Constants$root.C_LONG_LONG$LAYOUT.withName("nResults"),
        Constants$root.C_POINTER$LAYOUT.withName("results"),
        Constants$root.C_LONG_LONG$LAYOUT.withName("nOperands"),
        Constants$root.C_POINTER$LAYOUT.withName("operands"),
        Constants$root.C_LONG_LONG$LAYOUT.withName("nRegions"),
        Constants$root.C_POINTER$LAYOUT.withName("regions"),
        Constants$root.C_LONG_LONG$LAYOUT.withName("nSuccessors"),
        Constants$root.C_POINTER$LAYOUT.withName("successors"),
        Constants$root.C_LONG_LONG$LAYOUT.withName("nAttributes"),
        Constants$root.C_POINTER$LAYOUT.withName("attributes"),
        Constants$root.C_BOOL$LAYOUT.withName("enableResultTypeInference"),
        MemoryLayout.paddingLayout(56)
    ).withName("MlirOperationState"),
        MemoryLayout.structLayout(
            Constants$root.C_POINTER$LAYOUT.withName("data"),
            Constants$root.C_LONG_LONG$LAYOUT.withName("length")
        ).withName("MlirStringRef"),
        MemoryLayout.structLayout(
            Constants$root.C_POINTER$LAYOUT.withName("ptr")
        ).withName("MlirLocation")
    );
    static final MethodHandle mlirOperationStateGet$MH = RuntimeHelper.downcallHandle(
        "mlirOperationStateGet",
        constants$9.mlirOperationStateGet$FUNC
    );
}


