// Generated by jextract

package org.mlir;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
class constants$327 {

    static final FunctionDescriptor LLVMDIBuilderCreateTempGlobalVariableFwdDecl$FUNC = FunctionDescriptor.of(Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_LONG_LONG$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_LONG_LONG$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_INT$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_INT$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_INT$LAYOUT
    );
    static final MethodHandle LLVMDIBuilderCreateTempGlobalVariableFwdDecl$MH = RuntimeHelper.downcallHandle(
        "LLVMDIBuilderCreateTempGlobalVariableFwdDecl",
        constants$327.LLVMDIBuilderCreateTempGlobalVariableFwdDecl$FUNC
    );
    static final FunctionDescriptor LLVMDIBuilderInsertDeclareBefore$FUNC = FunctionDescriptor.of(Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle LLVMDIBuilderInsertDeclareBefore$MH = RuntimeHelper.downcallHandle(
        "LLVMDIBuilderInsertDeclareBefore",
        constants$327.LLVMDIBuilderInsertDeclareBefore$FUNC
    );
    static final FunctionDescriptor LLVMDIBuilderInsertDeclareAtEnd$FUNC = FunctionDescriptor.of(Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle LLVMDIBuilderInsertDeclareAtEnd$MH = RuntimeHelper.downcallHandle(
        "LLVMDIBuilderInsertDeclareAtEnd",
        constants$327.LLVMDIBuilderInsertDeclareAtEnd$FUNC
    );
    static final FunctionDescriptor LLVMDIBuilderInsertDbgValueBefore$FUNC = FunctionDescriptor.of(Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle LLVMDIBuilderInsertDbgValueBefore$MH = RuntimeHelper.downcallHandle(
        "LLVMDIBuilderInsertDbgValueBefore",
        constants$327.LLVMDIBuilderInsertDbgValueBefore$FUNC
    );
    static final FunctionDescriptor LLVMDIBuilderInsertDbgValueAtEnd$FUNC = FunctionDescriptor.of(Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle LLVMDIBuilderInsertDbgValueAtEnd$MH = RuntimeHelper.downcallHandle(
        "LLVMDIBuilderInsertDbgValueAtEnd",
        constants$327.LLVMDIBuilderInsertDbgValueAtEnd$FUNC
    );
    static final FunctionDescriptor LLVMDIBuilderCreateAutoVariable$FUNC = FunctionDescriptor.of(Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_LONG_LONG$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_INT$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_INT$LAYOUT,
        Constants$root.C_INT$LAYOUT,
        Constants$root.C_INT$LAYOUT
    );
    static final MethodHandle LLVMDIBuilderCreateAutoVariable$MH = RuntimeHelper.downcallHandle(
        "LLVMDIBuilderCreateAutoVariable",
        constants$327.LLVMDIBuilderCreateAutoVariable$FUNC
    );
}


