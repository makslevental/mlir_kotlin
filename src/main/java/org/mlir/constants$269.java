// Generated by jextract

package org.mlir;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
class constants$269 {

    static final FunctionDescriptor mlirCreateSparseTensorSparseVectorization$FUNC = FunctionDescriptor.of(MemoryLayout.structLayout(
        Constants$root.C_POINTER$LAYOUT.withName("ptr")
    ).withName("MlirPass"));
    static final MethodHandle mlirCreateSparseTensorSparseVectorization$MH = RuntimeHelper.downcallHandle(
        "mlirCreateSparseTensorSparseVectorization",
        constants$269.mlirCreateSparseTensorSparseVectorization$FUNC
    );
    static final FunctionDescriptor mlirRegisterSparseTensorSparseVectorization$FUNC = FunctionDescriptor.ofVoid();
    static final MethodHandle mlirRegisterSparseTensorSparseVectorization$MH = RuntimeHelper.downcallHandle(
        "mlirRegisterSparseTensorSparseVectorization",
        constants$269.mlirRegisterSparseTensorSparseVectorization$FUNC
    );
    static final FunctionDescriptor mlirCreateSparseTensorSparsificationPass$FUNC = FunctionDescriptor.of(MemoryLayout.structLayout(
        Constants$root.C_POINTER$LAYOUT.withName("ptr")
    ).withName("MlirPass"));
    static final MethodHandle mlirCreateSparseTensorSparsificationPass$MH = RuntimeHelper.downcallHandle(
        "mlirCreateSparseTensorSparsificationPass",
        constants$269.mlirCreateSparseTensorSparsificationPass$FUNC
    );
    static final FunctionDescriptor mlirRegisterSparseTensorSparsificationPass$FUNC = FunctionDescriptor.ofVoid();
    static final MethodHandle mlirRegisterSparseTensorSparsificationPass$MH = RuntimeHelper.downcallHandle(
        "mlirRegisterSparseTensorSparsificationPass",
        constants$269.mlirRegisterSparseTensorSparsificationPass$FUNC
    );
    static final FunctionDescriptor mlirCreateSparseTensorStorageSpecifierToLLVM$FUNC = FunctionDescriptor.of(MemoryLayout.structLayout(
        Constants$root.C_POINTER$LAYOUT.withName("ptr")
    ).withName("MlirPass"));
    static final MethodHandle mlirCreateSparseTensorStorageSpecifierToLLVM$MH = RuntimeHelper.downcallHandle(
        "mlirCreateSparseTensorStorageSpecifierToLLVM",
        constants$269.mlirCreateSparseTensorStorageSpecifierToLLVM$FUNC
    );
    static final FunctionDescriptor mlirRegisterSparseTensorStorageSpecifierToLLVM$FUNC = FunctionDescriptor.ofVoid();
    static final MethodHandle mlirRegisterSparseTensorStorageSpecifierToLLVM$MH = RuntimeHelper.downcallHandle(
        "mlirRegisterSparseTensorStorageSpecifierToLLVM",
        constants$269.mlirRegisterSparseTensorStorageSpecifierToLLVM$FUNC
    );
}


