// Generated by jextract

package org.mlir;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
class constants$121 {

    static final FunctionDescriptor LLVMIsASExtInst$FUNC = FunctionDescriptor.of(Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle LLVMIsASExtInst$MH = RuntimeHelper.downcallHandle(
        "LLVMIsASExtInst",
        constants$121.LLVMIsASExtInst$FUNC
    );
    static final FunctionDescriptor LLVMIsASIToFPInst$FUNC = FunctionDescriptor.of(Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle LLVMIsASIToFPInst$MH = RuntimeHelper.downcallHandle(
        "LLVMIsASIToFPInst",
        constants$121.LLVMIsASIToFPInst$FUNC
    );
    static final FunctionDescriptor LLVMIsATruncInst$FUNC = FunctionDescriptor.of(Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle LLVMIsATruncInst$MH = RuntimeHelper.downcallHandle(
        "LLVMIsATruncInst",
        constants$121.LLVMIsATruncInst$FUNC
    );
    static final FunctionDescriptor LLVMIsAUIToFPInst$FUNC = FunctionDescriptor.of(Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle LLVMIsAUIToFPInst$MH = RuntimeHelper.downcallHandle(
        "LLVMIsAUIToFPInst",
        constants$121.LLVMIsAUIToFPInst$FUNC
    );
    static final FunctionDescriptor LLVMIsAZExtInst$FUNC = FunctionDescriptor.of(Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle LLVMIsAZExtInst$MH = RuntimeHelper.downcallHandle(
        "LLVMIsAZExtInst",
        constants$121.LLVMIsAZExtInst$FUNC
    );
    static final FunctionDescriptor LLVMIsAExtractValueInst$FUNC = FunctionDescriptor.of(Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle LLVMIsAExtractValueInst$MH = RuntimeHelper.downcallHandle(
        "LLVMIsAExtractValueInst",
        constants$121.LLVMIsAExtractValueInst$FUNC
    );
}


