// Generated by jextract

package org.mlir;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
class constants$28 {

    static final FunctionDescriptor mlirNamedAttributeGet$FUNC = FunctionDescriptor.of(MemoryLayout.structLayout(
        MemoryLayout.structLayout(
            Constants$root.C_POINTER$LAYOUT.withName("ptr")
        ).withName("name"),
        MemoryLayout.structLayout(
            Constants$root.C_POINTER$LAYOUT.withName("ptr")
        ).withName("attribute")
    ).withName("MlirNamedAttribute"),
        MemoryLayout.structLayout(
            Constants$root.C_POINTER$LAYOUT.withName("ptr")
        ).withName("MlirIdentifier"),
        MemoryLayout.structLayout(
            Constants$root.C_POINTER$LAYOUT.withName("ptr")
        ).withName("MlirAttribute")
    );
    static final MethodHandle mlirNamedAttributeGet$MH = RuntimeHelper.downcallHandle(
        "mlirNamedAttributeGet",
        constants$28.mlirNamedAttributeGet$FUNC
    );
    static final FunctionDescriptor mlirIdentifierGet$FUNC = FunctionDescriptor.of(MemoryLayout.structLayout(
        Constants$root.C_POINTER$LAYOUT.withName("ptr")
    ).withName("MlirIdentifier"),
        MemoryLayout.structLayout(
            Constants$root.C_POINTER$LAYOUT.withName("ptr")
        ).withName("MlirContext"),
        MemoryLayout.structLayout(
            Constants$root.C_POINTER$LAYOUT.withName("data"),
            Constants$root.C_LONG_LONG$LAYOUT.withName("length")
        ).withName("MlirStringRef")
    );
    static final MethodHandle mlirIdentifierGet$MH = RuntimeHelper.downcallHandle(
        "mlirIdentifierGet",
        constants$28.mlirIdentifierGet$FUNC
    );
    static final FunctionDescriptor mlirIdentifierGetContext$FUNC = FunctionDescriptor.of(MemoryLayout.structLayout(
        Constants$root.C_POINTER$LAYOUT.withName("ptr")
    ).withName("MlirContext"),
        MemoryLayout.structLayout(
            Constants$root.C_POINTER$LAYOUT.withName("ptr")
        ).withName("MlirIdentifier")
    );
    static final MethodHandle mlirIdentifierGetContext$MH = RuntimeHelper.downcallHandle(
        "mlirIdentifierGetContext",
        constants$28.mlirIdentifierGetContext$FUNC
    );
    static final FunctionDescriptor mlirIdentifierEqual$FUNC = FunctionDescriptor.of(Constants$root.C_BOOL$LAYOUT,
        MemoryLayout.structLayout(
            Constants$root.C_POINTER$LAYOUT.withName("ptr")
        ).withName("MlirIdentifier"),
        MemoryLayout.structLayout(
            Constants$root.C_POINTER$LAYOUT.withName("ptr")
        ).withName("MlirIdentifier")
    );
    static final MethodHandle mlirIdentifierEqual$MH = RuntimeHelper.downcallHandle(
        "mlirIdentifierEqual",
        constants$28.mlirIdentifierEqual$FUNC
    );
    static final FunctionDescriptor mlirIdentifierStr$FUNC = FunctionDescriptor.of(MemoryLayout.structLayout(
        Constants$root.C_POINTER$LAYOUT.withName("data"),
        Constants$root.C_LONG_LONG$LAYOUT.withName("length")
    ).withName("MlirStringRef"),
        MemoryLayout.structLayout(
            Constants$root.C_POINTER$LAYOUT.withName("ptr")
        ).withName("MlirIdentifier")
    );
    static final MethodHandle mlirIdentifierStr$MH = RuntimeHelper.downcallHandle(
        "mlirIdentifierStr",
        constants$28.mlirIdentifierStr$FUNC
    );
    static final FunctionDescriptor mlirSymbolTableGetSymbolAttributeName$FUNC = FunctionDescriptor.of(MemoryLayout.structLayout(
        Constants$root.C_POINTER$LAYOUT.withName("data"),
        Constants$root.C_LONG_LONG$LAYOUT.withName("length")
    ).withName("MlirStringRef"));
    static final MethodHandle mlirSymbolTableGetSymbolAttributeName$MH = RuntimeHelper.downcallHandle(
        "mlirSymbolTableGetSymbolAttributeName",
        constants$28.mlirSymbolTableGetSymbolAttributeName$FUNC
    );
}


