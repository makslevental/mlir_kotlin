// Generated by jextract

package org.mlir;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
class constants$309 {

    static final FunctionDescriptor LLVMSymbolLookupCallback$FUNC = FunctionDescriptor.of(Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_LONG_LONG$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_LONG_LONG$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle LLVMSymbolLookupCallback$MH = RuntimeHelper.downcallHandle(
        constants$309.LLVMSymbolLookupCallback$FUNC
    );
    static final FunctionDescriptor mlirRegisterTransformsPasses$FUNC = FunctionDescriptor.ofVoid();
    static final MethodHandle mlirRegisterTransformsPasses$MH = RuntimeHelper.downcallHandle(
        "mlirRegisterTransformsPasses",
        constants$309.mlirRegisterTransformsPasses$FUNC
    );
    static final FunctionDescriptor mlirCreateTransformsCSE$FUNC = FunctionDescriptor.of(MemoryLayout.structLayout(
        Constants$root.C_POINTER$LAYOUT.withName("ptr")
    ).withName("MlirPass"));
    static final MethodHandle mlirCreateTransformsCSE$MH = RuntimeHelper.downcallHandle(
        "mlirCreateTransformsCSE",
        constants$309.mlirCreateTransformsCSE$FUNC
    );
    static final FunctionDescriptor mlirRegisterTransformsCSE$FUNC = FunctionDescriptor.ofVoid();
    static final MethodHandle mlirRegisterTransformsCSE$MH = RuntimeHelper.downcallHandle(
        "mlirRegisterTransformsCSE",
        constants$309.mlirRegisterTransformsCSE$FUNC
    );
    static final FunctionDescriptor mlirCreateTransformsCanonicalizer$FUNC = FunctionDescriptor.of(MemoryLayout.structLayout(
        Constants$root.C_POINTER$LAYOUT.withName("ptr")
    ).withName("MlirPass"));
    static final MethodHandle mlirCreateTransformsCanonicalizer$MH = RuntimeHelper.downcallHandle(
        "mlirCreateTransformsCanonicalizer",
        constants$309.mlirCreateTransformsCanonicalizer$FUNC
    );
}


