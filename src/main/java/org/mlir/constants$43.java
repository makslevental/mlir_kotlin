// Generated by jextract

package org.mlir;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
class constants$43 {

    static final FunctionDescriptor mlirAffineDimExprGetPosition$FUNC = FunctionDescriptor.of(Constants$root.C_LONG_LONG$LAYOUT,
        MemoryLayout.structLayout(
            Constants$root.C_POINTER$LAYOUT.withName("ptr")
        ).withName("MlirAffineExpr")
    );
    static final MethodHandle mlirAffineDimExprGetPosition$MH = RuntimeHelper.downcallHandle(
        "mlirAffineDimExprGetPosition",
        constants$43.mlirAffineDimExprGetPosition$FUNC
    );
    static final FunctionDescriptor mlirAffineExprIsASymbol$FUNC = FunctionDescriptor.of(Constants$root.C_BOOL$LAYOUT,
        MemoryLayout.structLayout(
            Constants$root.C_POINTER$LAYOUT.withName("ptr")
        ).withName("MlirAffineExpr")
    );
    static final MethodHandle mlirAffineExprIsASymbol$MH = RuntimeHelper.downcallHandle(
        "mlirAffineExprIsASymbol",
        constants$43.mlirAffineExprIsASymbol$FUNC
    );
    static final FunctionDescriptor mlirAffineSymbolExprGet$FUNC = FunctionDescriptor.of(MemoryLayout.structLayout(
        Constants$root.C_POINTER$LAYOUT.withName("ptr")
    ).withName("MlirAffineExpr"),
        MemoryLayout.structLayout(
            Constants$root.C_POINTER$LAYOUT.withName("ptr")
        ).withName("MlirContext"),
        Constants$root.C_LONG_LONG$LAYOUT
    );
    static final MethodHandle mlirAffineSymbolExprGet$MH = RuntimeHelper.downcallHandle(
        "mlirAffineSymbolExprGet",
        constants$43.mlirAffineSymbolExprGet$FUNC
    );
    static final FunctionDescriptor mlirAffineSymbolExprGetPosition$FUNC = FunctionDescriptor.of(Constants$root.C_LONG_LONG$LAYOUT,
        MemoryLayout.structLayout(
            Constants$root.C_POINTER$LAYOUT.withName("ptr")
        ).withName("MlirAffineExpr")
    );
    static final MethodHandle mlirAffineSymbolExprGetPosition$MH = RuntimeHelper.downcallHandle(
        "mlirAffineSymbolExprGetPosition",
        constants$43.mlirAffineSymbolExprGetPosition$FUNC
    );
    static final FunctionDescriptor mlirAffineExprIsAConstant$FUNC = FunctionDescriptor.of(Constants$root.C_BOOL$LAYOUT,
        MemoryLayout.structLayout(
            Constants$root.C_POINTER$LAYOUT.withName("ptr")
        ).withName("MlirAffineExpr")
    );
    static final MethodHandle mlirAffineExprIsAConstant$MH = RuntimeHelper.downcallHandle(
        "mlirAffineExprIsAConstant",
        constants$43.mlirAffineExprIsAConstant$FUNC
    );
    static final FunctionDescriptor mlirAffineConstantExprGet$FUNC = FunctionDescriptor.of(MemoryLayout.structLayout(
        Constants$root.C_POINTER$LAYOUT.withName("ptr")
    ).withName("MlirAffineExpr"),
        MemoryLayout.structLayout(
            Constants$root.C_POINTER$LAYOUT.withName("ptr")
        ).withName("MlirContext"),
        Constants$root.C_LONG_LONG$LAYOUT
    );
    static final MethodHandle mlirAffineConstantExprGet$MH = RuntimeHelper.downcallHandle(
        "mlirAffineConstantExprGet",
        constants$43.mlirAffineConstantExprGet$FUNC
    );
}


