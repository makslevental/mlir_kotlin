// Generated by jextract

package org.mlir;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
class constants$0 {

    static final FunctionDescriptor mlirStringRefCreate$FUNC = FunctionDescriptor.of(MemoryLayout.structLayout(
        Constants$root.C_POINTER$LAYOUT.withName("data"),
        Constants$root.C_LONG_LONG$LAYOUT.withName("length")
    ).withName("MlirStringRef"),
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_LONG_LONG$LAYOUT
    );
    static final MethodHandle mlirStringRefCreate$MH = RuntimeHelper.downcallHandle(
        "mlirStringRefCreate",
        constants$0.mlirStringRefCreate$FUNC
    );
    static final FunctionDescriptor mlirStringRefCreateFromCString$FUNC = FunctionDescriptor.of(MemoryLayout.structLayout(
        Constants$root.C_POINTER$LAYOUT.withName("data"),
        Constants$root.C_LONG_LONG$LAYOUT.withName("length")
    ).withName("MlirStringRef"),
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle mlirStringRefCreateFromCString$MH = RuntimeHelper.downcallHandle(
        "mlirStringRefCreateFromCString",
        constants$0.mlirStringRefCreateFromCString$FUNC
    );
    static final FunctionDescriptor mlirStringRefEqual$FUNC = FunctionDescriptor.of(Constants$root.C_BOOL$LAYOUT,
        MemoryLayout.structLayout(
            Constants$root.C_POINTER$LAYOUT.withName("data"),
            Constants$root.C_LONG_LONG$LAYOUT.withName("length")
        ).withName("MlirStringRef"),
        MemoryLayout.structLayout(
            Constants$root.C_POINTER$LAYOUT.withName("data"),
            Constants$root.C_LONG_LONG$LAYOUT.withName("length")
        ).withName("MlirStringRef")
    );
    static final MethodHandle mlirStringRefEqual$MH = RuntimeHelper.downcallHandle(
        "mlirStringRefEqual",
        constants$0.mlirStringRefEqual$FUNC
    );
    static final FunctionDescriptor MlirStringCallback$FUNC = FunctionDescriptor.ofVoid(
        MemoryLayout.structLayout(
            Constants$root.C_POINTER$LAYOUT.withName("data"),
            Constants$root.C_LONG_LONG$LAYOUT.withName("length")
        ).withName("MlirStringRef"),
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle MlirStringCallback$MH = RuntimeHelper.downcallHandle(
        constants$0.MlirStringCallback$FUNC
    );
    static final FunctionDescriptor mlirLogicalResultIsSuccess$FUNC = FunctionDescriptor.of(Constants$root.C_BOOL$LAYOUT,
        MemoryLayout.structLayout(
            Constants$root.C_CHAR$LAYOUT.withName("value")
        ).withName("MlirLogicalResult")
    );
    static final MethodHandle mlirLogicalResultIsSuccess$MH = RuntimeHelper.downcallHandle(
        "mlirLogicalResultIsSuccess",
        constants$0.mlirLogicalResultIsSuccess$FUNC
    );
}


