// Generated by jextract

package org.mlir;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
class constants$333 {

    static final FunctionDescriptor mlirAffineMapAttrGet$FUNC = FunctionDescriptor.of(MemoryLayout.structLayout(
        Constants$root.C_POINTER$LAYOUT.withName("ptr")
    ).withName("MlirAttribute"),
        MemoryLayout.structLayout(
            Constants$root.C_POINTER$LAYOUT.withName("ptr")
        ).withName("MlirAffineMap")
    );
    static final MethodHandle mlirAffineMapAttrGet$MH = RuntimeHelper.downcallHandle(
        "mlirAffineMapAttrGet",
        constants$333.mlirAffineMapAttrGet$FUNC
    );
    static final FunctionDescriptor mlirAffineMapAttrGetValue$FUNC = FunctionDescriptor.of(MemoryLayout.structLayout(
        Constants$root.C_POINTER$LAYOUT.withName("ptr")
    ).withName("MlirAffineMap"),
        MemoryLayout.structLayout(
            Constants$root.C_POINTER$LAYOUT.withName("ptr")
        ).withName("MlirAttribute")
    );
    static final MethodHandle mlirAffineMapAttrGetValue$MH = RuntimeHelper.downcallHandle(
        "mlirAffineMapAttrGetValue",
        constants$333.mlirAffineMapAttrGetValue$FUNC
    );
    static final FunctionDescriptor mlirAttributeIsAArray$FUNC = FunctionDescriptor.of(Constants$root.C_BOOL$LAYOUT,
        MemoryLayout.structLayout(
            Constants$root.C_POINTER$LAYOUT.withName("ptr")
        ).withName("MlirAttribute")
    );
    static final MethodHandle mlirAttributeIsAArray$MH = RuntimeHelper.downcallHandle(
        "mlirAttributeIsAArray",
        constants$333.mlirAttributeIsAArray$FUNC
    );
    static final FunctionDescriptor mlirArrayAttrGet$FUNC = FunctionDescriptor.of(MemoryLayout.structLayout(
        Constants$root.C_POINTER$LAYOUT.withName("ptr")
    ).withName("MlirAttribute"),
        MemoryLayout.structLayout(
            Constants$root.C_POINTER$LAYOUT.withName("ptr")
        ).withName("MlirContext"),
        Constants$root.C_LONG_LONG$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle mlirArrayAttrGet$MH = RuntimeHelper.downcallHandle(
        "mlirArrayAttrGet",
        constants$333.mlirArrayAttrGet$FUNC
    );
    static final FunctionDescriptor mlirArrayAttrGetNumElements$FUNC = FunctionDescriptor.of(Constants$root.C_LONG_LONG$LAYOUT,
        MemoryLayout.structLayout(
            Constants$root.C_POINTER$LAYOUT.withName("ptr")
        ).withName("MlirAttribute")
    );
    static final MethodHandle mlirArrayAttrGetNumElements$MH = RuntimeHelper.downcallHandle(
        "mlirArrayAttrGetNumElements",
        constants$333.mlirArrayAttrGetNumElements$FUNC
    );
    static final FunctionDescriptor mlirArrayAttrGetElement$FUNC = FunctionDescriptor.of(MemoryLayout.structLayout(
        Constants$root.C_POINTER$LAYOUT.withName("ptr")
    ).withName("MlirAttribute"),
        MemoryLayout.structLayout(
            Constants$root.C_POINTER$LAYOUT.withName("ptr")
        ).withName("MlirAttribute"),
        Constants$root.C_LONG_LONG$LAYOUT
    );
    static final MethodHandle mlirArrayAttrGetElement$MH = RuntimeHelper.downcallHandle(
        "mlirArrayAttrGetElement",
        constants$333.mlirArrayAttrGetElement$FUNC
    );
}


