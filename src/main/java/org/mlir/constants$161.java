// Generated by jextract

package org.mlir;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
class constants$161 {

    static final FunctionDescriptor LLVMGetNextInstruction$FUNC = FunctionDescriptor.of(Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle LLVMGetNextInstruction$MH = RuntimeHelper.downcallHandle(
        "LLVMGetNextInstruction",
        constants$161.LLVMGetNextInstruction$FUNC
    );
    static final FunctionDescriptor LLVMGetPreviousInstruction$FUNC = FunctionDescriptor.of(Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle LLVMGetPreviousInstruction$MH = RuntimeHelper.downcallHandle(
        "LLVMGetPreviousInstruction",
        constants$161.LLVMGetPreviousInstruction$FUNC
    );
    static final FunctionDescriptor LLVMInstructionRemoveFromParent$FUNC = FunctionDescriptor.ofVoid(
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle LLVMInstructionRemoveFromParent$MH = RuntimeHelper.downcallHandle(
        "LLVMInstructionRemoveFromParent",
        constants$161.LLVMInstructionRemoveFromParent$FUNC
    );
    static final FunctionDescriptor LLVMInstructionEraseFromParent$FUNC = FunctionDescriptor.ofVoid(
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle LLVMInstructionEraseFromParent$MH = RuntimeHelper.downcallHandle(
        "LLVMInstructionEraseFromParent",
        constants$161.LLVMInstructionEraseFromParent$FUNC
    );
    static final FunctionDescriptor LLVMDeleteInstruction$FUNC = FunctionDescriptor.ofVoid(
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle LLVMDeleteInstruction$MH = RuntimeHelper.downcallHandle(
        "LLVMDeleteInstruction",
        constants$161.LLVMDeleteInstruction$FUNC
    );
    static final FunctionDescriptor LLVMGetInstructionOpcode$FUNC = FunctionDescriptor.of(Constants$root.C_INT$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle LLVMGetInstructionOpcode$MH = RuntimeHelper.downcallHandle(
        "LLVMGetInstructionOpcode",
        constants$161.LLVMGetInstructionOpcode$FUNC
    );
}


