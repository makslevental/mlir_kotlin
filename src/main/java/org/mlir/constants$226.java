// Generated by jextract

package org.mlir;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
class constants$226 {

    static final FunctionDescriptor mlirPassManagerEnableIRPrinting$FUNC = FunctionDescriptor.ofVoid(
        MemoryLayout.structLayout(
            Constants$root.C_POINTER$LAYOUT.withName("ptr")
        ).withName("MlirPassManager")
    );
    static final MethodHandle mlirPassManagerEnableIRPrinting$MH = RuntimeHelper.downcallHandle(
        "mlirPassManagerEnableIRPrinting",
        constants$226.mlirPassManagerEnableIRPrinting$FUNC
    );
    static final FunctionDescriptor mlirPassManagerEnableVerifier$FUNC = FunctionDescriptor.ofVoid(
        MemoryLayout.structLayout(
            Constants$root.C_POINTER$LAYOUT.withName("ptr")
        ).withName("MlirPassManager"),
        Constants$root.C_BOOL$LAYOUT
    );
    static final MethodHandle mlirPassManagerEnableVerifier$MH = RuntimeHelper.downcallHandle(
        "mlirPassManagerEnableVerifier",
        constants$226.mlirPassManagerEnableVerifier$FUNC
    );
    static final FunctionDescriptor mlirPassManagerGetNestedUnder$FUNC = FunctionDescriptor.of(MemoryLayout.structLayout(
        Constants$root.C_POINTER$LAYOUT.withName("ptr")
    ).withName("MlirOpPassManager"),
        MemoryLayout.structLayout(
            Constants$root.C_POINTER$LAYOUT.withName("ptr")
        ).withName("MlirPassManager"),
        MemoryLayout.structLayout(
            Constants$root.C_POINTER$LAYOUT.withName("data"),
            Constants$root.C_LONG_LONG$LAYOUT.withName("length")
        ).withName("MlirStringRef")
    );
    static final MethodHandle mlirPassManagerGetNestedUnder$MH = RuntimeHelper.downcallHandle(
        "mlirPassManagerGetNestedUnder",
        constants$226.mlirPassManagerGetNestedUnder$FUNC
    );
    static final FunctionDescriptor mlirOpPassManagerGetNestedUnder$FUNC = FunctionDescriptor.of(MemoryLayout.structLayout(
        Constants$root.C_POINTER$LAYOUT.withName("ptr")
    ).withName("MlirOpPassManager"),
        MemoryLayout.structLayout(
            Constants$root.C_POINTER$LAYOUT.withName("ptr")
        ).withName("MlirOpPassManager"),
        MemoryLayout.structLayout(
            Constants$root.C_POINTER$LAYOUT.withName("data"),
            Constants$root.C_LONG_LONG$LAYOUT.withName("length")
        ).withName("MlirStringRef")
    );
    static final MethodHandle mlirOpPassManagerGetNestedUnder$MH = RuntimeHelper.downcallHandle(
        "mlirOpPassManagerGetNestedUnder",
        constants$226.mlirOpPassManagerGetNestedUnder$FUNC
    );
    static final FunctionDescriptor mlirPassManagerAddOwnedPass$FUNC = FunctionDescriptor.ofVoid(
        MemoryLayout.structLayout(
            Constants$root.C_POINTER$LAYOUT.withName("ptr")
        ).withName("MlirPassManager"),
        MemoryLayout.structLayout(
            Constants$root.C_POINTER$LAYOUT.withName("ptr")
        ).withName("MlirPass")
    );
    static final MethodHandle mlirPassManagerAddOwnedPass$MH = RuntimeHelper.downcallHandle(
        "mlirPassManagerAddOwnedPass",
        constants$226.mlirPassManagerAddOwnedPass$FUNC
    );
    static final FunctionDescriptor mlirOpPassManagerAddOwnedPass$FUNC = FunctionDescriptor.ofVoid(
        MemoryLayout.structLayout(
            Constants$root.C_POINTER$LAYOUT.withName("ptr")
        ).withName("MlirOpPassManager"),
        MemoryLayout.structLayout(
            Constants$root.C_POINTER$LAYOUT.withName("ptr")
        ).withName("MlirPass")
    );
    static final MethodHandle mlirOpPassManagerAddOwnedPass$MH = RuntimeHelper.downcallHandle(
        "mlirOpPassManagerAddOwnedPass",
        constants$226.mlirOpPassManagerAddOwnedPass$FUNC
    );
}


