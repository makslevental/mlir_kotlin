// Generated by jextract

package org.mlir;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
class constants$359 {

    static final FunctionDescriptor mlirStridedLayoutAttrGetNumStrides$FUNC = FunctionDescriptor.of(Constants$root.C_LONG_LONG$LAYOUT,
        MemoryLayout.structLayout(
            Constants$root.C_POINTER$LAYOUT.withName("ptr")
        ).withName("MlirAttribute")
    );
    static final MethodHandle mlirStridedLayoutAttrGetNumStrides$MH = RuntimeHelper.downcallHandle(
        "mlirStridedLayoutAttrGetNumStrides",
        constants$359.mlirStridedLayoutAttrGetNumStrides$FUNC
    );
    static final FunctionDescriptor mlirStridedLayoutAttrGetStride$FUNC = FunctionDescriptor.of(Constants$root.C_LONG_LONG$LAYOUT,
        MemoryLayout.structLayout(
            Constants$root.C_POINTER$LAYOUT.withName("ptr")
        ).withName("MlirAttribute"),
        Constants$root.C_LONG_LONG$LAYOUT
    );
    static final MethodHandle mlirStridedLayoutAttrGetStride$MH = RuntimeHelper.downcallHandle(
        "mlirStridedLayoutAttrGetStride",
        constants$359.mlirStridedLayoutAttrGetStride$FUNC
    );
    static final MemorySegment __DARWIN_SUF_64_BIT_INO_T$SEGMENT = RuntimeHelper.CONSTANT_ALLOCATOR.allocateUtf8String("$INODE64");
    static final MemorySegment __DARWIN_SUF_1050$SEGMENT = RuntimeHelper.CONSTANT_ALLOCATOR.allocateUtf8String("$1050");
    static final MemorySegment __DARWIN_SUF_EXTSN$SEGMENT = RuntimeHelper.CONSTANT_ALLOCATOR.allocateUtf8String("$DARWIN_EXTSN");
    static final MemoryAddress __DARWIN_NULL$ADDR = MemoryAddress.ofLong(0L);
}


