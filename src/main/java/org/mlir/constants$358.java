// Generated by jextract

package org.mlir;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
class constants$358 {

    static final FunctionDescriptor mlirSparseElementsAttribute$FUNC = FunctionDescriptor.of(MemoryLayout.structLayout(
        Constants$root.C_POINTER$LAYOUT.withName("ptr")
    ).withName("MlirAttribute"),
        MemoryLayout.structLayout(
            Constants$root.C_POINTER$LAYOUT.withName("ptr")
        ).withName("MlirType"),
        MemoryLayout.structLayout(
            Constants$root.C_POINTER$LAYOUT.withName("ptr")
        ).withName("MlirAttribute"),
        MemoryLayout.structLayout(
            Constants$root.C_POINTER$LAYOUT.withName("ptr")
        ).withName("MlirAttribute")
    );
    static final MethodHandle mlirSparseElementsAttribute$MH = RuntimeHelper.downcallHandle(
        "mlirSparseElementsAttribute",
        constants$358.mlirSparseElementsAttribute$FUNC
    );
    static final FunctionDescriptor mlirSparseElementsAttrGetIndices$FUNC = FunctionDescriptor.of(MemoryLayout.structLayout(
        Constants$root.C_POINTER$LAYOUT.withName("ptr")
    ).withName("MlirAttribute"),
        MemoryLayout.structLayout(
            Constants$root.C_POINTER$LAYOUT.withName("ptr")
        ).withName("MlirAttribute")
    );
    static final MethodHandle mlirSparseElementsAttrGetIndices$MH = RuntimeHelper.downcallHandle(
        "mlirSparseElementsAttrGetIndices",
        constants$358.mlirSparseElementsAttrGetIndices$FUNC
    );
    static final FunctionDescriptor mlirSparseElementsAttrGetValues$FUNC = FunctionDescriptor.of(MemoryLayout.structLayout(
        Constants$root.C_POINTER$LAYOUT.withName("ptr")
    ).withName("MlirAttribute"),
        MemoryLayout.structLayout(
            Constants$root.C_POINTER$LAYOUT.withName("ptr")
        ).withName("MlirAttribute")
    );
    static final MethodHandle mlirSparseElementsAttrGetValues$MH = RuntimeHelper.downcallHandle(
        "mlirSparseElementsAttrGetValues",
        constants$358.mlirSparseElementsAttrGetValues$FUNC
    );
    static final FunctionDescriptor mlirAttributeIsAStridedLayout$FUNC = FunctionDescriptor.of(Constants$root.C_BOOL$LAYOUT,
        MemoryLayout.structLayout(
            Constants$root.C_POINTER$LAYOUT.withName("ptr")
        ).withName("MlirAttribute")
    );
    static final MethodHandle mlirAttributeIsAStridedLayout$MH = RuntimeHelper.downcallHandle(
        "mlirAttributeIsAStridedLayout",
        constants$358.mlirAttributeIsAStridedLayout$FUNC
    );
    static final FunctionDescriptor mlirStridedLayoutAttrGet$FUNC = FunctionDescriptor.of(MemoryLayout.structLayout(
        Constants$root.C_POINTER$LAYOUT.withName("ptr")
    ).withName("MlirAttribute"),
        MemoryLayout.structLayout(
            Constants$root.C_POINTER$LAYOUT.withName("ptr")
        ).withName("MlirContext"),
        Constants$root.C_LONG_LONG$LAYOUT,
        Constants$root.C_LONG_LONG$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle mlirStridedLayoutAttrGet$MH = RuntimeHelper.downcallHandle(
        "mlirStridedLayoutAttrGet",
        constants$358.mlirStridedLayoutAttrGet$FUNC
    );
    static final FunctionDescriptor mlirStridedLayoutAttrGetOffset$FUNC = FunctionDescriptor.of(Constants$root.C_LONG_LONG$LAYOUT,
        MemoryLayout.structLayout(
            Constants$root.C_POINTER$LAYOUT.withName("ptr")
        ).withName("MlirAttribute")
    );
    static final MethodHandle mlirStridedLayoutAttrGetOffset$MH = RuntimeHelper.downcallHandle(
        "mlirStridedLayoutAttrGetOffset",
        constants$358.mlirStridedLayoutAttrGetOffset$FUNC
    );
}


