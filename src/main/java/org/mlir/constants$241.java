// Generated by jextract

package org.mlir;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
class constants$241 {

    static final FunctionDescriptor mlirRegisterConversionConvertGpuLaunchFuncToVulkanLaunchFunc$FUNC = FunctionDescriptor.ofVoid();
    static final MethodHandle mlirRegisterConversionConvertGpuLaunchFuncToVulkanLaunchFunc$MH = RuntimeHelper.downcallHandle(
        "mlirRegisterConversionConvertGpuLaunchFuncToVulkanLaunchFunc",
        constants$241.mlirRegisterConversionConvertGpuLaunchFuncToVulkanLaunchFunc$FUNC
    );
    static final FunctionDescriptor mlirCreateConversionConvertGpuOpsToNVVMOps$FUNC = FunctionDescriptor.of(MemoryLayout.structLayout(
        Constants$root.C_POINTER$LAYOUT.withName("ptr")
    ).withName("MlirPass"));
    static final MethodHandle mlirCreateConversionConvertGpuOpsToNVVMOps$MH = RuntimeHelper.downcallHandle(
        "mlirCreateConversionConvertGpuOpsToNVVMOps",
        constants$241.mlirCreateConversionConvertGpuOpsToNVVMOps$FUNC
    );
    static final FunctionDescriptor mlirRegisterConversionConvertGpuOpsToNVVMOps$FUNC = FunctionDescriptor.ofVoid();
    static final MethodHandle mlirRegisterConversionConvertGpuOpsToNVVMOps$MH = RuntimeHelper.downcallHandle(
        "mlirRegisterConversionConvertGpuOpsToNVVMOps",
        constants$241.mlirRegisterConversionConvertGpuOpsToNVVMOps$FUNC
    );
    static final FunctionDescriptor mlirCreateConversionConvertGpuOpsToROCDLOps$FUNC = FunctionDescriptor.of(MemoryLayout.structLayout(
        Constants$root.C_POINTER$LAYOUT.withName("ptr")
    ).withName("MlirPass"));
    static final MethodHandle mlirCreateConversionConvertGpuOpsToROCDLOps$MH = RuntimeHelper.downcallHandle(
        "mlirCreateConversionConvertGpuOpsToROCDLOps",
        constants$241.mlirCreateConversionConvertGpuOpsToROCDLOps$FUNC
    );
    static final FunctionDescriptor mlirRegisterConversionConvertGpuOpsToROCDLOps$FUNC = FunctionDescriptor.ofVoid();
    static final MethodHandle mlirRegisterConversionConvertGpuOpsToROCDLOps$MH = RuntimeHelper.downcallHandle(
        "mlirRegisterConversionConvertGpuOpsToROCDLOps",
        constants$241.mlirRegisterConversionConvertGpuOpsToROCDLOps$FUNC
    );
    static final FunctionDescriptor mlirCreateConversionConvertIndexToLLVMPass$FUNC = FunctionDescriptor.of(MemoryLayout.structLayout(
        Constants$root.C_POINTER$LAYOUT.withName("ptr")
    ).withName("MlirPass"));
    static final MethodHandle mlirCreateConversionConvertIndexToLLVMPass$MH = RuntimeHelper.downcallHandle(
        "mlirCreateConversionConvertIndexToLLVMPass",
        constants$241.mlirCreateConversionConvertIndexToLLVMPass$FUNC
    );
}


