// Generated by jextract

package org.mlir;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
class constants$52 {

    static final FunctionDescriptor mlirAffineMapGetNumDims$FUNC = FunctionDescriptor.of(Constants$root.C_LONG_LONG$LAYOUT,
        MemoryLayout.structLayout(
            Constants$root.C_POINTER$LAYOUT.withName("ptr")
        ).withName("MlirAffineMap")
    );
    static final MethodHandle mlirAffineMapGetNumDims$MH = RuntimeHelper.downcallHandle(
        "mlirAffineMapGetNumDims",
        constants$52.mlirAffineMapGetNumDims$FUNC
    );
    static final FunctionDescriptor mlirAffineMapGetNumSymbols$FUNC = FunctionDescriptor.of(Constants$root.C_LONG_LONG$LAYOUT,
        MemoryLayout.structLayout(
            Constants$root.C_POINTER$LAYOUT.withName("ptr")
        ).withName("MlirAffineMap")
    );
    static final MethodHandle mlirAffineMapGetNumSymbols$MH = RuntimeHelper.downcallHandle(
        "mlirAffineMapGetNumSymbols",
        constants$52.mlirAffineMapGetNumSymbols$FUNC
    );
    static final FunctionDescriptor mlirAffineMapGetNumResults$FUNC = FunctionDescriptor.of(Constants$root.C_LONG_LONG$LAYOUT,
        MemoryLayout.structLayout(
            Constants$root.C_POINTER$LAYOUT.withName("ptr")
        ).withName("MlirAffineMap")
    );
    static final MethodHandle mlirAffineMapGetNumResults$MH = RuntimeHelper.downcallHandle(
        "mlirAffineMapGetNumResults",
        constants$52.mlirAffineMapGetNumResults$FUNC
    );
    static final FunctionDescriptor mlirAffineMapGetResult$FUNC = FunctionDescriptor.of(MemoryLayout.structLayout(
        Constants$root.C_POINTER$LAYOUT.withName("ptr")
    ).withName("MlirAffineExpr"),
        MemoryLayout.structLayout(
            Constants$root.C_POINTER$LAYOUT.withName("ptr")
        ).withName("MlirAffineMap"),
        Constants$root.C_LONG_LONG$LAYOUT
    );
    static final MethodHandle mlirAffineMapGetResult$MH = RuntimeHelper.downcallHandle(
        "mlirAffineMapGetResult",
        constants$52.mlirAffineMapGetResult$FUNC
    );
    static final FunctionDescriptor mlirAffineMapGetNumInputs$FUNC = FunctionDescriptor.of(Constants$root.C_LONG_LONG$LAYOUT,
        MemoryLayout.structLayout(
            Constants$root.C_POINTER$LAYOUT.withName("ptr")
        ).withName("MlirAffineMap")
    );
    static final MethodHandle mlirAffineMapGetNumInputs$MH = RuntimeHelper.downcallHandle(
        "mlirAffineMapGetNumInputs",
        constants$52.mlirAffineMapGetNumInputs$FUNC
    );
    static final FunctionDescriptor mlirAffineMapIsProjectedPermutation$FUNC = FunctionDescriptor.of(Constants$root.C_BOOL$LAYOUT,
        MemoryLayout.structLayout(
            Constants$root.C_POINTER$LAYOUT.withName("ptr")
        ).withName("MlirAffineMap")
    );
    static final MethodHandle mlirAffineMapIsProjectedPermutation$MH = RuntimeHelper.downcallHandle(
        "mlirAffineMapIsProjectedPermutation",
        constants$52.mlirAffineMapIsProjectedPermutation$FUNC
    );
}


