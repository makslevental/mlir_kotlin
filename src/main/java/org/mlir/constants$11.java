// Generated by jextract

package org.mlir;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
class constants$11 {

    static final FunctionDescriptor mlirOpPrintingFlagsCreate$FUNC = FunctionDescriptor.of(MemoryLayout.structLayout(
        Constants$root.C_POINTER$LAYOUT.withName("ptr")
    ).withName("MlirOpPrintingFlags"));
    static final MethodHandle mlirOpPrintingFlagsCreate$MH = RuntimeHelper.downcallHandle(
        "mlirOpPrintingFlagsCreate",
        constants$11.mlirOpPrintingFlagsCreate$FUNC
    );
    static final FunctionDescriptor mlirOpPrintingFlagsDestroy$FUNC = FunctionDescriptor.ofVoid(
        MemoryLayout.structLayout(
            Constants$root.C_POINTER$LAYOUT.withName("ptr")
        ).withName("MlirOpPrintingFlags")
    );
    static final MethodHandle mlirOpPrintingFlagsDestroy$MH = RuntimeHelper.downcallHandle(
        "mlirOpPrintingFlagsDestroy",
        constants$11.mlirOpPrintingFlagsDestroy$FUNC
    );
    static final FunctionDescriptor mlirOpPrintingFlagsElideLargeElementsAttrs$FUNC = FunctionDescriptor.ofVoid(
        MemoryLayout.structLayout(
            Constants$root.C_POINTER$LAYOUT.withName("ptr")
        ).withName("MlirOpPrintingFlags"),
        Constants$root.C_LONG_LONG$LAYOUT
    );
    static final MethodHandle mlirOpPrintingFlagsElideLargeElementsAttrs$MH = RuntimeHelper.downcallHandle(
        "mlirOpPrintingFlagsElideLargeElementsAttrs",
        constants$11.mlirOpPrintingFlagsElideLargeElementsAttrs$FUNC
    );
    static final FunctionDescriptor mlirOpPrintingFlagsEnableDebugInfo$FUNC = FunctionDescriptor.ofVoid(
        MemoryLayout.structLayout(
            Constants$root.C_POINTER$LAYOUT.withName("ptr")
        ).withName("MlirOpPrintingFlags"),
        Constants$root.C_BOOL$LAYOUT,
        Constants$root.C_BOOL$LAYOUT
    );
    static final MethodHandle mlirOpPrintingFlagsEnableDebugInfo$MH = RuntimeHelper.downcallHandle(
        "mlirOpPrintingFlagsEnableDebugInfo",
        constants$11.mlirOpPrintingFlagsEnableDebugInfo$FUNC
    );
    static final FunctionDescriptor mlirOpPrintingFlagsPrintGenericOpForm$FUNC = FunctionDescriptor.ofVoid(
        MemoryLayout.structLayout(
            Constants$root.C_POINTER$LAYOUT.withName("ptr")
        ).withName("MlirOpPrintingFlags")
    );
    static final MethodHandle mlirOpPrintingFlagsPrintGenericOpForm$MH = RuntimeHelper.downcallHandle(
        "mlirOpPrintingFlagsPrintGenericOpForm",
        constants$11.mlirOpPrintingFlagsPrintGenericOpForm$FUNC
    );
    static final FunctionDescriptor mlirOpPrintingFlagsUseLocalScope$FUNC = FunctionDescriptor.ofVoid(
        MemoryLayout.structLayout(
            Constants$root.C_POINTER$LAYOUT.withName("ptr")
        ).withName("MlirOpPrintingFlags")
    );
    static final MethodHandle mlirOpPrintingFlagsUseLocalScope$MH = RuntimeHelper.downcallHandle(
        "mlirOpPrintingFlagsUseLocalScope",
        constants$11.mlirOpPrintingFlagsUseLocalScope$FUNC
    );
}


