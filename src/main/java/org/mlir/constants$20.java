// Generated by jextract

package org.mlir;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
class constants$20 {

    static final FunctionDescriptor mlirBlockDetach$FUNC = FunctionDescriptor.ofVoid(
        MemoryLayout.structLayout(
            Constants$root.C_POINTER$LAYOUT.withName("ptr")
        ).withName("MlirBlock")
    );
    static final MethodHandle mlirBlockDetach$MH = RuntimeHelper.downcallHandle(
        "mlirBlockDetach",
        constants$20.mlirBlockDetach$FUNC
    );
    static final FunctionDescriptor mlirBlockIsNull$FUNC = FunctionDescriptor.of(Constants$root.C_BOOL$LAYOUT,
        MemoryLayout.structLayout(
            Constants$root.C_POINTER$LAYOUT.withName("ptr")
        ).withName("MlirBlock")
    );
    static final MethodHandle mlirBlockIsNull$MH = RuntimeHelper.downcallHandle(
        "mlirBlockIsNull",
        constants$20.mlirBlockIsNull$FUNC
    );
    static final FunctionDescriptor mlirBlockEqual$FUNC = FunctionDescriptor.of(Constants$root.C_BOOL$LAYOUT,
        MemoryLayout.structLayout(
            Constants$root.C_POINTER$LAYOUT.withName("ptr")
        ).withName("MlirBlock"),
        MemoryLayout.structLayout(
            Constants$root.C_POINTER$LAYOUT.withName("ptr")
        ).withName("MlirBlock")
    );
    static final MethodHandle mlirBlockEqual$MH = RuntimeHelper.downcallHandle(
        "mlirBlockEqual",
        constants$20.mlirBlockEqual$FUNC
    );
    static final FunctionDescriptor mlirBlockGetParentOperation$FUNC = FunctionDescriptor.of(MemoryLayout.structLayout(
        Constants$root.C_POINTER$LAYOUT.withName("ptr")
    ).withName("MlirOperation"),
        MemoryLayout.structLayout(
            Constants$root.C_POINTER$LAYOUT.withName("ptr")
        ).withName("MlirBlock")
    );
    static final MethodHandle mlirBlockGetParentOperation$MH = RuntimeHelper.downcallHandle(
        "mlirBlockGetParentOperation",
        constants$20.mlirBlockGetParentOperation$FUNC
    );
    static final FunctionDescriptor mlirBlockGetParentRegion$FUNC = FunctionDescriptor.of(MemoryLayout.structLayout(
        Constants$root.C_POINTER$LAYOUT.withName("ptr")
    ).withName("MlirRegion"),
        MemoryLayout.structLayout(
            Constants$root.C_POINTER$LAYOUT.withName("ptr")
        ).withName("MlirBlock")
    );
    static final MethodHandle mlirBlockGetParentRegion$MH = RuntimeHelper.downcallHandle(
        "mlirBlockGetParentRegion",
        constants$20.mlirBlockGetParentRegion$FUNC
    );
    static final FunctionDescriptor mlirBlockGetNextInRegion$FUNC = FunctionDescriptor.of(MemoryLayout.structLayout(
        Constants$root.C_POINTER$LAYOUT.withName("ptr")
    ).withName("MlirBlock"),
        MemoryLayout.structLayout(
            Constants$root.C_POINTER$LAYOUT.withName("ptr")
        ).withName("MlirBlock")
    );
    static final MethodHandle mlirBlockGetNextInRegion$MH = RuntimeHelper.downcallHandle(
        "mlirBlockGetNextInRegion",
        constants$20.mlirBlockGetNextInRegion$FUNC
    );
}


