// Generated by jextract

package org.mlir;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
class constants$17 {

    static final FunctionDescriptor mlirOperationWriteBytecode$FUNC = FunctionDescriptor.ofVoid(
        MemoryLayout.structLayout(
            Constants$root.C_POINTER$LAYOUT.withName("ptr")
        ).withName("MlirOperation"),
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle mlirOperationWriteBytecode$MH = RuntimeHelper.downcallHandle(
        "mlirOperationWriteBytecode",
        constants$17.mlirOperationWriteBytecode$FUNC
    );
    static final FunctionDescriptor mlirOperationDump$FUNC = FunctionDescriptor.ofVoid(
        MemoryLayout.structLayout(
            Constants$root.C_POINTER$LAYOUT.withName("ptr")
        ).withName("MlirOperation")
    );
    static final MethodHandle mlirOperationDump$MH = RuntimeHelper.downcallHandle(
        "mlirOperationDump",
        constants$17.mlirOperationDump$FUNC
    );
    static final FunctionDescriptor mlirOperationVerify$FUNC = FunctionDescriptor.of(Constants$root.C_BOOL$LAYOUT,
        MemoryLayout.structLayout(
            Constants$root.C_POINTER$LAYOUT.withName("ptr")
        ).withName("MlirOperation")
    );
    static final MethodHandle mlirOperationVerify$MH = RuntimeHelper.downcallHandle(
        "mlirOperationVerify",
        constants$17.mlirOperationVerify$FUNC
    );
    static final FunctionDescriptor mlirOperationMoveAfter$FUNC = FunctionDescriptor.ofVoid(
        MemoryLayout.structLayout(
            Constants$root.C_POINTER$LAYOUT.withName("ptr")
        ).withName("MlirOperation"),
        MemoryLayout.structLayout(
            Constants$root.C_POINTER$LAYOUT.withName("ptr")
        ).withName("MlirOperation")
    );
    static final MethodHandle mlirOperationMoveAfter$MH = RuntimeHelper.downcallHandle(
        "mlirOperationMoveAfter",
        constants$17.mlirOperationMoveAfter$FUNC
    );
    static final FunctionDescriptor mlirOperationMoveBefore$FUNC = FunctionDescriptor.ofVoid(
        MemoryLayout.structLayout(
            Constants$root.C_POINTER$LAYOUT.withName("ptr")
        ).withName("MlirOperation"),
        MemoryLayout.structLayout(
            Constants$root.C_POINTER$LAYOUT.withName("ptr")
        ).withName("MlirOperation")
    );
    static final MethodHandle mlirOperationMoveBefore$MH = RuntimeHelper.downcallHandle(
        "mlirOperationMoveBefore",
        constants$17.mlirOperationMoveBefore$FUNC
    );
    static final FunctionDescriptor mlirRegionCreate$FUNC = FunctionDescriptor.of(MemoryLayout.structLayout(
        Constants$root.C_POINTER$LAYOUT.withName("ptr")
    ).withName("MlirRegion"));
    static final MethodHandle mlirRegionCreate$MH = RuntimeHelper.downcallHandle(
        "mlirRegionCreate",
        constants$17.mlirRegionCreate$FUNC
    );
}


