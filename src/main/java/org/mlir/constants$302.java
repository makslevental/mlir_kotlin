// Generated by jextract

package org.mlir;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
class constants$302 {

    static final FunctionDescriptor mlirTypeIsACalibratedQuantizedType$FUNC = FunctionDescriptor.of(Constants$root.C_BOOL$LAYOUT,
        MemoryLayout.structLayout(
            Constants$root.C_POINTER$LAYOUT.withName("ptr")
        ).withName("MlirType")
    );
    static final MethodHandle mlirTypeIsACalibratedQuantizedType$MH = RuntimeHelper.downcallHandle(
        "mlirTypeIsACalibratedQuantizedType",
        constants$302.mlirTypeIsACalibratedQuantizedType$FUNC
    );
    static final FunctionDescriptor mlirCalibratedQuantizedTypeGet$FUNC = FunctionDescriptor.of(MemoryLayout.structLayout(
        Constants$root.C_POINTER$LAYOUT.withName("ptr")
    ).withName("MlirType"),
        MemoryLayout.structLayout(
            Constants$root.C_POINTER$LAYOUT.withName("ptr")
        ).withName("MlirType"),
        Constants$root.C_DOUBLE$LAYOUT,
        Constants$root.C_DOUBLE$LAYOUT
    );
    static final MethodHandle mlirCalibratedQuantizedTypeGet$MH = RuntimeHelper.downcallHandle(
        "mlirCalibratedQuantizedTypeGet",
        constants$302.mlirCalibratedQuantizedTypeGet$FUNC
    );
    static final FunctionDescriptor mlirCalibratedQuantizedTypeGetMin$FUNC = FunctionDescriptor.of(Constants$root.C_DOUBLE$LAYOUT,
        MemoryLayout.structLayout(
            Constants$root.C_POINTER$LAYOUT.withName("ptr")
        ).withName("MlirType")
    );
    static final MethodHandle mlirCalibratedQuantizedTypeGetMin$MH = RuntimeHelper.downcallHandle(
        "mlirCalibratedQuantizedTypeGetMin",
        constants$302.mlirCalibratedQuantizedTypeGetMin$FUNC
    );
    static final FunctionDescriptor mlirCalibratedQuantizedTypeGetMax$FUNC = FunctionDescriptor.of(Constants$root.C_DOUBLE$LAYOUT,
        MemoryLayout.structLayout(
            Constants$root.C_POINTER$LAYOUT.withName("ptr")
        ).withName("MlirType")
    );
    static final MethodHandle mlirCalibratedQuantizedTypeGetMax$MH = RuntimeHelper.downcallHandle(
        "mlirCalibratedQuantizedTypeGetMax",
        constants$302.mlirCalibratedQuantizedTypeGetMax$FUNC
    );
    static final FunctionDescriptor LLVMAddAggressiveDCEPass$FUNC = FunctionDescriptor.ofVoid(
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle LLVMAddAggressiveDCEPass$MH = RuntimeHelper.downcallHandle(
        "LLVMAddAggressiveDCEPass",
        constants$302.LLVMAddAggressiveDCEPass$FUNC
    );
    static final FunctionDescriptor LLVMAddDCEPass$FUNC = FunctionDescriptor.ofVoid(
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle LLVMAddDCEPass$MH = RuntimeHelper.downcallHandle(
        "LLVMAddDCEPass",
        constants$302.LLVMAddDCEPass$FUNC
    );
}


