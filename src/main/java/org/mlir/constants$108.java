// Generated by jextract

package org.mlir;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
class constants$108 {

    static final FunctionDescriptor LLVMIsUndef$FUNC = FunctionDescriptor.of(Constants$root.C_INT$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle LLVMIsUndef$MH = RuntimeHelper.downcallHandle(
        "LLVMIsUndef",
        constants$108.LLVMIsUndef$FUNC
    );
    static final FunctionDescriptor LLVMIsPoison$FUNC = FunctionDescriptor.of(Constants$root.C_INT$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle LLVMIsPoison$MH = RuntimeHelper.downcallHandle(
        "LLVMIsPoison",
        constants$108.LLVMIsPoison$FUNC
    );
    static final FunctionDescriptor LLVMIsAArgument$FUNC = FunctionDescriptor.of(Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle LLVMIsAArgument$MH = RuntimeHelper.downcallHandle(
        "LLVMIsAArgument",
        constants$108.LLVMIsAArgument$FUNC
    );
    static final FunctionDescriptor LLVMIsABasicBlock$FUNC = FunctionDescriptor.of(Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle LLVMIsABasicBlock$MH = RuntimeHelper.downcallHandle(
        "LLVMIsABasicBlock",
        constants$108.LLVMIsABasicBlock$FUNC
    );
    static final FunctionDescriptor LLVMIsAInlineAsm$FUNC = FunctionDescriptor.of(Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle LLVMIsAInlineAsm$MH = RuntimeHelper.downcallHandle(
        "LLVMIsAInlineAsm",
        constants$108.LLVMIsAInlineAsm$FUNC
    );
    static final FunctionDescriptor LLVMIsAUser$FUNC = FunctionDescriptor.of(Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle LLVMIsAUser$MH = RuntimeHelper.downcallHandle(
        "LLVMIsAUser",
        constants$108.LLVMIsAUser$FUNC
    );
}


