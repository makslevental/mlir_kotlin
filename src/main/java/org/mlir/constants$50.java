// Generated by jextract

package org.mlir;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
class constants$50 {

    static final FunctionDescriptor mlirAffineMapEmptyGet$FUNC = FunctionDescriptor.of(MemoryLayout.structLayout(
        Constants$root.C_POINTER$LAYOUT.withName("ptr")
    ).withName("MlirAffineMap"),
        MemoryLayout.structLayout(
            Constants$root.C_POINTER$LAYOUT.withName("ptr")
        ).withName("MlirContext")
    );
    static final MethodHandle mlirAffineMapEmptyGet$MH = RuntimeHelper.downcallHandle(
        "mlirAffineMapEmptyGet",
        constants$50.mlirAffineMapEmptyGet$FUNC
    );
    static final FunctionDescriptor mlirAffineMapZeroResultGet$FUNC = FunctionDescriptor.of(MemoryLayout.structLayout(
        Constants$root.C_POINTER$LAYOUT.withName("ptr")
    ).withName("MlirAffineMap"),
        MemoryLayout.structLayout(
            Constants$root.C_POINTER$LAYOUT.withName("ptr")
        ).withName("MlirContext"),
        Constants$root.C_LONG_LONG$LAYOUT,
        Constants$root.C_LONG_LONG$LAYOUT
    );
    static final MethodHandle mlirAffineMapZeroResultGet$MH = RuntimeHelper.downcallHandle(
        "mlirAffineMapZeroResultGet",
        constants$50.mlirAffineMapZeroResultGet$FUNC
    );
    static final FunctionDescriptor mlirAffineMapGet$FUNC = FunctionDescriptor.of(MemoryLayout.structLayout(
        Constants$root.C_POINTER$LAYOUT.withName("ptr")
    ).withName("MlirAffineMap"),
        MemoryLayout.structLayout(
            Constants$root.C_POINTER$LAYOUT.withName("ptr")
        ).withName("MlirContext"),
        Constants$root.C_LONG_LONG$LAYOUT,
        Constants$root.C_LONG_LONG$LAYOUT,
        Constants$root.C_LONG_LONG$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle mlirAffineMapGet$MH = RuntimeHelper.downcallHandle(
        "mlirAffineMapGet",
        constants$50.mlirAffineMapGet$FUNC
    );
    static final FunctionDescriptor mlirAffineMapConstantGet$FUNC = FunctionDescriptor.of(MemoryLayout.structLayout(
        Constants$root.C_POINTER$LAYOUT.withName("ptr")
    ).withName("MlirAffineMap"),
        MemoryLayout.structLayout(
            Constants$root.C_POINTER$LAYOUT.withName("ptr")
        ).withName("MlirContext"),
        Constants$root.C_LONG_LONG$LAYOUT
    );
    static final MethodHandle mlirAffineMapConstantGet$MH = RuntimeHelper.downcallHandle(
        "mlirAffineMapConstantGet",
        constants$50.mlirAffineMapConstantGet$FUNC
    );
    static final FunctionDescriptor mlirAffineMapMultiDimIdentityGet$FUNC = FunctionDescriptor.of(MemoryLayout.structLayout(
        Constants$root.C_POINTER$LAYOUT.withName("ptr")
    ).withName("MlirAffineMap"),
        MemoryLayout.structLayout(
            Constants$root.C_POINTER$LAYOUT.withName("ptr")
        ).withName("MlirContext"),
        Constants$root.C_LONG_LONG$LAYOUT
    );
    static final MethodHandle mlirAffineMapMultiDimIdentityGet$MH = RuntimeHelper.downcallHandle(
        "mlirAffineMapMultiDimIdentityGet",
        constants$50.mlirAffineMapMultiDimIdentityGet$FUNC
    );
    static final FunctionDescriptor mlirAffineMapMinorIdentityGet$FUNC = FunctionDescriptor.of(MemoryLayout.structLayout(
        Constants$root.C_POINTER$LAYOUT.withName("ptr")
    ).withName("MlirAffineMap"),
        MemoryLayout.structLayout(
            Constants$root.C_POINTER$LAYOUT.withName("ptr")
        ).withName("MlirContext"),
        Constants$root.C_LONG_LONG$LAYOUT,
        Constants$root.C_LONG_LONG$LAYOUT
    );
    static final MethodHandle mlirAffineMapMinorIdentityGet$MH = RuntimeHelper.downcallHandle(
        "mlirAffineMapMinorIdentityGet",
        constants$50.mlirAffineMapMinorIdentityGet$FUNC
    );
}


