// Generated by jextract

package org.mlir;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
class constants$284 {

    static final FunctionDescriptor thinlto_codegen_add_cross_referenced_symbol$FUNC = FunctionDescriptor.ofVoid(
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_INT$LAYOUT
    );
    static final MethodHandle thinlto_codegen_add_cross_referenced_symbol$MH = RuntimeHelper.downcallHandle(
        "thinlto_codegen_add_cross_referenced_symbol",
        constants$284.thinlto_codegen_add_cross_referenced_symbol$FUNC
    );
    static final FunctionDescriptor thinlto_codegen_set_cache_dir$FUNC = FunctionDescriptor.ofVoid(
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle thinlto_codegen_set_cache_dir$MH = RuntimeHelper.downcallHandle(
        "thinlto_codegen_set_cache_dir",
        constants$284.thinlto_codegen_set_cache_dir$FUNC
    );
    static final FunctionDescriptor thinlto_codegen_set_cache_pruning_interval$FUNC = FunctionDescriptor.ofVoid(
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_INT$LAYOUT
    );
    static final MethodHandle thinlto_codegen_set_cache_pruning_interval$MH = RuntimeHelper.downcallHandle(
        "thinlto_codegen_set_cache_pruning_interval",
        constants$284.thinlto_codegen_set_cache_pruning_interval$FUNC
    );
    static final FunctionDescriptor thinlto_codegen_set_final_cache_size_relative_to_available_space$FUNC = FunctionDescriptor.ofVoid(
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_INT$LAYOUT
    );
    static final MethodHandle thinlto_codegen_set_final_cache_size_relative_to_available_space$MH = RuntimeHelper.downcallHandle(
        "thinlto_codegen_set_final_cache_size_relative_to_available_space",
        constants$284.thinlto_codegen_set_final_cache_size_relative_to_available_space$FUNC
    );
    static final FunctionDescriptor thinlto_codegen_set_cache_entry_expiration$FUNC = FunctionDescriptor.ofVoid(
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_INT$LAYOUT
    );
    static final MethodHandle thinlto_codegen_set_cache_entry_expiration$MH = RuntimeHelper.downcallHandle(
        "thinlto_codegen_set_cache_entry_expiration",
        constants$284.thinlto_codegen_set_cache_entry_expiration$FUNC
    );
    static final FunctionDescriptor thinlto_codegen_set_cache_size_bytes$FUNC = FunctionDescriptor.ofVoid(
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_INT$LAYOUT
    );
    static final MethodHandle thinlto_codegen_set_cache_size_bytes$MH = RuntimeHelper.downcallHandle(
        "thinlto_codegen_set_cache_size_bytes",
        constants$284.thinlto_codegen_set_cache_size_bytes$FUNC
    );
}


