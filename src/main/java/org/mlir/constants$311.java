// Generated by jextract

package org.mlir;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
class constants$311 {

    static final FunctionDescriptor mlirRegisterTransformsInliner$FUNC = FunctionDescriptor.ofVoid();
    static final MethodHandle mlirRegisterTransformsInliner$MH = RuntimeHelper.downcallHandle(
        "mlirRegisterTransformsInliner",
        constants$311.mlirRegisterTransformsInliner$FUNC
    );
    static final FunctionDescriptor mlirCreateTransformsLocationSnapshot$FUNC = FunctionDescriptor.of(MemoryLayout.structLayout(
        Constants$root.C_POINTER$LAYOUT.withName("ptr")
    ).withName("MlirPass"));
    static final MethodHandle mlirCreateTransformsLocationSnapshot$MH = RuntimeHelper.downcallHandle(
        "mlirCreateTransformsLocationSnapshot",
        constants$311.mlirCreateTransformsLocationSnapshot$FUNC
    );
    static final FunctionDescriptor mlirRegisterTransformsLocationSnapshot$FUNC = FunctionDescriptor.ofVoid();
    static final MethodHandle mlirRegisterTransformsLocationSnapshot$MH = RuntimeHelper.downcallHandle(
        "mlirRegisterTransformsLocationSnapshot",
        constants$311.mlirRegisterTransformsLocationSnapshot$FUNC
    );
    static final FunctionDescriptor mlirCreateTransformsLoopInvariantCodeMotion$FUNC = FunctionDescriptor.of(MemoryLayout.structLayout(
        Constants$root.C_POINTER$LAYOUT.withName("ptr")
    ).withName("MlirPass"));
    static final MethodHandle mlirCreateTransformsLoopInvariantCodeMotion$MH = RuntimeHelper.downcallHandle(
        "mlirCreateTransformsLoopInvariantCodeMotion",
        constants$311.mlirCreateTransformsLoopInvariantCodeMotion$FUNC
    );
    static final FunctionDescriptor mlirRegisterTransformsLoopInvariantCodeMotion$FUNC = FunctionDescriptor.ofVoid();
    static final MethodHandle mlirRegisterTransformsLoopInvariantCodeMotion$MH = RuntimeHelper.downcallHandle(
        "mlirRegisterTransformsLoopInvariantCodeMotion",
        constants$311.mlirRegisterTransformsLoopInvariantCodeMotion$FUNC
    );
    static final FunctionDescriptor mlirCreateTransformsPrintOpStats$FUNC = FunctionDescriptor.of(MemoryLayout.structLayout(
        Constants$root.C_POINTER$LAYOUT.withName("ptr")
    ).withName("MlirPass"));
    static final MethodHandle mlirCreateTransformsPrintOpStats$MH = RuntimeHelper.downcallHandle(
        "mlirCreateTransformsPrintOpStats",
        constants$311.mlirCreateTransformsPrintOpStats$FUNC
    );
}


