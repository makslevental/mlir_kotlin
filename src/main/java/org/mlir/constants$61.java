// Generated by jextract

package org.mlir;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
class constants$61 {

    static final FunctionDescriptor mlirShapedTypeIsDynamicStrideOrOffset$FUNC = FunctionDescriptor.of(Constants$root.C_BOOL$LAYOUT,
        Constants$root.C_LONG_LONG$LAYOUT
    );
    static final MethodHandle mlirShapedTypeIsDynamicStrideOrOffset$MH = RuntimeHelper.downcallHandle(
        "mlirShapedTypeIsDynamicStrideOrOffset",
        constants$61.mlirShapedTypeIsDynamicStrideOrOffset$FUNC
    );
    static final FunctionDescriptor mlirShapedTypeGetDynamicStrideOrOffset$FUNC = FunctionDescriptor.of(Constants$root.C_LONG_LONG$LAYOUT);
    static final MethodHandle mlirShapedTypeGetDynamicStrideOrOffset$MH = RuntimeHelper.downcallHandle(
        "mlirShapedTypeGetDynamicStrideOrOffset",
        constants$61.mlirShapedTypeGetDynamicStrideOrOffset$FUNC
    );
    static final FunctionDescriptor mlirTypeIsAVector$FUNC = FunctionDescriptor.of(Constants$root.C_BOOL$LAYOUT,
        MemoryLayout.structLayout(
            Constants$root.C_POINTER$LAYOUT.withName("ptr")
        ).withName("MlirType")
    );
    static final MethodHandle mlirTypeIsAVector$MH = RuntimeHelper.downcallHandle(
        "mlirTypeIsAVector",
        constants$61.mlirTypeIsAVector$FUNC
    );
    static final FunctionDescriptor mlirVectorTypeGet$FUNC = FunctionDescriptor.of(MemoryLayout.structLayout(
        Constants$root.C_POINTER$LAYOUT.withName("ptr")
    ).withName("MlirType"),
        Constants$root.C_LONG_LONG$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        MemoryLayout.structLayout(
            Constants$root.C_POINTER$LAYOUT.withName("ptr")
        ).withName("MlirType")
    );
    static final MethodHandle mlirVectorTypeGet$MH = RuntimeHelper.downcallHandle(
        "mlirVectorTypeGet",
        constants$61.mlirVectorTypeGet$FUNC
    );
    static final FunctionDescriptor mlirVectorTypeGetChecked$FUNC = FunctionDescriptor.of(MemoryLayout.structLayout(
        Constants$root.C_POINTER$LAYOUT.withName("ptr")
    ).withName("MlirType"),
        MemoryLayout.structLayout(
            Constants$root.C_POINTER$LAYOUT.withName("ptr")
        ).withName("MlirLocation"),
        Constants$root.C_LONG_LONG$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        MemoryLayout.structLayout(
            Constants$root.C_POINTER$LAYOUT.withName("ptr")
        ).withName("MlirType")
    );
    static final MethodHandle mlirVectorTypeGetChecked$MH = RuntimeHelper.downcallHandle(
        "mlirVectorTypeGetChecked",
        constants$61.mlirVectorTypeGetChecked$FUNC
    );
    static final FunctionDescriptor mlirTypeIsATensor$FUNC = FunctionDescriptor.of(Constants$root.C_BOOL$LAYOUT,
        MemoryLayout.structLayout(
            Constants$root.C_POINTER$LAYOUT.withName("ptr")
        ).withName("MlirType")
    );
    static final MethodHandle mlirTypeIsATensor$MH = RuntimeHelper.downcallHandle(
        "mlirTypeIsATensor",
        constants$61.mlirTypeIsATensor$FUNC
    );
}


