// Generated by jextract

package org.mlir;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
class constants$293 {

    static final FunctionDescriptor mlirPDLValueTypeGet$FUNC = FunctionDescriptor.of(MemoryLayout.structLayout(
        Constants$root.C_POINTER$LAYOUT.withName("ptr")
    ).withName("MlirType"),
        MemoryLayout.structLayout(
            Constants$root.C_POINTER$LAYOUT.withName("ptr")
        ).withName("MlirContext")
    );
    static final MethodHandle mlirPDLValueTypeGet$MH = RuntimeHelper.downcallHandle(
        "mlirPDLValueTypeGet",
        constants$293.mlirPDLValueTypeGet$FUNC
    );
    static final FunctionDescriptor mlirExecutionEngineCreate$FUNC = FunctionDescriptor.of(MemoryLayout.structLayout(
        Constants$root.C_POINTER$LAYOUT.withName("ptr")
    ).withName("MlirExecutionEngine"),
        MemoryLayout.structLayout(
            Constants$root.C_POINTER$LAYOUT.withName("ptr")
        ).withName("MlirModule"),
        Constants$root.C_INT$LAYOUT,
        Constants$root.C_INT$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_BOOL$LAYOUT
    );
    static final MethodHandle mlirExecutionEngineCreate$MH = RuntimeHelper.downcallHandle(
        "mlirExecutionEngineCreate",
        constants$293.mlirExecutionEngineCreate$FUNC
    );
    static final FunctionDescriptor mlirExecutionEngineDestroy$FUNC = FunctionDescriptor.ofVoid(
        MemoryLayout.structLayout(
            Constants$root.C_POINTER$LAYOUT.withName("ptr")
        ).withName("MlirExecutionEngine")
    );
    static final MethodHandle mlirExecutionEngineDestroy$MH = RuntimeHelper.downcallHandle(
        "mlirExecutionEngineDestroy",
        constants$293.mlirExecutionEngineDestroy$FUNC
    );
    static final FunctionDescriptor mlirExecutionEngineIsNull$FUNC = FunctionDescriptor.of(Constants$root.C_BOOL$LAYOUT,
        MemoryLayout.structLayout(
            Constants$root.C_POINTER$LAYOUT.withName("ptr")
        ).withName("MlirExecutionEngine")
    );
    static final MethodHandle mlirExecutionEngineIsNull$MH = RuntimeHelper.downcallHandle(
        "mlirExecutionEngineIsNull",
        constants$293.mlirExecutionEngineIsNull$FUNC
    );
    static final FunctionDescriptor mlirExecutionEngineInvokePacked$FUNC = FunctionDescriptor.of(MemoryLayout.structLayout(
        Constants$root.C_CHAR$LAYOUT.withName("value")
    ).withName("MlirLogicalResult"),
        MemoryLayout.structLayout(
            Constants$root.C_POINTER$LAYOUT.withName("ptr")
        ).withName("MlirExecutionEngine"),
        MemoryLayout.structLayout(
            Constants$root.C_POINTER$LAYOUT.withName("data"),
            Constants$root.C_LONG_LONG$LAYOUT.withName("length")
        ).withName("MlirStringRef"),
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle mlirExecutionEngineInvokePacked$MH = RuntimeHelper.downcallHandle(
        "mlirExecutionEngineInvokePacked",
        constants$293.mlirExecutionEngineInvokePacked$FUNC
    );
    static final FunctionDescriptor mlirExecutionEngineLookupPacked$FUNC = FunctionDescriptor.of(Constants$root.C_POINTER$LAYOUT,
        MemoryLayout.structLayout(
            Constants$root.C_POINTER$LAYOUT.withName("ptr")
        ).withName("MlirExecutionEngine"),
        MemoryLayout.structLayout(
            Constants$root.C_POINTER$LAYOUT.withName("data"),
            Constants$root.C_LONG_LONG$LAYOUT.withName("length")
        ).withName("MlirStringRef")
    );
    static final MethodHandle mlirExecutionEngineLookupPacked$MH = RuntimeHelper.downcallHandle(
        "mlirExecutionEngineLookupPacked",
        constants$293.mlirExecutionEngineLookupPacked$FUNC
    );
}


