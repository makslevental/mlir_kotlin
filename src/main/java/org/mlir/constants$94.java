// Generated by jextract

package org.mlir;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
class constants$94 {

    static final FunctionDescriptor LLVMSetModuleInlineAsm$FUNC = FunctionDescriptor.ofVoid(
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle LLVMSetModuleInlineAsm$MH = RuntimeHelper.downcallHandle(
        "LLVMSetModuleInlineAsm",
        constants$94.LLVMSetModuleInlineAsm$FUNC
    );
    static final FunctionDescriptor LLVMGetTypeKind$FUNC = FunctionDescriptor.of(Constants$root.C_INT$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle LLVMGetTypeKind$MH = RuntimeHelper.downcallHandle(
        "LLVMGetTypeKind",
        constants$94.LLVMGetTypeKind$FUNC
    );
    static final FunctionDescriptor LLVMTypeIsSized$FUNC = FunctionDescriptor.of(Constants$root.C_INT$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle LLVMTypeIsSized$MH = RuntimeHelper.downcallHandle(
        "LLVMTypeIsSized",
        constants$94.LLVMTypeIsSized$FUNC
    );
    static final FunctionDescriptor LLVMGetTypeContext$FUNC = FunctionDescriptor.of(Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle LLVMGetTypeContext$MH = RuntimeHelper.downcallHandle(
        "LLVMGetTypeContext",
        constants$94.LLVMGetTypeContext$FUNC
    );
    static final FunctionDescriptor LLVMDumpType$FUNC = FunctionDescriptor.ofVoid(
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle LLVMDumpType$MH = RuntimeHelper.downcallHandle(
        "LLVMDumpType",
        constants$94.LLVMDumpType$FUNC
    );
    static final FunctionDescriptor LLVMPrintTypeToString$FUNC = FunctionDescriptor.of(Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle LLVMPrintTypeToString$MH = RuntimeHelper.downcallHandle(
        "LLVMPrintTypeToString",
        constants$94.LLVMPrintTypeToString$FUNC
    );
}


