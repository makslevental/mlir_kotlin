// Generated by jextract

package org.mlir;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
class constants$105 {

    static final FunctionDescriptor LLVMLabelTypeInContext$FUNC = FunctionDescriptor.of(Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle LLVMLabelTypeInContext$MH = RuntimeHelper.downcallHandle(
        "LLVMLabelTypeInContext",
        constants$105.LLVMLabelTypeInContext$FUNC
    );
    static final FunctionDescriptor LLVMX86MMXTypeInContext$FUNC = FunctionDescriptor.of(Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle LLVMX86MMXTypeInContext$MH = RuntimeHelper.downcallHandle(
        "LLVMX86MMXTypeInContext",
        constants$105.LLVMX86MMXTypeInContext$FUNC
    );
    static final FunctionDescriptor LLVMX86AMXTypeInContext$FUNC = FunctionDescriptor.of(Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle LLVMX86AMXTypeInContext$MH = RuntimeHelper.downcallHandle(
        "LLVMX86AMXTypeInContext",
        constants$105.LLVMX86AMXTypeInContext$FUNC
    );
    static final FunctionDescriptor LLVMTokenTypeInContext$FUNC = FunctionDescriptor.of(Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle LLVMTokenTypeInContext$MH = RuntimeHelper.downcallHandle(
        "LLVMTokenTypeInContext",
        constants$105.LLVMTokenTypeInContext$FUNC
    );
    static final FunctionDescriptor LLVMMetadataTypeInContext$FUNC = FunctionDescriptor.of(Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle LLVMMetadataTypeInContext$MH = RuntimeHelper.downcallHandle(
        "LLVMMetadataTypeInContext",
        constants$105.LLVMMetadataTypeInContext$FUNC
    );
    static final FunctionDescriptor LLVMVoidType$FUNC = FunctionDescriptor.of(Constants$root.C_POINTER$LAYOUT);
    static final MethodHandle LLVMVoidType$MH = RuntimeHelper.downcallHandle(
        "LLVMVoidType",
        constants$105.LLVMVoidType$FUNC
    );
}


