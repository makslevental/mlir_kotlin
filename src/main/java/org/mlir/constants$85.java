// Generated by jextract

package org.mlir;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
class constants$85 {

    static final FunctionDescriptor LLVMGetStringAttributeValue$FUNC = FunctionDescriptor.of(Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle LLVMGetStringAttributeValue$MH = RuntimeHelper.downcallHandle(
        "LLVMGetStringAttributeValue",
        constants$85.LLVMGetStringAttributeValue$FUNC
    );
    static final FunctionDescriptor LLVMIsEnumAttribute$FUNC = FunctionDescriptor.of(Constants$root.C_INT$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle LLVMIsEnumAttribute$MH = RuntimeHelper.downcallHandle(
        "LLVMIsEnumAttribute",
        constants$85.LLVMIsEnumAttribute$FUNC
    );
    static final FunctionDescriptor LLVMIsStringAttribute$FUNC = FunctionDescriptor.of(Constants$root.C_INT$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle LLVMIsStringAttribute$MH = RuntimeHelper.downcallHandle(
        "LLVMIsStringAttribute",
        constants$85.LLVMIsStringAttribute$FUNC
    );
    static final FunctionDescriptor LLVMIsTypeAttribute$FUNC = FunctionDescriptor.of(Constants$root.C_INT$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle LLVMIsTypeAttribute$MH = RuntimeHelper.downcallHandle(
        "LLVMIsTypeAttribute",
        constants$85.LLVMIsTypeAttribute$FUNC
    );
    static final FunctionDescriptor LLVMGetTypeByName2$FUNC = FunctionDescriptor.of(Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle LLVMGetTypeByName2$MH = RuntimeHelper.downcallHandle(
        "LLVMGetTypeByName2",
        constants$85.LLVMGetTypeByName2$FUNC
    );
    static final FunctionDescriptor LLVMModuleCreateWithName$FUNC = FunctionDescriptor.of(Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle LLVMModuleCreateWithName$MH = RuntimeHelper.downcallHandle(
        "LLVMModuleCreateWithName",
        constants$85.LLVMModuleCreateWithName$FUNC
    );
}


